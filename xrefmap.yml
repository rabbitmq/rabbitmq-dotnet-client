### YamlMime:XRefMap
sorted: true
references:
- uid: OpenTelemetry.Trace
  name: OpenTelemetry.Trace
  href: api/OpenTelemetry.Trace.html
  commentId: N:OpenTelemetry.Trace
  fullName: OpenTelemetry.Trace
  nameWithType: OpenTelemetry.Trace
- uid: OpenTelemetry.Trace.OpenTelemetryExtensions
  name: OpenTelemetryExtensions
  href: api/OpenTelemetry.Trace.OpenTelemetryExtensions.html
  commentId: T:OpenTelemetry.Trace.OpenTelemetryExtensions
  fullName: OpenTelemetry.Trace.OpenTelemetryExtensions
  nameWithType: OpenTelemetryExtensions
- uid: OpenTelemetry.Trace.OpenTelemetryExtensions.AddRabbitMQInstrumentation(OpenTelemetry.Trace.TracerProviderBuilder)
  name: AddRabbitMQInstrumentation(TracerProviderBuilder)
  href: api/OpenTelemetry.Trace.OpenTelemetryExtensions.html#OpenTelemetry_Trace_OpenTelemetryExtensions_AddRabbitMQInstrumentation_OpenTelemetry_Trace_TracerProviderBuilder_
  commentId: M:OpenTelemetry.Trace.OpenTelemetryExtensions.AddRabbitMQInstrumentation(OpenTelemetry.Trace.TracerProviderBuilder)
  fullName: OpenTelemetry.Trace.OpenTelemetryExtensions.AddRabbitMQInstrumentation(OpenTelemetry.Trace.TracerProviderBuilder)
  nameWithType: OpenTelemetryExtensions.AddRabbitMQInstrumentation(TracerProviderBuilder)
- uid: OpenTelemetry.Trace.OpenTelemetryExtensions.AddRabbitMQInstrumentation*
  name: AddRabbitMQInstrumentation
  href: api/OpenTelemetry.Trace.OpenTelemetryExtensions.html#OpenTelemetry_Trace_OpenTelemetryExtensions_AddRabbitMQInstrumentation_
  commentId: Overload:OpenTelemetry.Trace.OpenTelemetryExtensions.AddRabbitMQInstrumentation
  isSpec: "True"
  fullName: OpenTelemetry.Trace.OpenTelemetryExtensions.AddRabbitMQInstrumentation
  nameWithType: OpenTelemetryExtensions.AddRabbitMQInstrumentation
- uid: RabbitMQ.Client
  name: RabbitMQ.Client
  href: api/RabbitMQ.Client.html
  commentId: N:RabbitMQ.Client
  fullName: RabbitMQ.Client
  nameWithType: RabbitMQ.Client
- uid: RabbitMQ.Client.AmqpTcpEndpoint
  name: AmqpTcpEndpoint
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html
  commentId: T:RabbitMQ.Client.AmqpTcpEndpoint
  fullName: RabbitMQ.Client.AmqpTcpEndpoint
  nameWithType: AmqpTcpEndpoint
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor
  name: AmqpTcpEndpoint()
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor
  name.vb: New()
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint()
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.New()
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint()
  nameWithType.vb: AmqpTcpEndpoint.New()
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.String,System.Int32)
  name: AmqpTcpEndpoint(string, int)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_System_String_System_Int32_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.String,System.Int32)
  name.vb: New(String, Integer)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint(string, int)
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.New(String, Integer)
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint(string, int)
  nameWithType.vb: AmqpTcpEndpoint.New(String, Integer)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.String,System.Int32,RabbitMQ.Client.SslOption)
  name: AmqpTcpEndpoint(string, int, SslOption)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_System_String_System_Int32_RabbitMQ_Client_SslOption_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.String,System.Int32,RabbitMQ.Client.SslOption)
  name.vb: New(String, Integer, SslOption)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint(string, int, RabbitMQ.Client.SslOption)
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.New(String, Integer, RabbitMQ.Client.SslOption)
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint(string, int, SslOption)
  nameWithType.vb: AmqpTcpEndpoint.New(String, Integer, SslOption)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.String,System.Int32,RabbitMQ.Client.SslOption,System.UInt32)
  name: AmqpTcpEndpoint(string, int, SslOption, uint)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_System_String_System_Int32_RabbitMQ_Client_SslOption_System_UInt32_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.String,System.Int32,RabbitMQ.Client.SslOption,System.UInt32)
  name.vb: New(String, Integer, SslOption, UInteger)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint(string, int, RabbitMQ.Client.SslOption, uint)
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.New(String, Integer, RabbitMQ.Client.SslOption, UInteger)
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint(string, int, SslOption, uint)
  nameWithType.vb: AmqpTcpEndpoint.New(String, Integer, SslOption, UInteger)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.Uri)
  name: AmqpTcpEndpoint(Uri)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_System_Uri_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.Uri)
  name.vb: New(Uri)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint(System.Uri)
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.New(System.Uri)
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint(Uri)
  nameWithType.vb: AmqpTcpEndpoint.New(Uri)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.Uri,RabbitMQ.Client.SslOption)
  name: AmqpTcpEndpoint(Uri, SslOption)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_System_Uri_RabbitMQ_Client_SslOption_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.#ctor(System.Uri,RabbitMQ.Client.SslOption)
  name.vb: New(Uri, SslOption)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint(System.Uri, RabbitMQ.Client.SslOption)
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.New(System.Uri, RabbitMQ.Client.SslOption)
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint(Uri, SslOption)
  nameWithType.vb: AmqpTcpEndpoint.New(Uri, SslOption)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.#ctor*
  name: AmqpTcpEndpoint
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint__ctor_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AmqpTcpEndpoint
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.New
  nameWithType: AmqpTcpEndpoint.AmqpTcpEndpoint
  nameWithType.vb: AmqpTcpEndpoint.New
- uid: RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily
  name: AddressFamily
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_AddressFamily
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily
  nameWithType: AmqpTcpEndpoint.AddressFamily
- uid: RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily*
  name: AddressFamily
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_AddressFamily_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.AddressFamily
  nameWithType: AmqpTcpEndpoint.AddressFamily
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Clone
  name: Clone()
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Clone
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.Clone
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Clone()
  nameWithType: AmqpTcpEndpoint.Clone()
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Clone*
  name: Clone
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Clone_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Clone
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Clone
  nameWithType: AmqpTcpEndpoint.Clone
- uid: RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname(System.String)
  name: CloneWithHostname(string)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_CloneWithHostname_System_String_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname(System.String)
  name.vb: CloneWithHostname(String)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname(string)
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname(String)
  nameWithType: AmqpTcpEndpoint.CloneWithHostname(string)
  nameWithType.vb: AmqpTcpEndpoint.CloneWithHostname(String)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname*
  name: CloneWithHostname
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_CloneWithHostname_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.CloneWithHostname
  nameWithType: AmqpTcpEndpoint.CloneWithHostname
- uid: RabbitMQ.Client.AmqpTcpEndpoint.DefaultAmqpSslPort
  name: DefaultAmqpSslPort
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_DefaultAmqpSslPort
  commentId: F:RabbitMQ.Client.AmqpTcpEndpoint.DefaultAmqpSslPort
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.DefaultAmqpSslPort
  nameWithType: AmqpTcpEndpoint.DefaultAmqpSslPort
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Equals(System.Object)
  name: Equals(object?)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Equals_System_Object_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Equals(object?)
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.Equals(Object)
  nameWithType: AmqpTcpEndpoint.Equals(object?)
  nameWithType.vb: AmqpTcpEndpoint.Equals(Object)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Equals*
  name: Equals
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Equals_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Equals
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Equals
  nameWithType: AmqpTcpEndpoint.Equals
- uid: RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode
  name: GetHashCode()
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_GetHashCode
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode()
  nameWithType: AmqpTcpEndpoint.GetHashCode()
- uid: RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode*
  name: GetHashCode
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_GetHashCode_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.GetHashCode
  nameWithType: AmqpTcpEndpoint.GetHashCode
- uid: RabbitMQ.Client.AmqpTcpEndpoint.HostName
  name: HostName
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_HostName
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.HostName
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.HostName
  nameWithType: AmqpTcpEndpoint.HostName
- uid: RabbitMQ.Client.AmqpTcpEndpoint.HostName*
  name: HostName
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_HostName_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.HostName
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.HostName
  nameWithType: AmqpTcpEndpoint.HostName
- uid: RabbitMQ.Client.AmqpTcpEndpoint.MaxInboundMessageBodySize
  name: MaxInboundMessageBodySize
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_MaxInboundMessageBodySize
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.MaxInboundMessageBodySize
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.MaxInboundMessageBodySize
  nameWithType: AmqpTcpEndpoint.MaxInboundMessageBodySize
- uid: RabbitMQ.Client.AmqpTcpEndpoint.MaxInboundMessageBodySize*
  name: MaxInboundMessageBodySize
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_MaxInboundMessageBodySize_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.MaxInboundMessageBodySize
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.MaxInboundMessageBodySize
  nameWithType: AmqpTcpEndpoint.MaxInboundMessageBodySize
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Parse(System.String)
  name: Parse(string)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Parse_System_String_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.Parse(System.String)
  name.vb: Parse(String)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Parse(string)
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.Parse(String)
  nameWithType: AmqpTcpEndpoint.Parse(string)
  nameWithType.vb: AmqpTcpEndpoint.Parse(String)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Parse*
  name: Parse
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Parse_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Parse
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Parse
  nameWithType: AmqpTcpEndpoint.Parse
- uid: RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple(System.String)
  name: ParseMultiple(string)
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_ParseMultiple_System_String_
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple(System.String)
  name.vb: ParseMultiple(String)
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple(string)
  fullName.vb: RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple(String)
  nameWithType: AmqpTcpEndpoint.ParseMultiple(string)
  nameWithType.vb: AmqpTcpEndpoint.ParseMultiple(String)
- uid: RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple*
  name: ParseMultiple
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_ParseMultiple_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.ParseMultiple
  nameWithType: AmqpTcpEndpoint.ParseMultiple
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Port
  name: Port
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Port
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.Port
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Port
  nameWithType: AmqpTcpEndpoint.Port
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Port*
  name: Port
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Port_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Port
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Port
  nameWithType: AmqpTcpEndpoint.Port
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Protocol
  name: Protocol
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Protocol
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.Protocol
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Protocol
  nameWithType: AmqpTcpEndpoint.Protocol
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Protocol*
  name: Protocol
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Protocol_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Protocol
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Protocol
  nameWithType: AmqpTcpEndpoint.Protocol
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Ssl
  name: Ssl
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Ssl
  commentId: P:RabbitMQ.Client.AmqpTcpEndpoint.Ssl
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Ssl
  nameWithType: AmqpTcpEndpoint.Ssl
- uid: RabbitMQ.Client.AmqpTcpEndpoint.Ssl*
  name: Ssl
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_Ssl_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.Ssl
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.Ssl
  nameWithType: AmqpTcpEndpoint.Ssl
- uid: RabbitMQ.Client.AmqpTcpEndpoint.ToString
  name: ToString()
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_ToString
  commentId: M:RabbitMQ.Client.AmqpTcpEndpoint.ToString
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.ToString()
  nameWithType: AmqpTcpEndpoint.ToString()
- uid: RabbitMQ.Client.AmqpTcpEndpoint.ToString*
  name: ToString
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_ToString_
  commentId: Overload:RabbitMQ.Client.AmqpTcpEndpoint.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.ToString
  nameWithType: AmqpTcpEndpoint.ToString
- uid: RabbitMQ.Client.AmqpTcpEndpoint.UseDefaultPort
  name: UseDefaultPort
  href: api/RabbitMQ.Client.AmqpTcpEndpoint.html#RabbitMQ_Client_AmqpTcpEndpoint_UseDefaultPort
  commentId: F:RabbitMQ.Client.AmqpTcpEndpoint.UseDefaultPort
  fullName: RabbitMQ.Client.AmqpTcpEndpoint.UseDefaultPort
  nameWithType: AmqpTcpEndpoint.UseDefaultPort
- uid: RabbitMQ.Client.AmqpTimestamp
  name: AmqpTimestamp
  href: api/RabbitMQ.Client.AmqpTimestamp.html
  commentId: T:RabbitMQ.Client.AmqpTimestamp
  fullName: RabbitMQ.Client.AmqpTimestamp
  nameWithType: AmqpTimestamp
- uid: RabbitMQ.Client.AmqpTimestamp.#ctor(System.Int64)
  name: AmqpTimestamp(long)
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp__ctor_System_Int64_
  commentId: M:RabbitMQ.Client.AmqpTimestamp.#ctor(System.Int64)
  name.vb: New(Long)
  fullName: RabbitMQ.Client.AmqpTimestamp.AmqpTimestamp(long)
  fullName.vb: RabbitMQ.Client.AmqpTimestamp.New(Long)
  nameWithType: AmqpTimestamp.AmqpTimestamp(long)
  nameWithType.vb: AmqpTimestamp.New(Long)
- uid: RabbitMQ.Client.AmqpTimestamp.#ctor*
  name: AmqpTimestamp
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp__ctor_
  commentId: Overload:RabbitMQ.Client.AmqpTimestamp.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.AmqpTimestamp.AmqpTimestamp
  fullName.vb: RabbitMQ.Client.AmqpTimestamp.New
  nameWithType: AmqpTimestamp.AmqpTimestamp
  nameWithType.vb: AmqpTimestamp.New
- uid: RabbitMQ.Client.AmqpTimestamp.Equals(RabbitMQ.Client.AmqpTimestamp)
  name: Equals(AmqpTimestamp)
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_Equals_RabbitMQ_Client_AmqpTimestamp_
  commentId: M:RabbitMQ.Client.AmqpTimestamp.Equals(RabbitMQ.Client.AmqpTimestamp)
  fullName: RabbitMQ.Client.AmqpTimestamp.Equals(RabbitMQ.Client.AmqpTimestamp)
  nameWithType: AmqpTimestamp.Equals(AmqpTimestamp)
- uid: RabbitMQ.Client.AmqpTimestamp.Equals(System.Object)
  name: Equals(object?)
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_Equals_System_Object_
  commentId: M:RabbitMQ.Client.AmqpTimestamp.Equals(System.Object)
  name.vb: Equals(Object)
  fullName: RabbitMQ.Client.AmqpTimestamp.Equals(object?)
  fullName.vb: RabbitMQ.Client.AmqpTimestamp.Equals(Object)
  nameWithType: AmqpTimestamp.Equals(object?)
  nameWithType.vb: AmqpTimestamp.Equals(Object)
- uid: RabbitMQ.Client.AmqpTimestamp.Equals*
  name: Equals
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_Equals_
  commentId: Overload:RabbitMQ.Client.AmqpTimestamp.Equals
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTimestamp.Equals
  nameWithType: AmqpTimestamp.Equals
- uid: RabbitMQ.Client.AmqpTimestamp.GetHashCode
  name: GetHashCode()
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_GetHashCode
  commentId: M:RabbitMQ.Client.AmqpTimestamp.GetHashCode
  fullName: RabbitMQ.Client.AmqpTimestamp.GetHashCode()
  nameWithType: AmqpTimestamp.GetHashCode()
- uid: RabbitMQ.Client.AmqpTimestamp.GetHashCode*
  name: GetHashCode
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_GetHashCode_
  commentId: Overload:RabbitMQ.Client.AmqpTimestamp.GetHashCode
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTimestamp.GetHashCode
  nameWithType: AmqpTimestamp.GetHashCode
- uid: RabbitMQ.Client.AmqpTimestamp.ToString
  name: ToString()
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_ToString
  commentId: M:RabbitMQ.Client.AmqpTimestamp.ToString
  fullName: RabbitMQ.Client.AmqpTimestamp.ToString()
  nameWithType: AmqpTimestamp.ToString()
- uid: RabbitMQ.Client.AmqpTimestamp.ToString*
  name: ToString
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_ToString_
  commentId: Overload:RabbitMQ.Client.AmqpTimestamp.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.AmqpTimestamp.ToString
  nameWithType: AmqpTimestamp.ToString
- uid: RabbitMQ.Client.AmqpTimestamp.UnixTime
  name: UnixTime
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_UnixTime
  commentId: F:RabbitMQ.Client.AmqpTimestamp.UnixTime
  fullName: RabbitMQ.Client.AmqpTimestamp.UnixTime
  nameWithType: AmqpTimestamp.UnixTime
- uid: RabbitMQ.Client.AmqpTimestamp.op_Equality(RabbitMQ.Client.AmqpTimestamp,RabbitMQ.Client.AmqpTimestamp)
  name: operator ==(AmqpTimestamp, AmqpTimestamp)
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_op_Equality_RabbitMQ_Client_AmqpTimestamp_RabbitMQ_Client_AmqpTimestamp_
  commentId: M:RabbitMQ.Client.AmqpTimestamp.op_Equality(RabbitMQ.Client.AmqpTimestamp,RabbitMQ.Client.AmqpTimestamp)
  name.vb: =(AmqpTimestamp, AmqpTimestamp)
  fullName: RabbitMQ.Client.AmqpTimestamp.operator ==(RabbitMQ.Client.AmqpTimestamp, RabbitMQ.Client.AmqpTimestamp)
  fullName.vb: RabbitMQ.Client.AmqpTimestamp.=(RabbitMQ.Client.AmqpTimestamp, RabbitMQ.Client.AmqpTimestamp)
  nameWithType: AmqpTimestamp.operator ==(AmqpTimestamp, AmqpTimestamp)
  nameWithType.vb: AmqpTimestamp.=(AmqpTimestamp, AmqpTimestamp)
- uid: RabbitMQ.Client.AmqpTimestamp.op_Equality*
  name: operator ==
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_op_Equality_
  commentId: Overload:RabbitMQ.Client.AmqpTimestamp.op_Equality
  isSpec: "True"
  name.vb: =
  fullName: RabbitMQ.Client.AmqpTimestamp.operator ==
  fullName.vb: RabbitMQ.Client.AmqpTimestamp.=
  nameWithType: AmqpTimestamp.operator ==
  nameWithType.vb: AmqpTimestamp.=
- uid: RabbitMQ.Client.AmqpTimestamp.op_Inequality(RabbitMQ.Client.AmqpTimestamp,RabbitMQ.Client.AmqpTimestamp)
  name: operator !=(AmqpTimestamp, AmqpTimestamp)
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_op_Inequality_RabbitMQ_Client_AmqpTimestamp_RabbitMQ_Client_AmqpTimestamp_
  commentId: M:RabbitMQ.Client.AmqpTimestamp.op_Inequality(RabbitMQ.Client.AmqpTimestamp,RabbitMQ.Client.AmqpTimestamp)
  name.vb: <>(AmqpTimestamp, AmqpTimestamp)
  fullName: RabbitMQ.Client.AmqpTimestamp.operator !=(RabbitMQ.Client.AmqpTimestamp, RabbitMQ.Client.AmqpTimestamp)
  fullName.vb: RabbitMQ.Client.AmqpTimestamp.<>(RabbitMQ.Client.AmqpTimestamp, RabbitMQ.Client.AmqpTimestamp)
  nameWithType: AmqpTimestamp.operator !=(AmqpTimestamp, AmqpTimestamp)
  nameWithType.vb: AmqpTimestamp.<>(AmqpTimestamp, AmqpTimestamp)
- uid: RabbitMQ.Client.AmqpTimestamp.op_Inequality*
  name: operator !=
  href: api/RabbitMQ.Client.AmqpTimestamp.html#RabbitMQ_Client_AmqpTimestamp_op_Inequality_
  commentId: Overload:RabbitMQ.Client.AmqpTimestamp.op_Inequality
  isSpec: "True"
  name.vb: <>
  fullName: RabbitMQ.Client.AmqpTimestamp.operator !=
  fullName.vb: RabbitMQ.Client.AmqpTimestamp.<>
  nameWithType: AmqpTimestamp.operator !=
  nameWithType.vb: AmqpTimestamp.<>
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer
  name: AsyncDefaultBasicConsumer
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html
  commentId: T:RabbitMQ.Client.AsyncDefaultBasicConsumer
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer
  nameWithType: AsyncDefaultBasicConsumer
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.#ctor(RabbitMQ.Client.IChannel)
  name: AsyncDefaultBasicConsumer(IChannel)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer__ctor_RabbitMQ_Client_IChannel_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.#ctor(RabbitMQ.Client.IChannel)
  name.vb: New(IChannel)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.AsyncDefaultBasicConsumer(RabbitMQ.Client.IChannel)
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.New(RabbitMQ.Client.IChannel)
  nameWithType: AsyncDefaultBasicConsumer.AsyncDefaultBasicConsumer(IChannel)
  nameWithType.vb: AsyncDefaultBasicConsumer.New(IChannel)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.#ctor*
  name: AsyncDefaultBasicConsumer
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer__ctor_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.AsyncDefaultBasicConsumer
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.New
  nameWithType: AsyncDefaultBasicConsumer.AsyncDefaultBasicConsumer
  nameWithType.vb: AsyncDefaultBasicConsumer.New
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.Channel
  name: Channel
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_Channel
  commentId: P:RabbitMQ.Client.AsyncDefaultBasicConsumer.Channel
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.Channel
  nameWithType: AsyncDefaultBasicConsumer.Channel
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.Channel*
  name: Channel
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_Channel_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.Channel
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.Channel
  nameWithType: AsyncDefaultBasicConsumer.Channel
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags
  name: ConsumerTags
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_ConsumerTags
  commentId: P:RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags
  nameWithType: AsyncDefaultBasicConsumer.ConsumerTags
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags*
  name: ConsumerTags
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_ConsumerTags_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.ConsumerTags
  nameWithType: AsyncDefaultBasicConsumer.ConsumerTags
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelAsync(System.String,System.Threading.CancellationToken)
  name: HandleBasicCancelAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicCancelAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelAsync(System.String,System.Threading.CancellationToken)
  name.vb: HandleBasicCancelAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelAsync(String, System.Threading.CancellationToken)
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicCancelAsync(string, CancellationToken)
  nameWithType.vb: AsyncDefaultBasicConsumer.HandleBasicCancelAsync(String, CancellationToken)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelAsync*
  name: HandleBasicCancelAsync
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicCancelAsync_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelAsync
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicCancelAsync
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOkAsync(System.String,System.Threading.CancellationToken)
  name: HandleBasicCancelOkAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicCancelOkAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOkAsync(System.String,System.Threading.CancellationToken)
  name.vb: HandleBasicCancelOkAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOkAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOkAsync(String, System.Threading.CancellationToken)
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicCancelOkAsync(string, CancellationToken)
  nameWithType.vb: AsyncDefaultBasicConsumer.HandleBasicCancelOkAsync(String, CancellationToken)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOkAsync*
  name: HandleBasicCancelOkAsync
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicCancelOkAsync_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOkAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicCancelOkAsync
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicCancelOkAsync
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOkAsync(System.String,System.Threading.CancellationToken)
  name: HandleBasicConsumeOkAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicConsumeOkAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOkAsync(System.String,System.Threading.CancellationToken)
  name.vb: HandleBasicConsumeOkAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOkAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOkAsync(String, System.Threading.CancellationToken)
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicConsumeOkAsync(string, CancellationToken)
  nameWithType.vb: AsyncDefaultBasicConsumer.HandleBasicConsumeOkAsync(String, CancellationToken)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOkAsync*
  name: HandleBasicConsumeOkAsync
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicConsumeOkAsync_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOkAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicConsumeOkAsync
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicConsumeOkAsync
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliverAsync(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: HandleBasicDeliverAsync(string, ulong, bool, string, string, IReadOnlyBasicProperties, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicDeliverAsync_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IReadOnlyBasicProperties_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliverAsync(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: HandleBasicDeliverAsync(String, ULong, Boolean, String, String, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliverAsync(string, ulong, bool, string, string, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliverAsync(String, ULong, Boolean, String, String, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicDeliverAsync(string, ulong, bool, string, string, IReadOnlyBasicProperties, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: AsyncDefaultBasicConsumer.HandleBasicDeliverAsync(String, ULong, Boolean, String, String, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliverAsync*
  name: HandleBasicDeliverAsync
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleBasicDeliverAsync_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliverAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleBasicDeliverAsync
  nameWithType: AsyncDefaultBasicConsumer.HandleBasicDeliverAsync
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleChannelShutdownAsync(System.Object,RabbitMQ.Client.Events.ShutdownEventArgs)
  name: HandleChannelShutdownAsync(object, ShutdownEventArgs)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleChannelShutdownAsync_System_Object_RabbitMQ_Client_Events_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleChannelShutdownAsync(System.Object,RabbitMQ.Client.Events.ShutdownEventArgs)
  name.vb: HandleChannelShutdownAsync(Object, ShutdownEventArgs)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleChannelShutdownAsync(object, RabbitMQ.Client.Events.ShutdownEventArgs)
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleChannelShutdownAsync(Object, RabbitMQ.Client.Events.ShutdownEventArgs)
  nameWithType: AsyncDefaultBasicConsumer.HandleChannelShutdownAsync(object, ShutdownEventArgs)
  nameWithType.vb: AsyncDefaultBasicConsumer.HandleChannelShutdownAsync(Object, ShutdownEventArgs)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleChannelShutdownAsync*
  name: HandleChannelShutdownAsync
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_HandleChannelShutdownAsync_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleChannelShutdownAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.HandleChannelShutdownAsync
  nameWithType: AsyncDefaultBasicConsumer.HandleChannelShutdownAsync
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning
  name: IsRunning
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_IsRunning
  commentId: P:RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning
  nameWithType: AsyncDefaultBasicConsumer.IsRunning
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning*
  name: IsRunning
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_IsRunning_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.IsRunning
  nameWithType: AsyncDefaultBasicConsumer.IsRunning
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancelAsync(System.String[],System.Threading.CancellationToken)
  name: OnCancelAsync(string[], CancellationToken)
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_OnCancelAsync_System_String___System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancelAsync(System.String[],System.Threading.CancellationToken)
  name.vb: OnCancelAsync(String(), CancellationToken)
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancelAsync(string[], System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancelAsync(String(), System.Threading.CancellationToken)
  nameWithType: AsyncDefaultBasicConsumer.OnCancelAsync(string[], CancellationToken)
  nameWithType.vb: AsyncDefaultBasicConsumer.OnCancelAsync(String(), CancellationToken)
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancelAsync*
  name: OnCancelAsync
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_OnCancelAsync_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancelAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.OnCancelAsync
  nameWithType: AsyncDefaultBasicConsumer.OnCancelAsync
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason
  name: ShutdownReason
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_ShutdownReason
  commentId: P:RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason
  nameWithType: AsyncDefaultBasicConsumer.ShutdownReason
- uid: RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason*
  name: ShutdownReason
  href: api/RabbitMQ.Client.AsyncDefaultBasicConsumer.html#RabbitMQ_Client_AsyncDefaultBasicConsumer_ShutdownReason_
  commentId: Overload:RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason
  isSpec: "True"
  fullName: RabbitMQ.Client.AsyncDefaultBasicConsumer.ShutdownReason
  nameWithType: AsyncDefaultBasicConsumer.ShutdownReason
- uid: RabbitMQ.Client.BasicCredentialsProvider
  name: BasicCredentialsProvider
  href: api/RabbitMQ.Client.BasicCredentialsProvider.html
  commentId: T:RabbitMQ.Client.BasicCredentialsProvider
  fullName: RabbitMQ.Client.BasicCredentialsProvider
  nameWithType: BasicCredentialsProvider
- uid: RabbitMQ.Client.BasicCredentialsProvider.#ctor(System.String,System.String,System.String)
  name: BasicCredentialsProvider(string?, string, string)
  href: api/RabbitMQ.Client.BasicCredentialsProvider.html#RabbitMQ_Client_BasicCredentialsProvider__ctor_System_String_System_String_System_String_
  commentId: M:RabbitMQ.Client.BasicCredentialsProvider.#ctor(System.String,System.String,System.String)
  name.vb: New(String, String, String)
  fullName: RabbitMQ.Client.BasicCredentialsProvider.BasicCredentialsProvider(string?, string, string)
  fullName.vb: RabbitMQ.Client.BasicCredentialsProvider.New(String, String, String)
  nameWithType: BasicCredentialsProvider.BasicCredentialsProvider(string?, string, string)
  nameWithType.vb: BasicCredentialsProvider.New(String, String, String)
- uid: RabbitMQ.Client.BasicCredentialsProvider.#ctor*
  name: BasicCredentialsProvider
  href: api/RabbitMQ.Client.BasicCredentialsProvider.html#RabbitMQ_Client_BasicCredentialsProvider__ctor_
  commentId: Overload:RabbitMQ.Client.BasicCredentialsProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.BasicCredentialsProvider.BasicCredentialsProvider
  fullName.vb: RabbitMQ.Client.BasicCredentialsProvider.New
  nameWithType: BasicCredentialsProvider.BasicCredentialsProvider
  nameWithType.vb: BasicCredentialsProvider.New
- uid: RabbitMQ.Client.BasicCredentialsProvider.GetCredentialsAsync(System.Threading.CancellationToken)
  name: GetCredentialsAsync(CancellationToken)
  href: api/RabbitMQ.Client.BasicCredentialsProvider.html#RabbitMQ_Client_BasicCredentialsProvider_GetCredentialsAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.BasicCredentialsProvider.GetCredentialsAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.BasicCredentialsProvider.GetCredentialsAsync(System.Threading.CancellationToken)
  nameWithType: BasicCredentialsProvider.GetCredentialsAsync(CancellationToken)
- uid: RabbitMQ.Client.BasicCredentialsProvider.GetCredentialsAsync*
  name: GetCredentialsAsync
  href: api/RabbitMQ.Client.BasicCredentialsProvider.html#RabbitMQ_Client_BasicCredentialsProvider_GetCredentialsAsync_
  commentId: Overload:RabbitMQ.Client.BasicCredentialsProvider.GetCredentialsAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicCredentialsProvider.GetCredentialsAsync
  nameWithType: BasicCredentialsProvider.GetCredentialsAsync
- uid: RabbitMQ.Client.BasicCredentialsProvider.Name
  name: Name
  href: api/RabbitMQ.Client.BasicCredentialsProvider.html#RabbitMQ_Client_BasicCredentialsProvider_Name
  commentId: P:RabbitMQ.Client.BasicCredentialsProvider.Name
  fullName: RabbitMQ.Client.BasicCredentialsProvider.Name
  nameWithType: BasicCredentialsProvider.Name
- uid: RabbitMQ.Client.BasicCredentialsProvider.Name*
  name: Name
  href: api/RabbitMQ.Client.BasicCredentialsProvider.html#RabbitMQ_Client_BasicCredentialsProvider_Name_
  commentId: Overload:RabbitMQ.Client.BasicCredentialsProvider.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicCredentialsProvider.Name
  nameWithType: BasicCredentialsProvider.Name
- uid: RabbitMQ.Client.BasicGetResult
  name: BasicGetResult
  href: api/RabbitMQ.Client.BasicGetResult.html
  commentId: T:RabbitMQ.Client.BasicGetResult
  fullName: RabbitMQ.Client.BasicGetResult
  nameWithType: BasicGetResult
- uid: RabbitMQ.Client.BasicGetResult.#ctor(System.UInt64,System.Boolean,System.String,System.String,System.UInt32,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte})
  name: BasicGetResult(ulong, bool, string, string, uint, IReadOnlyBasicProperties, ReadOnlyMemory<byte>)
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult__ctor_System_UInt64_System_Boolean_System_String_System_String_System_UInt32_RabbitMQ_Client_IReadOnlyBasicProperties_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.BasicGetResult.#ctor(System.UInt64,System.Boolean,System.String,System.String,System.UInt32,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte})
  name.vb: New(ULong, Boolean, String, String, UInteger, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.BasicGetResult.BasicGetResult(ulong, bool, string, string, uint, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory<byte>)
  fullName.vb: RabbitMQ.Client.BasicGetResult.New(ULong, Boolean, String, String, UInteger, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory(Of Byte))
  nameWithType: BasicGetResult.BasicGetResult(ulong, bool, string, string, uint, IReadOnlyBasicProperties, ReadOnlyMemory<byte>)
  nameWithType.vb: BasicGetResult.New(ULong, Boolean, String, String, UInteger, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.BasicGetResult.#ctor*
  name: BasicGetResult
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult__ctor_
  commentId: Overload:RabbitMQ.Client.BasicGetResult.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.BasicGetResult.BasicGetResult
  fullName.vb: RabbitMQ.Client.BasicGetResult.New
  nameWithType: BasicGetResult.BasicGetResult
  nameWithType.vb: BasicGetResult.New
- uid: RabbitMQ.Client.BasicGetResult.BasicProperties
  name: BasicProperties
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_BasicProperties
  commentId: F:RabbitMQ.Client.BasicGetResult.BasicProperties
  fullName: RabbitMQ.Client.BasicGetResult.BasicProperties
  nameWithType: BasicGetResult.BasicProperties
- uid: RabbitMQ.Client.BasicGetResult.Body
  name: Body
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_Body
  commentId: F:RabbitMQ.Client.BasicGetResult.Body
  fullName: RabbitMQ.Client.BasicGetResult.Body
  nameWithType: BasicGetResult.Body
- uid: RabbitMQ.Client.BasicGetResult.DeliveryTag
  name: DeliveryTag
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_DeliveryTag
  commentId: F:RabbitMQ.Client.BasicGetResult.DeliveryTag
  fullName: RabbitMQ.Client.BasicGetResult.DeliveryTag
  nameWithType: BasicGetResult.DeliveryTag
- uid: RabbitMQ.Client.BasicGetResult.Exchange
  name: Exchange
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_Exchange
  commentId: F:RabbitMQ.Client.BasicGetResult.Exchange
  fullName: RabbitMQ.Client.BasicGetResult.Exchange
  nameWithType: BasicGetResult.Exchange
- uid: RabbitMQ.Client.BasicGetResult.MessageCount
  name: MessageCount
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_MessageCount
  commentId: F:RabbitMQ.Client.BasicGetResult.MessageCount
  fullName: RabbitMQ.Client.BasicGetResult.MessageCount
  nameWithType: BasicGetResult.MessageCount
- uid: RabbitMQ.Client.BasicGetResult.Redelivered
  name: Redelivered
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_Redelivered
  commentId: F:RabbitMQ.Client.BasicGetResult.Redelivered
  fullName: RabbitMQ.Client.BasicGetResult.Redelivered
  nameWithType: BasicGetResult.Redelivered
- uid: RabbitMQ.Client.BasicGetResult.RoutingKey
  name: RoutingKey
  href: api/RabbitMQ.Client.BasicGetResult.html#RabbitMQ_Client_BasicGetResult_RoutingKey
  commentId: F:RabbitMQ.Client.BasicGetResult.RoutingKey
  fullName: RabbitMQ.Client.BasicGetResult.RoutingKey
  nameWithType: BasicGetResult.RoutingKey
- uid: RabbitMQ.Client.BasicProperties
  name: BasicProperties
  href: api/RabbitMQ.Client.BasicProperties.html
  commentId: T:RabbitMQ.Client.BasicProperties
  fullName: RabbitMQ.Client.BasicProperties
  nameWithType: BasicProperties
- uid: RabbitMQ.Client.BasicProperties.#ctor
  name: BasicProperties()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties__ctor
  commentId: M:RabbitMQ.Client.BasicProperties.#ctor
  name.vb: New()
  fullName: RabbitMQ.Client.BasicProperties.BasicProperties()
  fullName.vb: RabbitMQ.Client.BasicProperties.New()
  nameWithType: BasicProperties.BasicProperties()
  nameWithType.vb: BasicProperties.New()
- uid: RabbitMQ.Client.BasicProperties.#ctor(RabbitMQ.Client.IReadOnlyBasicProperties)
  name: BasicProperties(IReadOnlyBasicProperties)
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties__ctor_RabbitMQ_Client_IReadOnlyBasicProperties_
  commentId: M:RabbitMQ.Client.BasicProperties.#ctor(RabbitMQ.Client.IReadOnlyBasicProperties)
  name.vb: New(IReadOnlyBasicProperties)
  fullName: RabbitMQ.Client.BasicProperties.BasicProperties(RabbitMQ.Client.IReadOnlyBasicProperties)
  fullName.vb: RabbitMQ.Client.BasicProperties.New(RabbitMQ.Client.IReadOnlyBasicProperties)
  nameWithType: BasicProperties.BasicProperties(IReadOnlyBasicProperties)
  nameWithType.vb: BasicProperties.New(IReadOnlyBasicProperties)
- uid: RabbitMQ.Client.BasicProperties.#ctor*
  name: BasicProperties
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties__ctor_
  commentId: Overload:RabbitMQ.Client.BasicProperties.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.BasicProperties.BasicProperties
  fullName.vb: RabbitMQ.Client.BasicProperties.New
  nameWithType: BasicProperties.BasicProperties
  nameWithType.vb: BasicProperties.New
- uid: RabbitMQ.Client.BasicProperties.AppId
  name: AppId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_AppId
  commentId: P:RabbitMQ.Client.BasicProperties.AppId
  fullName: RabbitMQ.Client.BasicProperties.AppId
  nameWithType: BasicProperties.AppId
- uid: RabbitMQ.Client.BasicProperties.AppId*
  name: AppId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_AppId_
  commentId: Overload:RabbitMQ.Client.BasicProperties.AppId
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.AppId
  nameWithType: BasicProperties.AppId
- uid: RabbitMQ.Client.BasicProperties.ClearAppId
  name: ClearAppId()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearAppId
  commentId: M:RabbitMQ.Client.BasicProperties.ClearAppId
  fullName: RabbitMQ.Client.BasicProperties.ClearAppId()
  nameWithType: BasicProperties.ClearAppId()
- uid: RabbitMQ.Client.BasicProperties.ClearAppId*
  name: ClearAppId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearAppId_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearAppId
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearAppId
  nameWithType: BasicProperties.ClearAppId
- uid: RabbitMQ.Client.BasicProperties.ClearClusterId
  name: ClearClusterId()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearClusterId
  commentId: M:RabbitMQ.Client.BasicProperties.ClearClusterId
  fullName: RabbitMQ.Client.BasicProperties.ClearClusterId()
  nameWithType: BasicProperties.ClearClusterId()
- uid: RabbitMQ.Client.BasicProperties.ClearClusterId*
  name: ClearClusterId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearClusterId_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearClusterId
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearClusterId
  nameWithType: BasicProperties.ClearClusterId
- uid: RabbitMQ.Client.BasicProperties.ClearContentEncoding
  name: ClearContentEncoding()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearContentEncoding
  commentId: M:RabbitMQ.Client.BasicProperties.ClearContentEncoding
  fullName: RabbitMQ.Client.BasicProperties.ClearContentEncoding()
  nameWithType: BasicProperties.ClearContentEncoding()
- uid: RabbitMQ.Client.BasicProperties.ClearContentEncoding*
  name: ClearContentEncoding
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearContentEncoding_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearContentEncoding
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearContentEncoding
  nameWithType: BasicProperties.ClearContentEncoding
- uid: RabbitMQ.Client.BasicProperties.ClearContentType
  name: ClearContentType()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearContentType
  commentId: M:RabbitMQ.Client.BasicProperties.ClearContentType
  fullName: RabbitMQ.Client.BasicProperties.ClearContentType()
  nameWithType: BasicProperties.ClearContentType()
- uid: RabbitMQ.Client.BasicProperties.ClearContentType*
  name: ClearContentType
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearContentType_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearContentType
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearContentType
  nameWithType: BasicProperties.ClearContentType
- uid: RabbitMQ.Client.BasicProperties.ClearCorrelationId
  name: ClearCorrelationId()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearCorrelationId
  commentId: M:RabbitMQ.Client.BasicProperties.ClearCorrelationId
  fullName: RabbitMQ.Client.BasicProperties.ClearCorrelationId()
  nameWithType: BasicProperties.ClearCorrelationId()
- uid: RabbitMQ.Client.BasicProperties.ClearCorrelationId*
  name: ClearCorrelationId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearCorrelationId_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearCorrelationId
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearCorrelationId
  nameWithType: BasicProperties.ClearCorrelationId
- uid: RabbitMQ.Client.BasicProperties.ClearDeliveryMode
  name: ClearDeliveryMode()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearDeliveryMode
  commentId: M:RabbitMQ.Client.BasicProperties.ClearDeliveryMode
  fullName: RabbitMQ.Client.BasicProperties.ClearDeliveryMode()
  nameWithType: BasicProperties.ClearDeliveryMode()
- uid: RabbitMQ.Client.BasicProperties.ClearDeliveryMode*
  name: ClearDeliveryMode
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearDeliveryMode_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearDeliveryMode
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearDeliveryMode
  nameWithType: BasicProperties.ClearDeliveryMode
- uid: RabbitMQ.Client.BasicProperties.ClearExpiration
  name: ClearExpiration()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearExpiration
  commentId: M:RabbitMQ.Client.BasicProperties.ClearExpiration
  fullName: RabbitMQ.Client.BasicProperties.ClearExpiration()
  nameWithType: BasicProperties.ClearExpiration()
- uid: RabbitMQ.Client.BasicProperties.ClearExpiration*
  name: ClearExpiration
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearExpiration_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearExpiration
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearExpiration
  nameWithType: BasicProperties.ClearExpiration
- uid: RabbitMQ.Client.BasicProperties.ClearHeaders
  name: ClearHeaders()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearHeaders
  commentId: M:RabbitMQ.Client.BasicProperties.ClearHeaders
  fullName: RabbitMQ.Client.BasicProperties.ClearHeaders()
  nameWithType: BasicProperties.ClearHeaders()
- uid: RabbitMQ.Client.BasicProperties.ClearHeaders*
  name: ClearHeaders
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearHeaders_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearHeaders
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearHeaders
  nameWithType: BasicProperties.ClearHeaders
- uid: RabbitMQ.Client.BasicProperties.ClearMessageId
  name: ClearMessageId()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearMessageId
  commentId: M:RabbitMQ.Client.BasicProperties.ClearMessageId
  fullName: RabbitMQ.Client.BasicProperties.ClearMessageId()
  nameWithType: BasicProperties.ClearMessageId()
- uid: RabbitMQ.Client.BasicProperties.ClearMessageId*
  name: ClearMessageId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearMessageId_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearMessageId
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearMessageId
  nameWithType: BasicProperties.ClearMessageId
- uid: RabbitMQ.Client.BasicProperties.ClearPriority
  name: ClearPriority()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearPriority
  commentId: M:RabbitMQ.Client.BasicProperties.ClearPriority
  fullName: RabbitMQ.Client.BasicProperties.ClearPriority()
  nameWithType: BasicProperties.ClearPriority()
- uid: RabbitMQ.Client.BasicProperties.ClearPriority*
  name: ClearPriority
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearPriority_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearPriority
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearPriority
  nameWithType: BasicProperties.ClearPriority
- uid: RabbitMQ.Client.BasicProperties.ClearReplyTo
  name: ClearReplyTo()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearReplyTo
  commentId: M:RabbitMQ.Client.BasicProperties.ClearReplyTo
  fullName: RabbitMQ.Client.BasicProperties.ClearReplyTo()
  nameWithType: BasicProperties.ClearReplyTo()
- uid: RabbitMQ.Client.BasicProperties.ClearReplyTo*
  name: ClearReplyTo
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearReplyTo_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearReplyTo
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearReplyTo
  nameWithType: BasicProperties.ClearReplyTo
- uid: RabbitMQ.Client.BasicProperties.ClearTimestamp
  name: ClearTimestamp()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearTimestamp
  commentId: M:RabbitMQ.Client.BasicProperties.ClearTimestamp
  fullName: RabbitMQ.Client.BasicProperties.ClearTimestamp()
  nameWithType: BasicProperties.ClearTimestamp()
- uid: RabbitMQ.Client.BasicProperties.ClearTimestamp*
  name: ClearTimestamp
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearTimestamp_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearTimestamp
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearTimestamp
  nameWithType: BasicProperties.ClearTimestamp
- uid: RabbitMQ.Client.BasicProperties.ClearType
  name: ClearType()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearType
  commentId: M:RabbitMQ.Client.BasicProperties.ClearType
  fullName: RabbitMQ.Client.BasicProperties.ClearType()
  nameWithType: BasicProperties.ClearType()
- uid: RabbitMQ.Client.BasicProperties.ClearType*
  name: ClearType
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearType_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearType
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearType
  nameWithType: BasicProperties.ClearType
- uid: RabbitMQ.Client.BasicProperties.ClearUserId
  name: ClearUserId()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearUserId
  commentId: M:RabbitMQ.Client.BasicProperties.ClearUserId
  fullName: RabbitMQ.Client.BasicProperties.ClearUserId()
  nameWithType: BasicProperties.ClearUserId()
- uid: RabbitMQ.Client.BasicProperties.ClearUserId*
  name: ClearUserId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClearUserId_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClearUserId
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClearUserId
  nameWithType: BasicProperties.ClearUserId
- uid: RabbitMQ.Client.BasicProperties.ClusterId
  name: ClusterId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClusterId
  commentId: P:RabbitMQ.Client.BasicProperties.ClusterId
  fullName: RabbitMQ.Client.BasicProperties.ClusterId
  nameWithType: BasicProperties.ClusterId
- uid: RabbitMQ.Client.BasicProperties.ClusterId*
  name: ClusterId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ClusterId_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ClusterId
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ClusterId
  nameWithType: BasicProperties.ClusterId
- uid: RabbitMQ.Client.BasicProperties.ContentEncoding
  name: ContentEncoding
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ContentEncoding
  commentId: P:RabbitMQ.Client.BasicProperties.ContentEncoding
  fullName: RabbitMQ.Client.BasicProperties.ContentEncoding
  nameWithType: BasicProperties.ContentEncoding
- uid: RabbitMQ.Client.BasicProperties.ContentEncoding*
  name: ContentEncoding
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ContentEncoding_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ContentEncoding
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ContentEncoding
  nameWithType: BasicProperties.ContentEncoding
- uid: RabbitMQ.Client.BasicProperties.ContentType
  name: ContentType
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ContentType
  commentId: P:RabbitMQ.Client.BasicProperties.ContentType
  fullName: RabbitMQ.Client.BasicProperties.ContentType
  nameWithType: BasicProperties.ContentType
- uid: RabbitMQ.Client.BasicProperties.ContentType*
  name: ContentType
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ContentType_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ContentType
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ContentType
  nameWithType: BasicProperties.ContentType
- uid: RabbitMQ.Client.BasicProperties.CorrelationId
  name: CorrelationId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_CorrelationId
  commentId: P:RabbitMQ.Client.BasicProperties.CorrelationId
  fullName: RabbitMQ.Client.BasicProperties.CorrelationId
  nameWithType: BasicProperties.CorrelationId
- uid: RabbitMQ.Client.BasicProperties.CorrelationId*
  name: CorrelationId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_CorrelationId_
  commentId: Overload:RabbitMQ.Client.BasicProperties.CorrelationId
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.CorrelationId
  nameWithType: BasicProperties.CorrelationId
- uid: RabbitMQ.Client.BasicProperties.DeliveryMode
  name: DeliveryMode
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_DeliveryMode
  commentId: P:RabbitMQ.Client.BasicProperties.DeliveryMode
  fullName: RabbitMQ.Client.BasicProperties.DeliveryMode
  nameWithType: BasicProperties.DeliveryMode
- uid: RabbitMQ.Client.BasicProperties.DeliveryMode*
  name: DeliveryMode
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_DeliveryMode_
  commentId: Overload:RabbitMQ.Client.BasicProperties.DeliveryMode
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.DeliveryMode
  nameWithType: BasicProperties.DeliveryMode
- uid: RabbitMQ.Client.BasicProperties.Expiration
  name: Expiration
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Expiration
  commentId: P:RabbitMQ.Client.BasicProperties.Expiration
  fullName: RabbitMQ.Client.BasicProperties.Expiration
  nameWithType: BasicProperties.Expiration
- uid: RabbitMQ.Client.BasicProperties.Expiration*
  name: Expiration
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Expiration_
  commentId: Overload:RabbitMQ.Client.BasicProperties.Expiration
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.Expiration
  nameWithType: BasicProperties.Expiration
- uid: RabbitMQ.Client.BasicProperties.Headers
  name: Headers
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Headers
  commentId: P:RabbitMQ.Client.BasicProperties.Headers
  fullName: RabbitMQ.Client.BasicProperties.Headers
  nameWithType: BasicProperties.Headers
- uid: RabbitMQ.Client.BasicProperties.Headers*
  name: Headers
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Headers_
  commentId: Overload:RabbitMQ.Client.BasicProperties.Headers
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.Headers
  nameWithType: BasicProperties.Headers
- uid: RabbitMQ.Client.BasicProperties.IsAppIdPresent
  name: IsAppIdPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsAppIdPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsAppIdPresent
  fullName: RabbitMQ.Client.BasicProperties.IsAppIdPresent()
  nameWithType: BasicProperties.IsAppIdPresent()
- uid: RabbitMQ.Client.BasicProperties.IsAppIdPresent*
  name: IsAppIdPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsAppIdPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsAppIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsAppIdPresent
  nameWithType: BasicProperties.IsAppIdPresent
- uid: RabbitMQ.Client.BasicProperties.IsClusterIdPresent
  name: IsClusterIdPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsClusterIdPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsClusterIdPresent
  fullName: RabbitMQ.Client.BasicProperties.IsClusterIdPresent()
  nameWithType: BasicProperties.IsClusterIdPresent()
- uid: RabbitMQ.Client.BasicProperties.IsClusterIdPresent*
  name: IsClusterIdPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsClusterIdPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsClusterIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsClusterIdPresent
  nameWithType: BasicProperties.IsClusterIdPresent
- uid: RabbitMQ.Client.BasicProperties.IsContentEncodingPresent
  name: IsContentEncodingPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsContentEncodingPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsContentEncodingPresent
  fullName: RabbitMQ.Client.BasicProperties.IsContentEncodingPresent()
  nameWithType: BasicProperties.IsContentEncodingPresent()
- uid: RabbitMQ.Client.BasicProperties.IsContentEncodingPresent*
  name: IsContentEncodingPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsContentEncodingPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsContentEncodingPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsContentEncodingPresent
  nameWithType: BasicProperties.IsContentEncodingPresent
- uid: RabbitMQ.Client.BasicProperties.IsContentTypePresent
  name: IsContentTypePresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsContentTypePresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsContentTypePresent
  fullName: RabbitMQ.Client.BasicProperties.IsContentTypePresent()
  nameWithType: BasicProperties.IsContentTypePresent()
- uid: RabbitMQ.Client.BasicProperties.IsContentTypePresent*
  name: IsContentTypePresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsContentTypePresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsContentTypePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsContentTypePresent
  nameWithType: BasicProperties.IsContentTypePresent
- uid: RabbitMQ.Client.BasicProperties.IsCorrelationIdPresent
  name: IsCorrelationIdPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsCorrelationIdPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsCorrelationIdPresent
  fullName: RabbitMQ.Client.BasicProperties.IsCorrelationIdPresent()
  nameWithType: BasicProperties.IsCorrelationIdPresent()
- uid: RabbitMQ.Client.BasicProperties.IsCorrelationIdPresent*
  name: IsCorrelationIdPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsCorrelationIdPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsCorrelationIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsCorrelationIdPresent
  nameWithType: BasicProperties.IsCorrelationIdPresent
- uid: RabbitMQ.Client.BasicProperties.IsDeliveryModePresent
  name: IsDeliveryModePresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsDeliveryModePresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsDeliveryModePresent
  fullName: RabbitMQ.Client.BasicProperties.IsDeliveryModePresent()
  nameWithType: BasicProperties.IsDeliveryModePresent()
- uid: RabbitMQ.Client.BasicProperties.IsDeliveryModePresent*
  name: IsDeliveryModePresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsDeliveryModePresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsDeliveryModePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsDeliveryModePresent
  nameWithType: BasicProperties.IsDeliveryModePresent
- uid: RabbitMQ.Client.BasicProperties.IsExpirationPresent
  name: IsExpirationPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsExpirationPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsExpirationPresent
  fullName: RabbitMQ.Client.BasicProperties.IsExpirationPresent()
  nameWithType: BasicProperties.IsExpirationPresent()
- uid: RabbitMQ.Client.BasicProperties.IsExpirationPresent*
  name: IsExpirationPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsExpirationPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsExpirationPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsExpirationPresent
  nameWithType: BasicProperties.IsExpirationPresent
- uid: RabbitMQ.Client.BasicProperties.IsHeadersPresent
  name: IsHeadersPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsHeadersPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsHeadersPresent
  fullName: RabbitMQ.Client.BasicProperties.IsHeadersPresent()
  nameWithType: BasicProperties.IsHeadersPresent()
- uid: RabbitMQ.Client.BasicProperties.IsHeadersPresent*
  name: IsHeadersPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsHeadersPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsHeadersPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsHeadersPresent
  nameWithType: BasicProperties.IsHeadersPresent
- uid: RabbitMQ.Client.BasicProperties.IsMessageIdPresent
  name: IsMessageIdPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsMessageIdPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsMessageIdPresent
  fullName: RabbitMQ.Client.BasicProperties.IsMessageIdPresent()
  nameWithType: BasicProperties.IsMessageIdPresent()
- uid: RabbitMQ.Client.BasicProperties.IsMessageIdPresent*
  name: IsMessageIdPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsMessageIdPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsMessageIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsMessageIdPresent
  nameWithType: BasicProperties.IsMessageIdPresent
- uid: RabbitMQ.Client.BasicProperties.IsPriorityPresent
  name: IsPriorityPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsPriorityPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsPriorityPresent
  fullName: RabbitMQ.Client.BasicProperties.IsPriorityPresent()
  nameWithType: BasicProperties.IsPriorityPresent()
- uid: RabbitMQ.Client.BasicProperties.IsPriorityPresent*
  name: IsPriorityPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsPriorityPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsPriorityPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsPriorityPresent
  nameWithType: BasicProperties.IsPriorityPresent
- uid: RabbitMQ.Client.BasicProperties.IsReplyToPresent
  name: IsReplyToPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsReplyToPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsReplyToPresent
  fullName: RabbitMQ.Client.BasicProperties.IsReplyToPresent()
  nameWithType: BasicProperties.IsReplyToPresent()
- uid: RabbitMQ.Client.BasicProperties.IsReplyToPresent*
  name: IsReplyToPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsReplyToPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsReplyToPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsReplyToPresent
  nameWithType: BasicProperties.IsReplyToPresent
- uid: RabbitMQ.Client.BasicProperties.IsTimestampPresent
  name: IsTimestampPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsTimestampPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsTimestampPresent
  fullName: RabbitMQ.Client.BasicProperties.IsTimestampPresent()
  nameWithType: BasicProperties.IsTimestampPresent()
- uid: RabbitMQ.Client.BasicProperties.IsTimestampPresent*
  name: IsTimestampPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsTimestampPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsTimestampPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsTimestampPresent
  nameWithType: BasicProperties.IsTimestampPresent
- uid: RabbitMQ.Client.BasicProperties.IsTypePresent
  name: IsTypePresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsTypePresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsTypePresent
  fullName: RabbitMQ.Client.BasicProperties.IsTypePresent()
  nameWithType: BasicProperties.IsTypePresent()
- uid: RabbitMQ.Client.BasicProperties.IsTypePresent*
  name: IsTypePresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsTypePresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsTypePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsTypePresent
  nameWithType: BasicProperties.IsTypePresent
- uid: RabbitMQ.Client.BasicProperties.IsUserIdPresent
  name: IsUserIdPresent()
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsUserIdPresent
  commentId: M:RabbitMQ.Client.BasicProperties.IsUserIdPresent
  fullName: RabbitMQ.Client.BasicProperties.IsUserIdPresent()
  nameWithType: BasicProperties.IsUserIdPresent()
- uid: RabbitMQ.Client.BasicProperties.IsUserIdPresent*
  name: IsUserIdPresent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_IsUserIdPresent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.IsUserIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.IsUserIdPresent
  nameWithType: BasicProperties.IsUserIdPresent
- uid: RabbitMQ.Client.BasicProperties.MessageId
  name: MessageId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_MessageId
  commentId: P:RabbitMQ.Client.BasicProperties.MessageId
  fullName: RabbitMQ.Client.BasicProperties.MessageId
  nameWithType: BasicProperties.MessageId
- uid: RabbitMQ.Client.BasicProperties.MessageId*
  name: MessageId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_MessageId_
  commentId: Overload:RabbitMQ.Client.BasicProperties.MessageId
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.MessageId
  nameWithType: BasicProperties.MessageId
- uid: RabbitMQ.Client.BasicProperties.Persistent
  name: Persistent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Persistent
  commentId: P:RabbitMQ.Client.BasicProperties.Persistent
  fullName: RabbitMQ.Client.BasicProperties.Persistent
  nameWithType: BasicProperties.Persistent
- uid: RabbitMQ.Client.BasicProperties.Persistent*
  name: Persistent
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Persistent_
  commentId: Overload:RabbitMQ.Client.BasicProperties.Persistent
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.Persistent
  nameWithType: BasicProperties.Persistent
- uid: RabbitMQ.Client.BasicProperties.Priority
  name: Priority
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Priority
  commentId: P:RabbitMQ.Client.BasicProperties.Priority
  fullName: RabbitMQ.Client.BasicProperties.Priority
  nameWithType: BasicProperties.Priority
- uid: RabbitMQ.Client.BasicProperties.Priority*
  name: Priority
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Priority_
  commentId: Overload:RabbitMQ.Client.BasicProperties.Priority
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.Priority
  nameWithType: BasicProperties.Priority
- uid: RabbitMQ.Client.BasicProperties.ReplyTo
  name: ReplyTo
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ReplyTo
  commentId: P:RabbitMQ.Client.BasicProperties.ReplyTo
  fullName: RabbitMQ.Client.BasicProperties.ReplyTo
  nameWithType: BasicProperties.ReplyTo
- uid: RabbitMQ.Client.BasicProperties.ReplyTo*
  name: ReplyTo
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ReplyTo_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ReplyTo
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ReplyTo
  nameWithType: BasicProperties.ReplyTo
- uid: RabbitMQ.Client.BasicProperties.ReplyToAddress
  name: ReplyToAddress
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ReplyToAddress
  commentId: P:RabbitMQ.Client.BasicProperties.ReplyToAddress
  fullName: RabbitMQ.Client.BasicProperties.ReplyToAddress
  nameWithType: BasicProperties.ReplyToAddress
- uid: RabbitMQ.Client.BasicProperties.ReplyToAddress*
  name: ReplyToAddress
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_ReplyToAddress_
  commentId: Overload:RabbitMQ.Client.BasicProperties.ReplyToAddress
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.ReplyToAddress
  nameWithType: BasicProperties.ReplyToAddress
- uid: RabbitMQ.Client.BasicProperties.Timestamp
  name: Timestamp
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Timestamp
  commentId: P:RabbitMQ.Client.BasicProperties.Timestamp
  fullName: RabbitMQ.Client.BasicProperties.Timestamp
  nameWithType: BasicProperties.Timestamp
- uid: RabbitMQ.Client.BasicProperties.Timestamp*
  name: Timestamp
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Timestamp_
  commentId: Overload:RabbitMQ.Client.BasicProperties.Timestamp
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.Timestamp
  nameWithType: BasicProperties.Timestamp
- uid: RabbitMQ.Client.BasicProperties.Type
  name: Type
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Type
  commentId: P:RabbitMQ.Client.BasicProperties.Type
  fullName: RabbitMQ.Client.BasicProperties.Type
  nameWithType: BasicProperties.Type
- uid: RabbitMQ.Client.BasicProperties.Type*
  name: Type
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_Type_
  commentId: Overload:RabbitMQ.Client.BasicProperties.Type
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.Type
  nameWithType: BasicProperties.Type
- uid: RabbitMQ.Client.BasicProperties.UserId
  name: UserId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_UserId
  commentId: P:RabbitMQ.Client.BasicProperties.UserId
  fullName: RabbitMQ.Client.BasicProperties.UserId
  nameWithType: BasicProperties.UserId
- uid: RabbitMQ.Client.BasicProperties.UserId*
  name: UserId
  href: api/RabbitMQ.Client.BasicProperties.html#RabbitMQ_Client_BasicProperties_UserId_
  commentId: Overload:RabbitMQ.Client.BasicProperties.UserId
  isSpec: "True"
  fullName: RabbitMQ.Client.BasicProperties.UserId
  nameWithType: BasicProperties.UserId
- uid: RabbitMQ.Client.BinaryTableValue
  name: BinaryTableValue
  href: api/RabbitMQ.Client.BinaryTableValue.html
  commentId: T:RabbitMQ.Client.BinaryTableValue
  fullName: RabbitMQ.Client.BinaryTableValue
  nameWithType: BinaryTableValue
- uid: RabbitMQ.Client.BinaryTableValue.#ctor
  name: BinaryTableValue()
  href: api/RabbitMQ.Client.BinaryTableValue.html#RabbitMQ_Client_BinaryTableValue__ctor
  commentId: M:RabbitMQ.Client.BinaryTableValue.#ctor
  name.vb: New()
  fullName: RabbitMQ.Client.BinaryTableValue.BinaryTableValue()
  fullName.vb: RabbitMQ.Client.BinaryTableValue.New()
  nameWithType: BinaryTableValue.BinaryTableValue()
  nameWithType.vb: BinaryTableValue.New()
- uid: RabbitMQ.Client.BinaryTableValue.#ctor(System.Byte[])
  name: BinaryTableValue(byte[])
  href: api/RabbitMQ.Client.BinaryTableValue.html#RabbitMQ_Client_BinaryTableValue__ctor_System_Byte___
  commentId: M:RabbitMQ.Client.BinaryTableValue.#ctor(System.Byte[])
  name.vb: New(Byte())
  fullName: RabbitMQ.Client.BinaryTableValue.BinaryTableValue(byte[])
  fullName.vb: RabbitMQ.Client.BinaryTableValue.New(Byte())
  nameWithType: BinaryTableValue.BinaryTableValue(byte[])
  nameWithType.vb: BinaryTableValue.New(Byte())
- uid: RabbitMQ.Client.BinaryTableValue.#ctor*
  name: BinaryTableValue
  href: api/RabbitMQ.Client.BinaryTableValue.html#RabbitMQ_Client_BinaryTableValue__ctor_
  commentId: Overload:RabbitMQ.Client.BinaryTableValue.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.BinaryTableValue.BinaryTableValue
  fullName.vb: RabbitMQ.Client.BinaryTableValue.New
  nameWithType: BinaryTableValue.BinaryTableValue
  nameWithType.vb: BinaryTableValue.New
- uid: RabbitMQ.Client.BinaryTableValue.Bytes
  name: Bytes
  href: api/RabbitMQ.Client.BinaryTableValue.html#RabbitMQ_Client_BinaryTableValue_Bytes
  commentId: P:RabbitMQ.Client.BinaryTableValue.Bytes
  fullName: RabbitMQ.Client.BinaryTableValue.Bytes
  nameWithType: BinaryTableValue.Bytes
- uid: RabbitMQ.Client.BinaryTableValue.Bytes*
  name: Bytes
  href: api/RabbitMQ.Client.BinaryTableValue.html#RabbitMQ_Client_BinaryTableValue_Bytes_
  commentId: Overload:RabbitMQ.Client.BinaryTableValue.Bytes
  isSpec: "True"
  fullName: RabbitMQ.Client.BinaryTableValue.Bytes
  nameWithType: BinaryTableValue.Bytes
- uid: RabbitMQ.Client.CachedString
  name: CachedString
  href: api/RabbitMQ.Client.CachedString.html
  commentId: T:RabbitMQ.Client.CachedString
  fullName: RabbitMQ.Client.CachedString
  nameWithType: CachedString
- uid: RabbitMQ.Client.CachedString.#ctor(System.ReadOnlyMemory{System.Byte})
  name: CachedString(ReadOnlyMemory<byte>)
  href: api/RabbitMQ.Client.CachedString.html#RabbitMQ_Client_CachedString__ctor_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.CachedString.#ctor(System.ReadOnlyMemory{System.Byte})
  name.vb: New(ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.CachedString.CachedString(System.ReadOnlyMemory<byte>)
  fullName.vb: RabbitMQ.Client.CachedString.New(System.ReadOnlyMemory(Of Byte))
  nameWithType: CachedString.CachedString(ReadOnlyMemory<byte>)
  nameWithType.vb: CachedString.New(ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.CachedString.#ctor(System.String)
  name: CachedString(string)
  href: api/RabbitMQ.Client.CachedString.html#RabbitMQ_Client_CachedString__ctor_System_String_
  commentId: M:RabbitMQ.Client.CachedString.#ctor(System.String)
  name.vb: New(String)
  fullName: RabbitMQ.Client.CachedString.CachedString(string)
  fullName.vb: RabbitMQ.Client.CachedString.New(String)
  nameWithType: CachedString.CachedString(string)
  nameWithType.vb: CachedString.New(String)
- uid: RabbitMQ.Client.CachedString.#ctor(System.String,System.ReadOnlyMemory{System.Byte})
  name: CachedString(string, ReadOnlyMemory<byte>)
  href: api/RabbitMQ.Client.CachedString.html#RabbitMQ_Client_CachedString__ctor_System_String_System_ReadOnlyMemory_System_Byte__
  commentId: M:RabbitMQ.Client.CachedString.#ctor(System.String,System.ReadOnlyMemory{System.Byte})
  name.vb: New(String, ReadOnlyMemory(Of Byte))
  fullName: RabbitMQ.Client.CachedString.CachedString(string, System.ReadOnlyMemory<byte>)
  fullName.vb: RabbitMQ.Client.CachedString.New(String, System.ReadOnlyMemory(Of Byte))
  nameWithType: CachedString.CachedString(string, ReadOnlyMemory<byte>)
  nameWithType.vb: CachedString.New(String, ReadOnlyMemory(Of Byte))
- uid: RabbitMQ.Client.CachedString.#ctor*
  name: CachedString
  href: api/RabbitMQ.Client.CachedString.html#RabbitMQ_Client_CachedString__ctor_
  commentId: Overload:RabbitMQ.Client.CachedString.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.CachedString.CachedString
  fullName.vb: RabbitMQ.Client.CachedString.New
  nameWithType: CachedString.CachedString
  nameWithType.vb: CachedString.New
- uid: RabbitMQ.Client.CachedString.Bytes
  name: Bytes
  href: api/RabbitMQ.Client.CachedString.html#RabbitMQ_Client_CachedString_Bytes
  commentId: F:RabbitMQ.Client.CachedString.Bytes
  fullName: RabbitMQ.Client.CachedString.Bytes
  nameWithType: CachedString.Bytes
- uid: RabbitMQ.Client.CachedString.Empty
  name: Empty
  href: api/RabbitMQ.Client.CachedString.html#RabbitMQ_Client_CachedString_Empty
  commentId: F:RabbitMQ.Client.CachedString.Empty
  fullName: RabbitMQ.Client.CachedString.Empty
  nameWithType: CachedString.Empty
- uid: RabbitMQ.Client.CachedString.Value
  name: Value
  href: api/RabbitMQ.Client.CachedString.html#RabbitMQ_Client_CachedString_Value
  commentId: F:RabbitMQ.Client.CachedString.Value
  fullName: RabbitMQ.Client.CachedString.Value
  nameWithType: CachedString.Value
- uid: RabbitMQ.Client.ConnectionConfig
  name: ConnectionConfig
  href: api/RabbitMQ.Client.ConnectionConfig.html
  commentId: T:RabbitMQ.Client.ConnectionConfig
  fullName: RabbitMQ.Client.ConnectionConfig
  nameWithType: ConnectionConfig
- uid: RabbitMQ.Client.ConnectionConfig.AuthMechanisms
  name: AuthMechanisms
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_AuthMechanisms
  commentId: F:RabbitMQ.Client.ConnectionConfig.AuthMechanisms
  fullName: RabbitMQ.Client.ConnectionConfig.AuthMechanisms
  nameWithType: ConnectionConfig.AuthMechanisms
- uid: RabbitMQ.Client.ConnectionConfig.ClientProperties
  name: ClientProperties
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_ClientProperties
  commentId: F:RabbitMQ.Client.ConnectionConfig.ClientProperties
  fullName: RabbitMQ.Client.ConnectionConfig.ClientProperties
  nameWithType: ConnectionConfig.ClientProperties
- uid: RabbitMQ.Client.ConnectionConfig.ClientProvidedName
  name: ClientProvidedName
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_ClientProvidedName
  commentId: F:RabbitMQ.Client.ConnectionConfig.ClientProvidedName
  fullName: RabbitMQ.Client.ConnectionConfig.ClientProvidedName
  nameWithType: ConnectionConfig.ClientProvidedName
- uid: RabbitMQ.Client.ConnectionConfig.ConsumerDispatchConcurrency
  name: ConsumerDispatchConcurrency
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_ConsumerDispatchConcurrency
  commentId: F:RabbitMQ.Client.ConnectionConfig.ConsumerDispatchConcurrency
  fullName: RabbitMQ.Client.ConnectionConfig.ConsumerDispatchConcurrency
  nameWithType: ConnectionConfig.ConsumerDispatchConcurrency
- uid: RabbitMQ.Client.ConnectionConfig.ContinuationTimeout
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_ContinuationTimeout
  commentId: F:RabbitMQ.Client.ConnectionConfig.ContinuationTimeout
  fullName: RabbitMQ.Client.ConnectionConfig.ContinuationTimeout
  nameWithType: ConnectionConfig.ContinuationTimeout
- uid: RabbitMQ.Client.ConnectionConfig.CredentialsProvider
  name: CredentialsProvider
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_CredentialsProvider
  commentId: F:RabbitMQ.Client.ConnectionConfig.CredentialsProvider
  fullName: RabbitMQ.Client.ConnectionConfig.CredentialsProvider
  nameWithType: ConnectionConfig.CredentialsProvider
- uid: RabbitMQ.Client.ConnectionConfig.HandshakeContinuationTimeout
  name: HandshakeContinuationTimeout
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_HandshakeContinuationTimeout
  commentId: F:RabbitMQ.Client.ConnectionConfig.HandshakeContinuationTimeout
  fullName: RabbitMQ.Client.ConnectionConfig.HandshakeContinuationTimeout
  nameWithType: ConnectionConfig.HandshakeContinuationTimeout
- uid: RabbitMQ.Client.ConnectionConfig.HeartbeatInterval
  name: HeartbeatInterval
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_HeartbeatInterval
  commentId: F:RabbitMQ.Client.ConnectionConfig.HeartbeatInterval
  fullName: RabbitMQ.Client.ConnectionConfig.HeartbeatInterval
  nameWithType: ConnectionConfig.HeartbeatInterval
- uid: RabbitMQ.Client.ConnectionConfig.MaxChannelCount
  name: MaxChannelCount
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_MaxChannelCount
  commentId: F:RabbitMQ.Client.ConnectionConfig.MaxChannelCount
  fullName: RabbitMQ.Client.ConnectionConfig.MaxChannelCount
  nameWithType: ConnectionConfig.MaxChannelCount
- uid: RabbitMQ.Client.ConnectionConfig.MaxFrameSize
  name: MaxFrameSize
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_MaxFrameSize
  commentId: F:RabbitMQ.Client.ConnectionConfig.MaxFrameSize
  fullName: RabbitMQ.Client.ConnectionConfig.MaxFrameSize
  nameWithType: ConnectionConfig.MaxFrameSize
- uid: RabbitMQ.Client.ConnectionConfig.MaxInboundMessageBodySize
  name: MaxInboundMessageBodySize
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_MaxInboundMessageBodySize
  commentId: F:RabbitMQ.Client.ConnectionConfig.MaxInboundMessageBodySize
  fullName: RabbitMQ.Client.ConnectionConfig.MaxInboundMessageBodySize
  nameWithType: ConnectionConfig.MaxInboundMessageBodySize
- uid: RabbitMQ.Client.ConnectionConfig.NetworkRecoveryInterval
  name: NetworkRecoveryInterval
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_NetworkRecoveryInterval
  commentId: F:RabbitMQ.Client.ConnectionConfig.NetworkRecoveryInterval
  fullName: RabbitMQ.Client.ConnectionConfig.NetworkRecoveryInterval
  nameWithType: ConnectionConfig.NetworkRecoveryInterval
- uid: RabbitMQ.Client.ConnectionConfig.Password
  name: Password
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_Password
  commentId: F:RabbitMQ.Client.ConnectionConfig.Password
  fullName: RabbitMQ.Client.ConnectionConfig.Password
  nameWithType: ConnectionConfig.Password
- uid: RabbitMQ.Client.ConnectionConfig.RequestedConnectionTimeout
  name: RequestedConnectionTimeout
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_RequestedConnectionTimeout
  commentId: F:RabbitMQ.Client.ConnectionConfig.RequestedConnectionTimeout
  fullName: RabbitMQ.Client.ConnectionConfig.RequestedConnectionTimeout
  nameWithType: ConnectionConfig.RequestedConnectionTimeout
- uid: RabbitMQ.Client.ConnectionConfig.TopologyRecoveryEnabled
  name: TopologyRecoveryEnabled
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_TopologyRecoveryEnabled
  commentId: F:RabbitMQ.Client.ConnectionConfig.TopologyRecoveryEnabled
  fullName: RabbitMQ.Client.ConnectionConfig.TopologyRecoveryEnabled
  nameWithType: ConnectionConfig.TopologyRecoveryEnabled
- uid: RabbitMQ.Client.ConnectionConfig.TopologyRecoveryExceptionHandler
  name: TopologyRecoveryExceptionHandler
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_TopologyRecoveryExceptionHandler
  commentId: F:RabbitMQ.Client.ConnectionConfig.TopologyRecoveryExceptionHandler
  fullName: RabbitMQ.Client.ConnectionConfig.TopologyRecoveryExceptionHandler
  nameWithType: ConnectionConfig.TopologyRecoveryExceptionHandler
- uid: RabbitMQ.Client.ConnectionConfig.TopologyRecoveryFilter
  name: TopologyRecoveryFilter
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_TopologyRecoveryFilter
  commentId: F:RabbitMQ.Client.ConnectionConfig.TopologyRecoveryFilter
  fullName: RabbitMQ.Client.ConnectionConfig.TopologyRecoveryFilter
  nameWithType: ConnectionConfig.TopologyRecoveryFilter
- uid: RabbitMQ.Client.ConnectionConfig.UserName
  name: UserName
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_UserName
  commentId: F:RabbitMQ.Client.ConnectionConfig.UserName
  fullName: RabbitMQ.Client.ConnectionConfig.UserName
  nameWithType: ConnectionConfig.UserName
- uid: RabbitMQ.Client.ConnectionConfig.VirtualHost
  name: VirtualHost
  href: api/RabbitMQ.Client.ConnectionConfig.html#RabbitMQ_Client_ConnectionConfig_VirtualHost
  commentId: F:RabbitMQ.Client.ConnectionConfig.VirtualHost
  fullName: RabbitMQ.Client.ConnectionConfig.VirtualHost
  nameWithType: ConnectionConfig.VirtualHost
- uid: RabbitMQ.Client.ConnectionFactory
  name: ConnectionFactory
  href: api/RabbitMQ.Client.ConnectionFactory.html
  commentId: T:RabbitMQ.Client.ConnectionFactory
  fullName: RabbitMQ.Client.ConnectionFactory
  nameWithType: ConnectionFactory
- uid: RabbitMQ.Client.ConnectionFactory.#ctor
  name: ConnectionFactory()
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory__ctor
  commentId: M:RabbitMQ.Client.ConnectionFactory.#ctor
  name.vb: New()
  fullName: RabbitMQ.Client.ConnectionFactory.ConnectionFactory()
  fullName.vb: RabbitMQ.Client.ConnectionFactory.New()
  nameWithType: ConnectionFactory.ConnectionFactory()
  nameWithType.vb: ConnectionFactory.New()
- uid: RabbitMQ.Client.ConnectionFactory.#ctor*
  name: ConnectionFactory
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory__ctor_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.ConnectionFactory.ConnectionFactory
  fullName.vb: RabbitMQ.Client.ConnectionFactory.New
  nameWithType: ConnectionFactory.ConnectionFactory
  nameWithType.vb: ConnectionFactory.New
- uid: RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols
  name: AmqpUriSslProtocols
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AmqpUriSslProtocols
  commentId: P:RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols
  fullName: RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols
  nameWithType: ConnectionFactory.AmqpUriSslProtocols
- uid: RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols*
  name: AmqpUriSslProtocols
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AmqpUriSslProtocols_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.AmqpUriSslProtocols
  nameWithType: ConnectionFactory.AmqpUriSslProtocols
- uid: RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IEnumerable{System.String})
  name: AuthMechanismFactory(IEnumerable<string>)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AuthMechanismFactory_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IEnumerable{System.String})
  name.vb: AuthMechanismFactory(IEnumerable(Of String))
  fullName: RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: ConnectionFactory.AuthMechanismFactory(IEnumerable<string>)
  nameWithType.vb: ConnectionFactory.AuthMechanismFactory(IEnumerable(Of String))
- uid: RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory*
  name: AuthMechanismFactory
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AuthMechanismFactory_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.AuthMechanismFactory
  nameWithType: ConnectionFactory.AuthMechanismFactory
- uid: RabbitMQ.Client.ConnectionFactory.AuthMechanisms
  name: AuthMechanisms
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AuthMechanisms
  commentId: P:RabbitMQ.Client.ConnectionFactory.AuthMechanisms
  fullName: RabbitMQ.Client.ConnectionFactory.AuthMechanisms
  nameWithType: ConnectionFactory.AuthMechanisms
- uid: RabbitMQ.Client.ConnectionFactory.AuthMechanisms*
  name: AuthMechanisms
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AuthMechanisms_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.AuthMechanisms
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.AuthMechanisms
  nameWithType: ConnectionFactory.AuthMechanisms
- uid: RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled
  name: AutomaticRecoveryEnabled
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AutomaticRecoveryEnabled
  commentId: P:RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled
  fullName: RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled
  nameWithType: ConnectionFactory.AutomaticRecoveryEnabled
- uid: RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled*
  name: AutomaticRecoveryEnabled
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_AutomaticRecoveryEnabled_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.AutomaticRecoveryEnabled
  nameWithType: ConnectionFactory.AutomaticRecoveryEnabled
- uid: RabbitMQ.Client.ConnectionFactory.ClientProperties
  name: ClientProperties
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ClientProperties
  commentId: P:RabbitMQ.Client.ConnectionFactory.ClientProperties
  fullName: RabbitMQ.Client.ConnectionFactory.ClientProperties
  nameWithType: ConnectionFactory.ClientProperties
- uid: RabbitMQ.Client.ConnectionFactory.ClientProperties*
  name: ClientProperties
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ClientProperties_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.ClientProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.ClientProperties
  nameWithType: ConnectionFactory.ClientProperties
- uid: RabbitMQ.Client.ConnectionFactory.ClientProvidedName
  name: ClientProvidedName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ClientProvidedName
  commentId: P:RabbitMQ.Client.ConnectionFactory.ClientProvidedName
  fullName: RabbitMQ.Client.ConnectionFactory.ClientProvidedName
  nameWithType: ConnectionFactory.ClientProvidedName
- uid: RabbitMQ.Client.ConnectionFactory.ClientProvidedName*
  name: ClientProvidedName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ClientProvidedName_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.ClientProvidedName
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.ClientProvidedName
  nameWithType: ConnectionFactory.ClientProvidedName
- uid: RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency
  name: ConsumerDispatchConcurrency
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ConsumerDispatchConcurrency
  commentId: P:RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency
  fullName: RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency
  nameWithType: ConnectionFactory.ConsumerDispatchConcurrency
- uid: RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency*
  name: ConsumerDispatchConcurrency
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ConsumerDispatchConcurrency_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.ConsumerDispatchConcurrency
  nameWithType: ConnectionFactory.ConsumerDispatchConcurrency
- uid: RabbitMQ.Client.ConnectionFactory.ContinuationTimeout
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ContinuationTimeout
  commentId: P:RabbitMQ.Client.ConnectionFactory.ContinuationTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.ContinuationTimeout
  nameWithType: ConnectionFactory.ContinuationTimeout
- uid: RabbitMQ.Client.ConnectionFactory.ContinuationTimeout*
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_ContinuationTimeout_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.ContinuationTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.ContinuationTimeout
  nameWithType: ConnectionFactory.ContinuationTimeout
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(RabbitMQ.Client.IEndpointResolver,System.String,System.Threading.CancellationToken)
  name: CreateConnectionAsync(IEndpointResolver, string?, CancellationToken)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnectionAsync_RabbitMQ_Client_IEndpointResolver_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(RabbitMQ.Client.IEndpointResolver,System.String,System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(IEndpointResolver, String, CancellationToken)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(RabbitMQ.Client.IEndpointResolver, string?, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(RabbitMQ.Client.IEndpointResolver, String, System.Threading.CancellationToken)
  nameWithType: ConnectionFactory.CreateConnectionAsync(IEndpointResolver, string?, CancellationToken)
  nameWithType.vb: ConnectionFactory.CreateConnectionAsync(IEndpointResolver, String, CancellationToken)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint},System.String,System.Threading.CancellationToken)
  name: CreateConnectionAsync(IEnumerable<AmqpTcpEndpoint>, string?, CancellationToken)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnectionAsync_System_Collections_Generic_IEnumerable_RabbitMQ_Client_AmqpTcpEndpoint__System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint},System.String,System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(IEnumerable(Of AmqpTcpEndpoint), String, CancellationToken)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable<RabbitMQ.Client.AmqpTcpEndpoint>, string?, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable(Of RabbitMQ.Client.AmqpTcpEndpoint), String, System.Threading.CancellationToken)
  nameWithType: ConnectionFactory.CreateConnectionAsync(IEnumerable<AmqpTcpEndpoint>, string?, CancellationToken)
  nameWithType.vb: ConnectionFactory.CreateConnectionAsync(IEnumerable(Of AmqpTcpEndpoint), String, CancellationToken)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint},System.Threading.CancellationToken)
  name: CreateConnectionAsync(IEnumerable<AmqpTcpEndpoint>, CancellationToken)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnectionAsync_System_Collections_Generic_IEnumerable_RabbitMQ_Client_AmqpTcpEndpoint__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint},System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(IEnumerable(Of AmqpTcpEndpoint), CancellationToken)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable<RabbitMQ.Client.AmqpTcpEndpoint>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable(Of RabbitMQ.Client.AmqpTcpEndpoint), System.Threading.CancellationToken)
  nameWithType: ConnectionFactory.CreateConnectionAsync(IEnumerable<AmqpTcpEndpoint>, CancellationToken)
  nameWithType.vb: ConnectionFactory.CreateConnectionAsync(IEnumerable(Of AmqpTcpEndpoint), CancellationToken)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)
  name: CreateConnectionAsync(IEnumerable<string>, string?, CancellationToken)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnectionAsync_System_Collections_Generic_IEnumerable_System_String__System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(IEnumerable(Of String), String, CancellationToken)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable<string>, string?, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable(Of String), String, System.Threading.CancellationToken)
  nameWithType: ConnectionFactory.CreateConnectionAsync(IEnumerable<string>, string?, CancellationToken)
  nameWithType.vb: ConnectionFactory.CreateConnectionAsync(IEnumerable(Of String), String, CancellationToken)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: CreateConnectionAsync(IEnumerable<string>, CancellationToken)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnectionAsync_System_Collections_Generic_IEnumerable_System_String__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(IEnumerable(Of String), CancellationToken)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable(Of String), System.Threading.CancellationToken)
  nameWithType: ConnectionFactory.CreateConnectionAsync(IEnumerable<string>, CancellationToken)
  nameWithType.vb: ConnectionFactory.CreateConnectionAsync(IEnumerable(Of String), CancellationToken)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.String,System.Threading.CancellationToken)
  name: CreateConnectionAsync(string?, CancellationToken)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnectionAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.String,System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(string?, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(String, System.Threading.CancellationToken)
  nameWithType: ConnectionFactory.CreateConnectionAsync(string?, CancellationToken)
  nameWithType.vb: ConnectionFactory.CreateConnectionAsync(String, CancellationToken)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Threading.CancellationToken)
  name: CreateConnectionAsync(CancellationToken)
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnectionAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync(System.Threading.CancellationToken)
  nameWithType: ConnectionFactory.CreateConnectionAsync(CancellationToken)
- uid: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync*
  name: CreateConnectionAsync
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CreateConnectionAsync_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.CreateConnectionAsync
  nameWithType: ConnectionFactory.CreateConnectionAsync
- uid: RabbitMQ.Client.ConnectionFactory.CredentialsProvider
  name: CredentialsProvider
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CredentialsProvider
  commentId: P:RabbitMQ.Client.ConnectionFactory.CredentialsProvider
  fullName: RabbitMQ.Client.ConnectionFactory.CredentialsProvider
  nameWithType: ConnectionFactory.CredentialsProvider
- uid: RabbitMQ.Client.ConnectionFactory.CredentialsProvider*
  name: CredentialsProvider
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_CredentialsProvider_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.CredentialsProvider
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.CredentialsProvider
  nameWithType: ConnectionFactory.CredentialsProvider
- uid: RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily
  name: DefaultAddressFamily
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultAddressFamily
  commentId: P:RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily
  nameWithType: ConnectionFactory.DefaultAddressFamily
- uid: RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily*
  name: DefaultAddressFamily
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultAddressFamily_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultAddressFamily
  nameWithType: ConnectionFactory.DefaultAddressFamily
- uid: RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols
  name: DefaultAmqpUriSslProtocols
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultAmqpUriSslProtocols
  commentId: P:RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols
  nameWithType: ConnectionFactory.DefaultAmqpUriSslProtocols
- uid: RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols*
  name: DefaultAmqpUriSslProtocols
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultAmqpUriSslProtocols_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultAmqpUriSslProtocols
  nameWithType: ConnectionFactory.DefaultAmqpUriSslProtocols
- uid: RabbitMQ.Client.ConnectionFactory.DefaultAuthMechanisms
  name: DefaultAuthMechanisms
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultAuthMechanisms
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultAuthMechanisms
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultAuthMechanisms
  nameWithType: ConnectionFactory.DefaultAuthMechanisms
- uid: RabbitMQ.Client.ConnectionFactory.DefaultChannelMax
  name: DefaultChannelMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultChannelMax
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultChannelMax
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultChannelMax
  nameWithType: ConnectionFactory.DefaultChannelMax
- uid: RabbitMQ.Client.ConnectionFactory.DefaultConnectionTimeout
  name: DefaultConnectionTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultConnectionTimeout
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultConnectionTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultConnectionTimeout
  nameWithType: ConnectionFactory.DefaultConnectionTimeout
- uid: RabbitMQ.Client.ConnectionFactory.DefaultFrameMax
  name: DefaultFrameMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultFrameMax
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultFrameMax
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultFrameMax
  nameWithType: ConnectionFactory.DefaultFrameMax
- uid: RabbitMQ.Client.ConnectionFactory.DefaultHeartbeat
  name: DefaultHeartbeat
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultHeartbeat
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultHeartbeat
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultHeartbeat
  nameWithType: ConnectionFactory.DefaultHeartbeat
- uid: RabbitMQ.Client.ConnectionFactory.DefaultMaxInboundMessageBodySize
  name: DefaultMaxInboundMessageBodySize
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultMaxInboundMessageBodySize
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultMaxInboundMessageBodySize
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultMaxInboundMessageBodySize
  nameWithType: ConnectionFactory.DefaultMaxInboundMessageBodySize
- uid: RabbitMQ.Client.ConnectionFactory.DefaultPass
  name: DefaultPass
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultPass
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultPass
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultPass
  nameWithType: ConnectionFactory.DefaultPass
- uid: RabbitMQ.Client.ConnectionFactory.DefaultUser
  name: DefaultUser
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultUser
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultUser
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultUser
  nameWithType: ConnectionFactory.DefaultUser
- uid: RabbitMQ.Client.ConnectionFactory.DefaultVHost
  name: DefaultVHost
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_DefaultVHost
  commentId: F:RabbitMQ.Client.ConnectionFactory.DefaultVHost
  fullName: RabbitMQ.Client.ConnectionFactory.DefaultVHost
  nameWithType: ConnectionFactory.DefaultVHost
- uid: RabbitMQ.Client.ConnectionFactory.Endpoint
  name: Endpoint
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Endpoint
  commentId: P:RabbitMQ.Client.ConnectionFactory.Endpoint
  fullName: RabbitMQ.Client.ConnectionFactory.Endpoint
  nameWithType: ConnectionFactory.Endpoint
- uid: RabbitMQ.Client.ConnectionFactory.Endpoint*
  name: Endpoint
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Endpoint_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.Endpoint
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.Endpoint
  nameWithType: ConnectionFactory.Endpoint
- uid: RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory
  name: EndpointResolverFactory
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_EndpointResolverFactory
  commentId: P:RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory
  fullName: RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory
  nameWithType: ConnectionFactory.EndpointResolverFactory
- uid: RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory*
  name: EndpointResolverFactory
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_EndpointResolverFactory_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.EndpointResolverFactory
  nameWithType: ConnectionFactory.EndpointResolverFactory
- uid: RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout
  name: HandshakeContinuationTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_HandshakeContinuationTimeout
  commentId: P:RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout
  nameWithType: ConnectionFactory.HandshakeContinuationTimeout
- uid: RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout*
  name: HandshakeContinuationTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_HandshakeContinuationTimeout_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.HandshakeContinuationTimeout
  nameWithType: ConnectionFactory.HandshakeContinuationTimeout
- uid: RabbitMQ.Client.ConnectionFactory.HostName
  name: HostName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_HostName
  commentId: P:RabbitMQ.Client.ConnectionFactory.HostName
  fullName: RabbitMQ.Client.ConnectionFactory.HostName
  nameWithType: ConnectionFactory.HostName
- uid: RabbitMQ.Client.ConnectionFactory.HostName*
  name: HostName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_HostName_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.HostName
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.HostName
  nameWithType: ConnectionFactory.HostName
- uid: RabbitMQ.Client.ConnectionFactory.MaxInboundMessageBodySize
  name: MaxInboundMessageBodySize
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_MaxInboundMessageBodySize
  commentId: P:RabbitMQ.Client.ConnectionFactory.MaxInboundMessageBodySize
  fullName: RabbitMQ.Client.ConnectionFactory.MaxInboundMessageBodySize
  nameWithType: ConnectionFactory.MaxInboundMessageBodySize
- uid: RabbitMQ.Client.ConnectionFactory.MaxInboundMessageBodySize*
  name: MaxInboundMessageBodySize
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_MaxInboundMessageBodySize_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.MaxInboundMessageBodySize
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.MaxInboundMessageBodySize
  nameWithType: ConnectionFactory.MaxInboundMessageBodySize
- uid: RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval
  name: NetworkRecoveryInterval
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_NetworkRecoveryInterval
  commentId: P:RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval
  fullName: RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval
  nameWithType: ConnectionFactory.NetworkRecoveryInterval
- uid: RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval*
  name: NetworkRecoveryInterval
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_NetworkRecoveryInterval_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.NetworkRecoveryInterval
  nameWithType: ConnectionFactory.NetworkRecoveryInterval
- uid: RabbitMQ.Client.ConnectionFactory.Password
  name: Password
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Password
  commentId: P:RabbitMQ.Client.ConnectionFactory.Password
  fullName: RabbitMQ.Client.ConnectionFactory.Password
  nameWithType: ConnectionFactory.Password
- uid: RabbitMQ.Client.ConnectionFactory.Password*
  name: Password
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Password_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.Password
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.Password
  nameWithType: ConnectionFactory.Password
- uid: RabbitMQ.Client.ConnectionFactory.Port
  name: Port
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Port
  commentId: P:RabbitMQ.Client.ConnectionFactory.Port
  fullName: RabbitMQ.Client.ConnectionFactory.Port
  nameWithType: ConnectionFactory.Port
- uid: RabbitMQ.Client.ConnectionFactory.Port*
  name: Port
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Port_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.Port
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.Port
  nameWithType: ConnectionFactory.Port
- uid: RabbitMQ.Client.ConnectionFactory.RequestedChannelMax
  name: RequestedChannelMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedChannelMax
  commentId: P:RabbitMQ.Client.ConnectionFactory.RequestedChannelMax
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedChannelMax
  nameWithType: ConnectionFactory.RequestedChannelMax
- uid: RabbitMQ.Client.ConnectionFactory.RequestedChannelMax*
  name: RequestedChannelMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedChannelMax_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.RequestedChannelMax
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedChannelMax
  nameWithType: ConnectionFactory.RequestedChannelMax
- uid: RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout
  name: RequestedConnectionTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedConnectionTimeout
  commentId: P:RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout
  nameWithType: ConnectionFactory.RequestedConnectionTimeout
- uid: RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout*
  name: RequestedConnectionTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedConnectionTimeout_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedConnectionTimeout
  nameWithType: ConnectionFactory.RequestedConnectionTimeout
- uid: RabbitMQ.Client.ConnectionFactory.RequestedFrameMax
  name: RequestedFrameMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedFrameMax
  commentId: P:RabbitMQ.Client.ConnectionFactory.RequestedFrameMax
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedFrameMax
  nameWithType: ConnectionFactory.RequestedFrameMax
- uid: RabbitMQ.Client.ConnectionFactory.RequestedFrameMax*
  name: RequestedFrameMax
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedFrameMax_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.RequestedFrameMax
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedFrameMax
  nameWithType: ConnectionFactory.RequestedFrameMax
- uid: RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat
  name: RequestedHeartbeat
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedHeartbeat
  commentId: P:RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat
  nameWithType: ConnectionFactory.RequestedHeartbeat
- uid: RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat*
  name: RequestedHeartbeat
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_RequestedHeartbeat_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.RequestedHeartbeat
  nameWithType: ConnectionFactory.RequestedHeartbeat
- uid: RabbitMQ.Client.ConnectionFactory.SocketReadTimeout
  name: SocketReadTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_SocketReadTimeout
  commentId: P:RabbitMQ.Client.ConnectionFactory.SocketReadTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.SocketReadTimeout
  nameWithType: ConnectionFactory.SocketReadTimeout
- uid: RabbitMQ.Client.ConnectionFactory.SocketReadTimeout*
  name: SocketReadTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_SocketReadTimeout_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.SocketReadTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.SocketReadTimeout
  nameWithType: ConnectionFactory.SocketReadTimeout
- uid: RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout
  name: SocketWriteTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_SocketWriteTimeout
  commentId: P:RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout
  fullName: RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout
  nameWithType: ConnectionFactory.SocketWriteTimeout
- uid: RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout*
  name: SocketWriteTimeout
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_SocketWriteTimeout_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.SocketWriteTimeout
  nameWithType: ConnectionFactory.SocketWriteTimeout
- uid: RabbitMQ.Client.ConnectionFactory.Ssl
  name: Ssl
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Ssl
  commentId: P:RabbitMQ.Client.ConnectionFactory.Ssl
  fullName: RabbitMQ.Client.ConnectionFactory.Ssl
  nameWithType: ConnectionFactory.Ssl
- uid: RabbitMQ.Client.ConnectionFactory.Ssl*
  name: Ssl
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Ssl_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.Ssl
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.Ssl
  nameWithType: ConnectionFactory.Ssl
- uid: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled
  name: TopologyRecoveryEnabled
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_TopologyRecoveryEnabled
  commentId: P:RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled
  fullName: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled
  nameWithType: ConnectionFactory.TopologyRecoveryEnabled
- uid: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled*
  name: TopologyRecoveryEnabled
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_TopologyRecoveryEnabled_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryEnabled
  nameWithType: ConnectionFactory.TopologyRecoveryEnabled
- uid: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryExceptionHandler
  name: TopologyRecoveryExceptionHandler
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_TopologyRecoveryExceptionHandler
  commentId: P:RabbitMQ.Client.ConnectionFactory.TopologyRecoveryExceptionHandler
  fullName: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryExceptionHandler
  nameWithType: ConnectionFactory.TopologyRecoveryExceptionHandler
- uid: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryExceptionHandler*
  name: TopologyRecoveryExceptionHandler
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_TopologyRecoveryExceptionHandler_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.TopologyRecoveryExceptionHandler
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryExceptionHandler
  nameWithType: ConnectionFactory.TopologyRecoveryExceptionHandler
- uid: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryFilter
  name: TopologyRecoveryFilter
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_TopologyRecoveryFilter
  commentId: P:RabbitMQ.Client.ConnectionFactory.TopologyRecoveryFilter
  fullName: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryFilter
  nameWithType: ConnectionFactory.TopologyRecoveryFilter
- uid: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryFilter*
  name: TopologyRecoveryFilter
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_TopologyRecoveryFilter_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.TopologyRecoveryFilter
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.TopologyRecoveryFilter
  nameWithType: ConnectionFactory.TopologyRecoveryFilter
- uid: RabbitMQ.Client.ConnectionFactory.Uri
  name: Uri
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Uri
  commentId: P:RabbitMQ.Client.ConnectionFactory.Uri
  fullName: RabbitMQ.Client.ConnectionFactory.Uri
  nameWithType: ConnectionFactory.Uri
- uid: RabbitMQ.Client.ConnectionFactory.Uri*
  name: Uri
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_Uri_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.Uri
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.Uri
  nameWithType: ConnectionFactory.Uri
- uid: RabbitMQ.Client.ConnectionFactory.UserName
  name: UserName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_UserName
  commentId: P:RabbitMQ.Client.ConnectionFactory.UserName
  fullName: RabbitMQ.Client.ConnectionFactory.UserName
  nameWithType: ConnectionFactory.UserName
- uid: RabbitMQ.Client.ConnectionFactory.UserName*
  name: UserName
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_UserName_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.UserName
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.UserName
  nameWithType: ConnectionFactory.UserName
- uid: RabbitMQ.Client.ConnectionFactory.VirtualHost
  name: VirtualHost
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_VirtualHost
  commentId: P:RabbitMQ.Client.ConnectionFactory.VirtualHost
  fullName: RabbitMQ.Client.ConnectionFactory.VirtualHost
  nameWithType: ConnectionFactory.VirtualHost
- uid: RabbitMQ.Client.ConnectionFactory.VirtualHost*
  name: VirtualHost
  href: api/RabbitMQ.Client.ConnectionFactory.html#RabbitMQ_Client_ConnectionFactory_VirtualHost_
  commentId: Overload:RabbitMQ.Client.ConnectionFactory.VirtualHost
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactory.VirtualHost
  nameWithType: ConnectionFactory.VirtualHost
- uid: RabbitMQ.Client.ConnectionFactoryBase
  name: ConnectionFactoryBase
  href: api/RabbitMQ.Client.ConnectionFactoryBase.html
  commentId: T:RabbitMQ.Client.ConnectionFactoryBase
  fullName: RabbitMQ.Client.ConnectionFactoryBase
  nameWithType: ConnectionFactoryBase
- uid: RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory(System.Net.Sockets.AddressFamily)
  name: DefaultSocketFactory(AddressFamily)
  href: api/RabbitMQ.Client.ConnectionFactoryBase.html#RabbitMQ_Client_ConnectionFactoryBase_DefaultSocketFactory_System_Net_Sockets_AddressFamily_
  commentId: M:RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory(System.Net.Sockets.AddressFamily)
  fullName: RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory(System.Net.Sockets.AddressFamily)
  nameWithType: ConnectionFactoryBase.DefaultSocketFactory(AddressFamily)
- uid: RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory*
  name: DefaultSocketFactory
  href: api/RabbitMQ.Client.ConnectionFactoryBase.html#RabbitMQ_Client_ConnectionFactoryBase_DefaultSocketFactory_
  commentId: Overload:RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory
  isSpec: "True"
  fullName: RabbitMQ.Client.ConnectionFactoryBase.DefaultSocketFactory
  nameWithType: ConnectionFactoryBase.DefaultSocketFactory
- uid: RabbitMQ.Client.ConnectionFactoryBase.SocketFactory
  name: SocketFactory
  href: api/RabbitMQ.Client.ConnectionFactoryBase.html#RabbitMQ_Client_ConnectionFactoryBase_SocketFactory
  commentId: F:RabbitMQ.Client.ConnectionFactoryBase.SocketFactory
  fullName: RabbitMQ.Client.ConnectionFactoryBase.SocketFactory
  nameWithType: ConnectionFactoryBase.SocketFactory
- uid: RabbitMQ.Client.Constants
  name: Constants
  href: api/RabbitMQ.Client.Constants.html
  commentId: T:RabbitMQ.Client.Constants
  fullName: RabbitMQ.Client.Constants
  nameWithType: Constants
- uid: RabbitMQ.Client.Constants.AccessRefused
  name: AccessRefused
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_AccessRefused
  commentId: F:RabbitMQ.Client.Constants.AccessRefused
  fullName: RabbitMQ.Client.Constants.AccessRefused
  nameWithType: Constants.AccessRefused
- uid: RabbitMQ.Client.Constants.ChannelError
  name: ChannelError
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ChannelError
  commentId: F:RabbitMQ.Client.Constants.ChannelError
  fullName: RabbitMQ.Client.Constants.ChannelError
  nameWithType: Constants.ChannelError
- uid: RabbitMQ.Client.Constants.CommandInvalid
  name: CommandInvalid
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_CommandInvalid
  commentId: F:RabbitMQ.Client.Constants.CommandInvalid
  fullName: RabbitMQ.Client.Constants.CommandInvalid
  nameWithType: Constants.CommandInvalid
- uid: RabbitMQ.Client.Constants.ConnectionForced
  name: ConnectionForced
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ConnectionForced
  commentId: F:RabbitMQ.Client.Constants.ConnectionForced
  fullName: RabbitMQ.Client.Constants.ConnectionForced
  nameWithType: Constants.ConnectionForced
- uid: RabbitMQ.Client.Constants.ContentTooLarge
  name: ContentTooLarge
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ContentTooLarge
  commentId: F:RabbitMQ.Client.Constants.ContentTooLarge
  fullName: RabbitMQ.Client.Constants.ContentTooLarge
  nameWithType: Constants.ContentTooLarge
- uid: RabbitMQ.Client.Constants.DefaultConsumerDispatchConcurrency
  name: DefaultConsumerDispatchConcurrency
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_DefaultConsumerDispatchConcurrency
  commentId: F:RabbitMQ.Client.Constants.DefaultConsumerDispatchConcurrency
  fullName: RabbitMQ.Client.Constants.DefaultConsumerDispatchConcurrency
  nameWithType: Constants.DefaultConsumerDispatchConcurrency
- uid: RabbitMQ.Client.Constants.DefaultContinuationTimeout
  name: DefaultContinuationTimeout
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_DefaultContinuationTimeout
  commentId: F:RabbitMQ.Client.Constants.DefaultContinuationTimeout
  fullName: RabbitMQ.Client.Constants.DefaultContinuationTimeout
  nameWithType: Constants.DefaultContinuationTimeout
- uid: RabbitMQ.Client.Constants.DefaultHandshakeContinuationTimeout
  name: DefaultHandshakeContinuationTimeout
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_DefaultHandshakeContinuationTimeout
  commentId: F:RabbitMQ.Client.Constants.DefaultHandshakeContinuationTimeout
  fullName: RabbitMQ.Client.Constants.DefaultHandshakeContinuationTimeout
  nameWithType: Constants.DefaultHandshakeContinuationTimeout
- uid: RabbitMQ.Client.Constants.FrameBody
  name: FrameBody
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameBody
  commentId: F:RabbitMQ.Client.Constants.FrameBody
  fullName: RabbitMQ.Client.Constants.FrameBody
  nameWithType: Constants.FrameBody
- uid: RabbitMQ.Client.Constants.FrameEnd
  name: FrameEnd
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameEnd
  commentId: F:RabbitMQ.Client.Constants.FrameEnd
  fullName: RabbitMQ.Client.Constants.FrameEnd
  nameWithType: Constants.FrameEnd
- uid: RabbitMQ.Client.Constants.FrameError
  name: FrameError
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameError
  commentId: F:RabbitMQ.Client.Constants.FrameError
  fullName: RabbitMQ.Client.Constants.FrameError
  nameWithType: Constants.FrameError
- uid: RabbitMQ.Client.Constants.FrameHeader
  name: FrameHeader
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameHeader
  commentId: F:RabbitMQ.Client.Constants.FrameHeader
  fullName: RabbitMQ.Client.Constants.FrameHeader
  nameWithType: Constants.FrameHeader
- uid: RabbitMQ.Client.Constants.FrameHeartbeat
  name: FrameHeartbeat
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameHeartbeat
  commentId: F:RabbitMQ.Client.Constants.FrameHeartbeat
  fullName: RabbitMQ.Client.Constants.FrameHeartbeat
  nameWithType: Constants.FrameHeartbeat
- uid: RabbitMQ.Client.Constants.FrameMethod
  name: FrameMethod
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameMethod
  commentId: F:RabbitMQ.Client.Constants.FrameMethod
  fullName: RabbitMQ.Client.Constants.FrameMethod
  nameWithType: Constants.FrameMethod
- uid: RabbitMQ.Client.Constants.FrameMinSize
  name: FrameMinSize
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_FrameMinSize
  commentId: F:RabbitMQ.Client.Constants.FrameMinSize
  fullName: RabbitMQ.Client.Constants.FrameMinSize
  nameWithType: Constants.FrameMinSize
- uid: RabbitMQ.Client.Constants.InternalError
  name: InternalError
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_InternalError
  commentId: F:RabbitMQ.Client.Constants.InternalError
  fullName: RabbitMQ.Client.Constants.InternalError
  nameWithType: Constants.InternalError
- uid: RabbitMQ.Client.Constants.InvalidPath
  name: InvalidPath
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_InvalidPath
  commentId: F:RabbitMQ.Client.Constants.InvalidPath
  fullName: RabbitMQ.Client.Constants.InvalidPath
  nameWithType: Constants.InvalidPath
- uid: RabbitMQ.Client.Constants.NoConsumers
  name: NoConsumers
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_NoConsumers
  commentId: F:RabbitMQ.Client.Constants.NoConsumers
  fullName: RabbitMQ.Client.Constants.NoConsumers
  nameWithType: Constants.NoConsumers
- uid: RabbitMQ.Client.Constants.NoRoute
  name: NoRoute
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_NoRoute
  commentId: F:RabbitMQ.Client.Constants.NoRoute
  fullName: RabbitMQ.Client.Constants.NoRoute
  nameWithType: Constants.NoRoute
- uid: RabbitMQ.Client.Constants.NotAllowed
  name: NotAllowed
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_NotAllowed
  commentId: F:RabbitMQ.Client.Constants.NotAllowed
  fullName: RabbitMQ.Client.Constants.NotAllowed
  nameWithType: Constants.NotAllowed
- uid: RabbitMQ.Client.Constants.NotFound
  name: NotFound
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_NotFound
  commentId: F:RabbitMQ.Client.Constants.NotFound
  fullName: RabbitMQ.Client.Constants.NotFound
  nameWithType: Constants.NotFound
- uid: RabbitMQ.Client.Constants.NotImplemented
  name: NotImplemented
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_NotImplemented
  commentId: F:RabbitMQ.Client.Constants.NotImplemented
  fullName: RabbitMQ.Client.Constants.NotImplemented
  nameWithType: Constants.NotImplemented
- uid: RabbitMQ.Client.Constants.PreconditionFailed
  name: PreconditionFailed
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_PreconditionFailed
  commentId: F:RabbitMQ.Client.Constants.PreconditionFailed
  fullName: RabbitMQ.Client.Constants.PreconditionFailed
  nameWithType: Constants.PreconditionFailed
- uid: RabbitMQ.Client.Constants.PublishSequenceNumberHeader
  name: PublishSequenceNumberHeader
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_PublishSequenceNumberHeader
  commentId: F:RabbitMQ.Client.Constants.PublishSequenceNumberHeader
  fullName: RabbitMQ.Client.Constants.PublishSequenceNumberHeader
  nameWithType: Constants.PublishSequenceNumberHeader
- uid: RabbitMQ.Client.Constants.ReplySuccess
  name: ReplySuccess
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ReplySuccess
  commentId: F:RabbitMQ.Client.Constants.ReplySuccess
  fullName: RabbitMQ.Client.Constants.ReplySuccess
  nameWithType: Constants.ReplySuccess
- uid: RabbitMQ.Client.Constants.ResourceError
  name: ResourceError
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ResourceError
  commentId: F:RabbitMQ.Client.Constants.ResourceError
  fullName: RabbitMQ.Client.Constants.ResourceError
  nameWithType: Constants.ResourceError
- uid: RabbitMQ.Client.Constants.ResourceLocked
  name: ResourceLocked
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_ResourceLocked
  commentId: F:RabbitMQ.Client.Constants.ResourceLocked
  fullName: RabbitMQ.Client.Constants.ResourceLocked
  nameWithType: Constants.ResourceLocked
- uid: RabbitMQ.Client.Constants.SyntaxError
  name: SyntaxError
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_SyntaxError
  commentId: F:RabbitMQ.Client.Constants.SyntaxError
  fullName: RabbitMQ.Client.Constants.SyntaxError
  nameWithType: Constants.SyntaxError
- uid: RabbitMQ.Client.Constants.UnexpectedFrame
  name: UnexpectedFrame
  href: api/RabbitMQ.Client.Constants.html#RabbitMQ_Client_Constants_UnexpectedFrame
  commentId: F:RabbitMQ.Client.Constants.UnexpectedFrame
  fullName: RabbitMQ.Client.Constants.UnexpectedFrame
  nameWithType: Constants.UnexpectedFrame
- uid: RabbitMQ.Client.CreateChannelOptions
  name: CreateChannelOptions
  href: api/RabbitMQ.Client.CreateChannelOptions.html
  commentId: T:RabbitMQ.Client.CreateChannelOptions
  fullName: RabbitMQ.Client.CreateChannelOptions
  nameWithType: CreateChannelOptions
- uid: RabbitMQ.Client.CreateChannelOptions.#ctor(System.Boolean,System.Boolean,System.Threading.RateLimiting.RateLimiter,System.Nullable{System.UInt16})
  name: CreateChannelOptions(bool, bool, RateLimiter?, ushort?)
  href: api/RabbitMQ.Client.CreateChannelOptions.html#RabbitMQ_Client_CreateChannelOptions__ctor_System_Boolean_System_Boolean_System_Threading_RateLimiting_RateLimiter_System_Nullable_System_UInt16__
  commentId: M:RabbitMQ.Client.CreateChannelOptions.#ctor(System.Boolean,System.Boolean,System.Threading.RateLimiting.RateLimiter,System.Nullable{System.UInt16})
  name.vb: New(Boolean, Boolean, RateLimiter, UShort?)
  fullName: RabbitMQ.Client.CreateChannelOptions.CreateChannelOptions(bool, bool, System.Threading.RateLimiting.RateLimiter?, ushort?)
  fullName.vb: RabbitMQ.Client.CreateChannelOptions.New(Boolean, Boolean, System.Threading.RateLimiting.RateLimiter, UShort?)
  nameWithType: CreateChannelOptions.CreateChannelOptions(bool, bool, RateLimiter?, ushort?)
  nameWithType.vb: CreateChannelOptions.New(Boolean, Boolean, RateLimiter, UShort?)
- uid: RabbitMQ.Client.CreateChannelOptions.#ctor*
  name: CreateChannelOptions
  href: api/RabbitMQ.Client.CreateChannelOptions.html#RabbitMQ_Client_CreateChannelOptions__ctor_
  commentId: Overload:RabbitMQ.Client.CreateChannelOptions.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.CreateChannelOptions.CreateChannelOptions
  fullName.vb: RabbitMQ.Client.CreateChannelOptions.New
  nameWithType: CreateChannelOptions.CreateChannelOptions
  nameWithType.vb: CreateChannelOptions.New
- uid: RabbitMQ.Client.CreateChannelOptions.ConsumerDispatchConcurrency
  name: ConsumerDispatchConcurrency
  href: api/RabbitMQ.Client.CreateChannelOptions.html#RabbitMQ_Client_CreateChannelOptions_ConsumerDispatchConcurrency
  commentId: F:RabbitMQ.Client.CreateChannelOptions.ConsumerDispatchConcurrency
  fullName: RabbitMQ.Client.CreateChannelOptions.ConsumerDispatchConcurrency
  nameWithType: CreateChannelOptions.ConsumerDispatchConcurrency
- uid: RabbitMQ.Client.CreateChannelOptions.OutstandingPublisherConfirmationsRateLimiter
  name: OutstandingPublisherConfirmationsRateLimiter
  href: api/RabbitMQ.Client.CreateChannelOptions.html#RabbitMQ_Client_CreateChannelOptions_OutstandingPublisherConfirmationsRateLimiter
  commentId: F:RabbitMQ.Client.CreateChannelOptions.OutstandingPublisherConfirmationsRateLimiter
  fullName: RabbitMQ.Client.CreateChannelOptions.OutstandingPublisherConfirmationsRateLimiter
  nameWithType: CreateChannelOptions.OutstandingPublisherConfirmationsRateLimiter
- uid: RabbitMQ.Client.CreateChannelOptions.PublisherConfirmationTrackingEnabled
  name: PublisherConfirmationTrackingEnabled
  href: api/RabbitMQ.Client.CreateChannelOptions.html#RabbitMQ_Client_CreateChannelOptions_PublisherConfirmationTrackingEnabled
  commentId: F:RabbitMQ.Client.CreateChannelOptions.PublisherConfirmationTrackingEnabled
  fullName: RabbitMQ.Client.CreateChannelOptions.PublisherConfirmationTrackingEnabled
  nameWithType: CreateChannelOptions.PublisherConfirmationTrackingEnabled
- uid: RabbitMQ.Client.CreateChannelOptions.PublisherConfirmationsEnabled
  name: PublisherConfirmationsEnabled
  href: api/RabbitMQ.Client.CreateChannelOptions.html#RabbitMQ_Client_CreateChannelOptions_PublisherConfirmationsEnabled
  commentId: F:RabbitMQ.Client.CreateChannelOptions.PublisherConfirmationsEnabled
  fullName: RabbitMQ.Client.CreateChannelOptions.PublisherConfirmationsEnabled
  nameWithType: CreateChannelOptions.PublisherConfirmationsEnabled
- uid: RabbitMQ.Client.Credentials
  name: Credentials
  href: api/RabbitMQ.Client.Credentials.html
  commentId: T:RabbitMQ.Client.Credentials
  fullName: RabbitMQ.Client.Credentials
  nameWithType: Credentials
- uid: RabbitMQ.Client.Credentials.#ctor(System.String,System.String,System.String,System.Nullable{System.TimeSpan})
  name: Credentials(string, string, string, TimeSpan?)
  href: api/RabbitMQ.Client.Credentials.html#RabbitMQ_Client_Credentials__ctor_System_String_System_String_System_String_System_Nullable_System_TimeSpan__
  commentId: M:RabbitMQ.Client.Credentials.#ctor(System.String,System.String,System.String,System.Nullable{System.TimeSpan})
  name.vb: New(String, String, String, TimeSpan?)
  fullName: RabbitMQ.Client.Credentials.Credentials(string, string, string, System.TimeSpan?)
  fullName.vb: RabbitMQ.Client.Credentials.New(String, String, String, System.TimeSpan?)
  nameWithType: Credentials.Credentials(string, string, string, TimeSpan?)
  nameWithType.vb: Credentials.New(String, String, String, TimeSpan?)
- uid: RabbitMQ.Client.Credentials.#ctor*
  name: Credentials
  href: api/RabbitMQ.Client.Credentials.html#RabbitMQ_Client_Credentials__ctor_
  commentId: Overload:RabbitMQ.Client.Credentials.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Credentials.Credentials
  fullName.vb: RabbitMQ.Client.Credentials.New
  nameWithType: Credentials.Credentials
  nameWithType.vb: Credentials.New
- uid: RabbitMQ.Client.Credentials.Name
  name: Name
  href: api/RabbitMQ.Client.Credentials.html#RabbitMQ_Client_Credentials_Name
  commentId: P:RabbitMQ.Client.Credentials.Name
  fullName: RabbitMQ.Client.Credentials.Name
  nameWithType: Credentials.Name
- uid: RabbitMQ.Client.Credentials.Name*
  name: Name
  href: api/RabbitMQ.Client.Credentials.html#RabbitMQ_Client_Credentials_Name_
  commentId: Overload:RabbitMQ.Client.Credentials.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.Credentials.Name
  nameWithType: Credentials.Name
- uid: RabbitMQ.Client.Credentials.Password
  name: Password
  href: api/RabbitMQ.Client.Credentials.html#RabbitMQ_Client_Credentials_Password
  commentId: P:RabbitMQ.Client.Credentials.Password
  fullName: RabbitMQ.Client.Credentials.Password
  nameWithType: Credentials.Password
- uid: RabbitMQ.Client.Credentials.Password*
  name: Password
  href: api/RabbitMQ.Client.Credentials.html#RabbitMQ_Client_Credentials_Password_
  commentId: Overload:RabbitMQ.Client.Credentials.Password
  isSpec: "True"
  fullName: RabbitMQ.Client.Credentials.Password
  nameWithType: Credentials.Password
- uid: RabbitMQ.Client.Credentials.UserName
  name: UserName
  href: api/RabbitMQ.Client.Credentials.html#RabbitMQ_Client_Credentials_UserName
  commentId: P:RabbitMQ.Client.Credentials.UserName
  fullName: RabbitMQ.Client.Credentials.UserName
  nameWithType: Credentials.UserName
- uid: RabbitMQ.Client.Credentials.UserName*
  name: UserName
  href: api/RabbitMQ.Client.Credentials.html#RabbitMQ_Client_Credentials_UserName_
  commentId: Overload:RabbitMQ.Client.Credentials.UserName
  isSpec: "True"
  fullName: RabbitMQ.Client.Credentials.UserName
  nameWithType: Credentials.UserName
- uid: RabbitMQ.Client.Credentials.ValidUntil
  name: ValidUntil
  href: api/RabbitMQ.Client.Credentials.html#RabbitMQ_Client_Credentials_ValidUntil
  commentId: P:RabbitMQ.Client.Credentials.ValidUntil
  fullName: RabbitMQ.Client.Credentials.ValidUntil
  nameWithType: Credentials.ValidUntil
- uid: RabbitMQ.Client.Credentials.ValidUntil*
  name: ValidUntil
  href: api/RabbitMQ.Client.Credentials.html#RabbitMQ_Client_Credentials_ValidUntil_
  commentId: Overload:RabbitMQ.Client.Credentials.ValidUntil
  isSpec: "True"
  fullName: RabbitMQ.Client.Credentials.ValidUntil
  nameWithType: Credentials.ValidUntil
- uid: RabbitMQ.Client.DefaultEndpointResolver
  name: DefaultEndpointResolver
  href: api/RabbitMQ.Client.DefaultEndpointResolver.html
  commentId: T:RabbitMQ.Client.DefaultEndpointResolver
  fullName: RabbitMQ.Client.DefaultEndpointResolver
  nameWithType: DefaultEndpointResolver
- uid: RabbitMQ.Client.DefaultEndpointResolver.#ctor(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint})
  name: DefaultEndpointResolver(IEnumerable<AmqpTcpEndpoint>)
  href: api/RabbitMQ.Client.DefaultEndpointResolver.html#RabbitMQ_Client_DefaultEndpointResolver__ctor_System_Collections_Generic_IEnumerable_RabbitMQ_Client_AmqpTcpEndpoint__
  commentId: M:RabbitMQ.Client.DefaultEndpointResolver.#ctor(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint})
  name.vb: New(IEnumerable(Of AmqpTcpEndpoint))
  fullName: RabbitMQ.Client.DefaultEndpointResolver.DefaultEndpointResolver(System.Collections.Generic.IEnumerable<RabbitMQ.Client.AmqpTcpEndpoint>)
  fullName.vb: RabbitMQ.Client.DefaultEndpointResolver.New(System.Collections.Generic.IEnumerable(Of RabbitMQ.Client.AmqpTcpEndpoint))
  nameWithType: DefaultEndpointResolver.DefaultEndpointResolver(IEnumerable<AmqpTcpEndpoint>)
  nameWithType.vb: DefaultEndpointResolver.New(IEnumerable(Of AmqpTcpEndpoint))
- uid: RabbitMQ.Client.DefaultEndpointResolver.#ctor*
  name: DefaultEndpointResolver
  href: api/RabbitMQ.Client.DefaultEndpointResolver.html#RabbitMQ_Client_DefaultEndpointResolver__ctor_
  commentId: Overload:RabbitMQ.Client.DefaultEndpointResolver.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.DefaultEndpointResolver.DefaultEndpointResolver
  fullName.vb: RabbitMQ.Client.DefaultEndpointResolver.New
  nameWithType: DefaultEndpointResolver.DefaultEndpointResolver
  nameWithType.vb: DefaultEndpointResolver.New
- uid: RabbitMQ.Client.DefaultEndpointResolver.All
  name: All()
  href: api/RabbitMQ.Client.DefaultEndpointResolver.html#RabbitMQ_Client_DefaultEndpointResolver_All
  commentId: M:RabbitMQ.Client.DefaultEndpointResolver.All
  fullName: RabbitMQ.Client.DefaultEndpointResolver.All()
  nameWithType: DefaultEndpointResolver.All()
- uid: RabbitMQ.Client.DefaultEndpointResolver.All*
  name: All
  href: api/RabbitMQ.Client.DefaultEndpointResolver.html#RabbitMQ_Client_DefaultEndpointResolver_All_
  commentId: Overload:RabbitMQ.Client.DefaultEndpointResolver.All
  isSpec: "True"
  fullName: RabbitMQ.Client.DefaultEndpointResolver.All
  nameWithType: DefaultEndpointResolver.All
- uid: RabbitMQ.Client.DeliveryModes
  name: DeliveryModes
  href: api/RabbitMQ.Client.DeliveryModes.html
  commentId: T:RabbitMQ.Client.DeliveryModes
  fullName: RabbitMQ.Client.DeliveryModes
  nameWithType: DeliveryModes
- uid: RabbitMQ.Client.DeliveryModes.Persistent
  name: Persistent
  href: api/RabbitMQ.Client.DeliveryModes.html#RabbitMQ_Client_DeliveryModes_Persistent
  commentId: F:RabbitMQ.Client.DeliveryModes.Persistent
  fullName: RabbitMQ.Client.DeliveryModes.Persistent
  nameWithType: DeliveryModes.Persistent
- uid: RabbitMQ.Client.DeliveryModes.Transient
  name: Transient
  href: api/RabbitMQ.Client.DeliveryModes.html#RabbitMQ_Client_DeliveryModes_Transient
  commentId: F:RabbitMQ.Client.DeliveryModes.Transient
  fullName: RabbitMQ.Client.DeliveryModes.Transient
  nameWithType: DeliveryModes.Transient
- uid: RabbitMQ.Client.EndpointResolverExtensions
  name: EndpointResolverExtensions
  href: api/RabbitMQ.Client.EndpointResolverExtensions.html
  commentId: T:RabbitMQ.Client.EndpointResolverExtensions
  fullName: RabbitMQ.Client.EndpointResolverExtensions
  nameWithType: EndpointResolverExtensions
- uid: RabbitMQ.Client.EndpointResolverExtensions.SelectOneAsync*
  name: SelectOneAsync
  href: api/RabbitMQ.Client.EndpointResolverExtensions.html#RabbitMQ_Client_EndpointResolverExtensions_SelectOneAsync_
  commentId: Overload:RabbitMQ.Client.EndpointResolverExtensions.SelectOneAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.EndpointResolverExtensions.SelectOneAsync
  nameWithType: EndpointResolverExtensions.SelectOneAsync
- uid: RabbitMQ.Client.EndpointResolverExtensions.SelectOneAsync``1(RabbitMQ.Client.IEndpointResolver,System.Func{RabbitMQ.Client.AmqpTcpEndpoint,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  name: SelectOneAsync<T>(IEndpointResolver, Func<AmqpTcpEndpoint, CancellationToken, Task<T>>, CancellationToken)
  href: api/RabbitMQ.Client.EndpointResolverExtensions.html#RabbitMQ_Client_EndpointResolverExtensions_SelectOneAsync__1_RabbitMQ_Client_IEndpointResolver_System_Func_RabbitMQ_Client_AmqpTcpEndpoint_System_Threading_CancellationToken_System_Threading_Tasks_Task___0___System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.EndpointResolverExtensions.SelectOneAsync``1(RabbitMQ.Client.IEndpointResolver,System.Func{RabbitMQ.Client.AmqpTcpEndpoint,System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)
  name.vb: SelectOneAsync(Of T)(IEndpointResolver, Func(Of AmqpTcpEndpoint, CancellationToken, Task(Of T)), CancellationToken)
  fullName: RabbitMQ.Client.EndpointResolverExtensions.SelectOneAsync<T>(RabbitMQ.Client.IEndpointResolver, System.Func<RabbitMQ.Client.AmqpTcpEndpoint, System.Threading.CancellationToken, System.Threading.Tasks.Task<T>>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.EndpointResolverExtensions.SelectOneAsync(Of T)(RabbitMQ.Client.IEndpointResolver, System.Func(Of RabbitMQ.Client.AmqpTcpEndpoint, System.Threading.CancellationToken, System.Threading.Tasks.Task(Of T)), System.Threading.CancellationToken)
  nameWithType: EndpointResolverExtensions.SelectOneAsync<T>(IEndpointResolver, Func<AmqpTcpEndpoint, CancellationToken, Task<T>>, CancellationToken)
  nameWithType.vb: EndpointResolverExtensions.SelectOneAsync(Of T)(IEndpointResolver, Func(Of AmqpTcpEndpoint, CancellationToken, Task(Of T)), CancellationToken)
- uid: RabbitMQ.Client.Events
  name: RabbitMQ.Client.Events
  href: api/RabbitMQ.Client.Events.html
  commentId: N:RabbitMQ.Client.Events
  fullName: RabbitMQ.Client.Events
  nameWithType: RabbitMQ.Client.Events
- uid: RabbitMQ.Client.Events.AsyncEventArgs
  name: AsyncEventArgs
  href: api/RabbitMQ.Client.Events.AsyncEventArgs.html
  commentId: T:RabbitMQ.Client.Events.AsyncEventArgs
  fullName: RabbitMQ.Client.Events.AsyncEventArgs
  nameWithType: AsyncEventArgs
- uid: RabbitMQ.Client.Events.AsyncEventArgs.#ctor(System.Threading.CancellationToken)
  name: AsyncEventArgs(CancellationToken)
  href: api/RabbitMQ.Client.Events.AsyncEventArgs.html#RabbitMQ_Client_Events_AsyncEventArgs__ctor_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.AsyncEventArgs.#ctor(System.Threading.CancellationToken)
  name.vb: New(CancellationToken)
  fullName: RabbitMQ.Client.Events.AsyncEventArgs.AsyncEventArgs(System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.AsyncEventArgs.New(System.Threading.CancellationToken)
  nameWithType: AsyncEventArgs.AsyncEventArgs(CancellationToken)
  nameWithType.vb: AsyncEventArgs.New(CancellationToken)
- uid: RabbitMQ.Client.Events.AsyncEventArgs.#ctor*
  name: AsyncEventArgs
  href: api/RabbitMQ.Client.Events.AsyncEventArgs.html#RabbitMQ_Client_Events_AsyncEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.AsyncEventArgs.AsyncEventArgs
  fullName.vb: RabbitMQ.Client.Events.AsyncEventArgs.New
  nameWithType: AsyncEventArgs.AsyncEventArgs
  nameWithType.vb: AsyncEventArgs.New
- uid: RabbitMQ.Client.Events.AsyncEventArgs.CancellationToken
  name: CancellationToken
  href: api/RabbitMQ.Client.Events.AsyncEventArgs.html#RabbitMQ_Client_Events_AsyncEventArgs_CancellationToken
  commentId: P:RabbitMQ.Client.Events.AsyncEventArgs.CancellationToken
  fullName: RabbitMQ.Client.Events.AsyncEventArgs.CancellationToken
  nameWithType: AsyncEventArgs.CancellationToken
- uid: RabbitMQ.Client.Events.AsyncEventArgs.CancellationToken*
  name: CancellationToken
  href: api/RabbitMQ.Client.Events.AsyncEventArgs.html#RabbitMQ_Client_Events_AsyncEventArgs_CancellationToken_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventArgs.CancellationToken
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventArgs.CancellationToken
  nameWithType: AsyncEventArgs.CancellationToken
- uid: RabbitMQ.Client.Events.AsyncEventArgs.CreateOrDefault(System.Threading.CancellationToken)
  name: CreateOrDefault(CancellationToken)
  href: api/RabbitMQ.Client.Events.AsyncEventArgs.html#RabbitMQ_Client_Events_AsyncEventArgs_CreateOrDefault_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.AsyncEventArgs.CreateOrDefault(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.Events.AsyncEventArgs.CreateOrDefault(System.Threading.CancellationToken)
  nameWithType: AsyncEventArgs.CreateOrDefault(CancellationToken)
- uid: RabbitMQ.Client.Events.AsyncEventArgs.CreateOrDefault*
  name: CreateOrDefault
  href: api/RabbitMQ.Client.Events.AsyncEventArgs.html#RabbitMQ_Client_Events_AsyncEventArgs_CreateOrDefault_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventArgs.CreateOrDefault
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventArgs.CreateOrDefault
  nameWithType: AsyncEventArgs.CreateOrDefault
- uid: RabbitMQ.Client.Events.AsyncEventArgs.Empty
  name: Empty
  href: api/RabbitMQ.Client.Events.AsyncEventArgs.html#RabbitMQ_Client_Events_AsyncEventArgs_Empty
  commentId: F:RabbitMQ.Client.Events.AsyncEventArgs.Empty
  fullName: RabbitMQ.Client.Events.AsyncEventArgs.Empty
  nameWithType: AsyncEventArgs.Empty
- uid: RabbitMQ.Client.Events.AsyncEventHandler`1
  name: AsyncEventHandler<TEvent>
  href: api/RabbitMQ.Client.Events.AsyncEventHandler-1.html
  commentId: T:RabbitMQ.Client.Events.AsyncEventHandler`1
  name.vb: AsyncEventHandler(Of TEvent)
  fullName: RabbitMQ.Client.Events.AsyncEventHandler<TEvent>
  fullName.vb: RabbitMQ.Client.Events.AsyncEventHandler(Of TEvent)
  nameWithType: AsyncEventHandler<TEvent>
  nameWithType.vb: AsyncEventHandler(Of TEvent)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer
  name: AsyncEventingBasicConsumer
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html
  commentId: T:RabbitMQ.Client.Events.AsyncEventingBasicConsumer
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer
  nameWithType: AsyncEventingBasicConsumer
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.#ctor(RabbitMQ.Client.IChannel)
  name: AsyncEventingBasicConsumer(IChannel)
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer__ctor_RabbitMQ_Client_IChannel_
  commentId: M:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.#ctor(RabbitMQ.Client.IChannel)
  name.vb: New(IChannel)
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.AsyncEventingBasicConsumer(RabbitMQ.Client.IChannel)
  fullName.vb: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.New(RabbitMQ.Client.IChannel)
  nameWithType: AsyncEventingBasicConsumer.AsyncEventingBasicConsumer(IChannel)
  nameWithType.vb: AsyncEventingBasicConsumer.New(IChannel)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.#ctor*
  name: AsyncEventingBasicConsumer
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer__ctor_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.AsyncEventingBasicConsumer
  fullName.vb: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.New
  nameWithType: AsyncEventingBasicConsumer.AsyncEventingBasicConsumer
  nameWithType.vb: AsyncEventingBasicConsumer.New
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOkAsync(System.String,System.Threading.CancellationToken)
  name: HandleBasicConsumeOkAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleBasicConsumeOkAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOkAsync(System.String,System.Threading.CancellationToken)
  name.vb: HandleBasicConsumeOkAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOkAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOkAsync(String, System.Threading.CancellationToken)
  nameWithType: AsyncEventingBasicConsumer.HandleBasicConsumeOkAsync(string, CancellationToken)
  nameWithType.vb: AsyncEventingBasicConsumer.HandleBasicConsumeOkAsync(String, CancellationToken)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOkAsync*
  name: HandleBasicConsumeOkAsync
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleBasicConsumeOkAsync_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOkAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicConsumeOkAsync
  nameWithType: AsyncEventingBasicConsumer.HandleBasicConsumeOkAsync
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliverAsync(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: HandleBasicDeliverAsync(string, ulong, bool, string, string, IReadOnlyBasicProperties, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleBasicDeliverAsync_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IReadOnlyBasicProperties_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliverAsync(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: HandleBasicDeliverAsync(String, ULong, Boolean, String, String, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliverAsync(string, ulong, bool, string, string, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliverAsync(String, ULong, Boolean, String, String, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: AsyncEventingBasicConsumer.HandleBasicDeliverAsync(string, ulong, bool, string, string, IReadOnlyBasicProperties, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: AsyncEventingBasicConsumer.HandleBasicDeliverAsync(String, ULong, Boolean, String, String, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliverAsync*
  name: HandleBasicDeliverAsync
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleBasicDeliverAsync_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliverAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleBasicDeliverAsync
  nameWithType: AsyncEventingBasicConsumer.HandleBasicDeliverAsync
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleChannelShutdownAsync(System.Object,RabbitMQ.Client.Events.ShutdownEventArgs)
  name: HandleChannelShutdownAsync(object, ShutdownEventArgs)
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleChannelShutdownAsync_System_Object_RabbitMQ_Client_Events_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleChannelShutdownAsync(System.Object,RabbitMQ.Client.Events.ShutdownEventArgs)
  name.vb: HandleChannelShutdownAsync(Object, ShutdownEventArgs)
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleChannelShutdownAsync(object, RabbitMQ.Client.Events.ShutdownEventArgs)
  fullName.vb: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleChannelShutdownAsync(Object, RabbitMQ.Client.Events.ShutdownEventArgs)
  nameWithType: AsyncEventingBasicConsumer.HandleChannelShutdownAsync(object, ShutdownEventArgs)
  nameWithType.vb: AsyncEventingBasicConsumer.HandleChannelShutdownAsync(Object, ShutdownEventArgs)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleChannelShutdownAsync*
  name: HandleChannelShutdownAsync
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_HandleChannelShutdownAsync_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleChannelShutdownAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.HandleChannelShutdownAsync
  nameWithType: AsyncEventingBasicConsumer.HandleChannelShutdownAsync
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.OnCancelAsync(System.String[],System.Threading.CancellationToken)
  name: OnCancelAsync(string[], CancellationToken)
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_OnCancelAsync_System_String___System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.OnCancelAsync(System.String[],System.Threading.CancellationToken)
  name.vb: OnCancelAsync(String(), CancellationToken)
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.OnCancelAsync(string[], System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.OnCancelAsync(String(), System.Threading.CancellationToken)
  nameWithType: AsyncEventingBasicConsumer.OnCancelAsync(string[], CancellationToken)
  nameWithType.vb: AsyncEventingBasicConsumer.OnCancelAsync(String(), CancellationToken)
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.OnCancelAsync*
  name: OnCancelAsync
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_OnCancelAsync_
  commentId: Overload:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.OnCancelAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.OnCancelAsync
  nameWithType: AsyncEventingBasicConsumer.OnCancelAsync
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.ReceivedAsync
  name: ReceivedAsync
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_ReceivedAsync
  commentId: E:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.ReceivedAsync
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.ReceivedAsync
  nameWithType: AsyncEventingBasicConsumer.ReceivedAsync
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.RegisteredAsync
  name: RegisteredAsync
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_RegisteredAsync
  commentId: E:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.RegisteredAsync
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.RegisteredAsync
  nameWithType: AsyncEventingBasicConsumer.RegisteredAsync
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.ShutdownAsync
  name: ShutdownAsync
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_ShutdownAsync
  commentId: E:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.ShutdownAsync
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.ShutdownAsync
  nameWithType: AsyncEventingBasicConsumer.ShutdownAsync
- uid: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.UnregisteredAsync
  name: UnregisteredAsync
  href: api/RabbitMQ.Client.Events.AsyncEventingBasicConsumer.html#RabbitMQ_Client_Events_AsyncEventingBasicConsumer_UnregisteredAsync
  commentId: E:RabbitMQ.Client.Events.AsyncEventingBasicConsumer.UnregisteredAsync
  fullName: RabbitMQ.Client.Events.AsyncEventingBasicConsumer.UnregisteredAsync
  nameWithType: AsyncEventingBasicConsumer.UnregisteredAsync
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs
  name: BaseExceptionEventArgs
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html
  commentId: T:RabbitMQ.Client.Events.BaseExceptionEventArgs
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs
  nameWithType: BaseExceptionEventArgs
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception,System.Threading.CancellationToken)
  name: BaseExceptionEventArgs(IDictionary<string, object>, Exception, CancellationToken)
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs__ctor_System_Collections_Generic_IDictionary_System_String_System_Object__System_Exception_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.BaseExceptionEventArgs.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception,System.Threading.CancellationToken)
  name.vb: New(IDictionary(Of String, Object), Exception, CancellationToken)
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.BaseExceptionEventArgs(System.Collections.Generic.IDictionary<string, object>, System.Exception, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.BaseExceptionEventArgs.New(System.Collections.Generic.IDictionary(Of String, Object), System.Exception, System.Threading.CancellationToken)
  nameWithType: BaseExceptionEventArgs.BaseExceptionEventArgs(IDictionary<string, object>, Exception, CancellationToken)
  nameWithType.vb: BaseExceptionEventArgs.New(IDictionary(Of String, Object), Exception, CancellationToken)
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.#ctor*
  name: BaseExceptionEventArgs
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.BaseExceptionEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.BaseExceptionEventArgs
  fullName.vb: RabbitMQ.Client.Events.BaseExceptionEventArgs.New
  nameWithType: BaseExceptionEventArgs.BaseExceptionEventArgs
  nameWithType.vb: BaseExceptionEventArgs.New
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.Detail
  name: Detail
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs_Detail
  commentId: F:RabbitMQ.Client.Events.BaseExceptionEventArgs.Detail
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.Detail
  nameWithType: BaseExceptionEventArgs.Detail
- uid: RabbitMQ.Client.Events.BaseExceptionEventArgs.Exception
  name: Exception
  href: api/RabbitMQ.Client.Events.BaseExceptionEventArgs.html#RabbitMQ_Client_Events_BaseExceptionEventArgs_Exception
  commentId: F:RabbitMQ.Client.Events.BaseExceptionEventArgs.Exception
  fullName: RabbitMQ.Client.Events.BaseExceptionEventArgs.Exception
  nameWithType: BaseExceptionEventArgs.Exception
- uid: RabbitMQ.Client.Events.BasicAckEventArgs
  name: BasicAckEventArgs
  href: api/RabbitMQ.Client.Events.BasicAckEventArgs.html
  commentId: T:RabbitMQ.Client.Events.BasicAckEventArgs
  fullName: RabbitMQ.Client.Events.BasicAckEventArgs
  nameWithType: BasicAckEventArgs
- uid: RabbitMQ.Client.Events.BasicAckEventArgs.#ctor(System.UInt64,System.Boolean,System.Threading.CancellationToken)
  name: BasicAckEventArgs(ulong, bool, CancellationToken)
  href: api/RabbitMQ.Client.Events.BasicAckEventArgs.html#RabbitMQ_Client_Events_BasicAckEventArgs__ctor_System_UInt64_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.BasicAckEventArgs.#ctor(System.UInt64,System.Boolean,System.Threading.CancellationToken)
  name.vb: New(ULong, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.Events.BasicAckEventArgs.BasicAckEventArgs(ulong, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.BasicAckEventArgs.New(ULong, Boolean, System.Threading.CancellationToken)
  nameWithType: BasicAckEventArgs.BasicAckEventArgs(ulong, bool, CancellationToken)
  nameWithType.vb: BasicAckEventArgs.New(ULong, Boolean, CancellationToken)
- uid: RabbitMQ.Client.Events.BasicAckEventArgs.#ctor*
  name: BasicAckEventArgs
  href: api/RabbitMQ.Client.Events.BasicAckEventArgs.html#RabbitMQ_Client_Events_BasicAckEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.BasicAckEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.BasicAckEventArgs.BasicAckEventArgs
  fullName.vb: RabbitMQ.Client.Events.BasicAckEventArgs.New
  nameWithType: BasicAckEventArgs.BasicAckEventArgs
  nameWithType.vb: BasicAckEventArgs.New
- uid: RabbitMQ.Client.Events.BasicAckEventArgs.DeliveryTag
  name: DeliveryTag
  href: api/RabbitMQ.Client.Events.BasicAckEventArgs.html#RabbitMQ_Client_Events_BasicAckEventArgs_DeliveryTag
  commentId: F:RabbitMQ.Client.Events.BasicAckEventArgs.DeliveryTag
  fullName: RabbitMQ.Client.Events.BasicAckEventArgs.DeliveryTag
  nameWithType: BasicAckEventArgs.DeliveryTag
- uid: RabbitMQ.Client.Events.BasicAckEventArgs.Multiple
  name: Multiple
  href: api/RabbitMQ.Client.Events.BasicAckEventArgs.html#RabbitMQ_Client_Events_BasicAckEventArgs_Multiple
  commentId: F:RabbitMQ.Client.Events.BasicAckEventArgs.Multiple
  fullName: RabbitMQ.Client.Events.BasicAckEventArgs.Multiple
  nameWithType: BasicAckEventArgs.Multiple
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs
  name: BasicDeliverEventArgs
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html
  commentId: T:RabbitMQ.Client.Events.BasicDeliverEventArgs
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs
  nameWithType: BasicDeliverEventArgs
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.#ctor(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: BasicDeliverEventArgs(string, ulong, bool, string, string, IReadOnlyBasicProperties, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs__ctor_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IReadOnlyBasicProperties_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.BasicDeliverEventArgs.#ctor(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: New(String, ULong, Boolean, String, String, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicDeliverEventArgs(string, ulong, bool, string, string, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.BasicDeliverEventArgs.New(String, ULong, Boolean, String, String, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: BasicDeliverEventArgs.BasicDeliverEventArgs(string, ulong, bool, string, string, IReadOnlyBasicProperties, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: BasicDeliverEventArgs.New(String, ULong, Boolean, String, String, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.#ctor*
  name: BasicDeliverEventArgs
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.BasicDeliverEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicDeliverEventArgs
  fullName.vb: RabbitMQ.Client.Events.BasicDeliverEventArgs.New
  nameWithType: BasicDeliverEventArgs.BasicDeliverEventArgs
  nameWithType.vb: BasicDeliverEventArgs.New
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicProperties
  name: BasicProperties
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_BasicProperties
  commentId: F:RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicProperties
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.BasicProperties
  nameWithType: BasicDeliverEventArgs.BasicProperties
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.Body
  name: Body
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_Body
  commentId: F:RabbitMQ.Client.Events.BasicDeliverEventArgs.Body
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.Body
  nameWithType: BasicDeliverEventArgs.Body
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.ConsumerTag
  name: ConsumerTag
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_ConsumerTag
  commentId: F:RabbitMQ.Client.Events.BasicDeliverEventArgs.ConsumerTag
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.ConsumerTag
  nameWithType: BasicDeliverEventArgs.ConsumerTag
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.DeliveryTag
  name: DeliveryTag
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_DeliveryTag
  commentId: F:RabbitMQ.Client.Events.BasicDeliverEventArgs.DeliveryTag
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.DeliveryTag
  nameWithType: BasicDeliverEventArgs.DeliveryTag
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.Exchange
  name: Exchange
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_Exchange
  commentId: F:RabbitMQ.Client.Events.BasicDeliverEventArgs.Exchange
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.Exchange
  nameWithType: BasicDeliverEventArgs.Exchange
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.Redelivered
  name: Redelivered
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_Redelivered
  commentId: F:RabbitMQ.Client.Events.BasicDeliverEventArgs.Redelivered
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.Redelivered
  nameWithType: BasicDeliverEventArgs.Redelivered
- uid: RabbitMQ.Client.Events.BasicDeliverEventArgs.RoutingKey
  name: RoutingKey
  href: api/RabbitMQ.Client.Events.BasicDeliverEventArgs.html#RabbitMQ_Client_Events_BasicDeliverEventArgs_RoutingKey
  commentId: F:RabbitMQ.Client.Events.BasicDeliverEventArgs.RoutingKey
  fullName: RabbitMQ.Client.Events.BasicDeliverEventArgs.RoutingKey
  nameWithType: BasicDeliverEventArgs.RoutingKey
- uid: RabbitMQ.Client.Events.BasicNackEventArgs
  name: BasicNackEventArgs
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html
  commentId: T:RabbitMQ.Client.Events.BasicNackEventArgs
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs
  nameWithType: BasicNackEventArgs
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.#ctor(System.UInt64,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name: BasicNackEventArgs(ulong, bool, bool, CancellationToken)
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs__ctor_System_UInt64_System_Boolean_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.BasicNackEventArgs.#ctor(System.UInt64,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name.vb: New(ULong, Boolean, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.BasicNackEventArgs(ulong, bool, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.BasicNackEventArgs.New(ULong, Boolean, Boolean, System.Threading.CancellationToken)
  nameWithType: BasicNackEventArgs.BasicNackEventArgs(ulong, bool, bool, CancellationToken)
  nameWithType.vb: BasicNackEventArgs.New(ULong, Boolean, Boolean, CancellationToken)
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.#ctor*
  name: BasicNackEventArgs
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.BasicNackEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.BasicNackEventArgs
  fullName.vb: RabbitMQ.Client.Events.BasicNackEventArgs.New
  nameWithType: BasicNackEventArgs.BasicNackEventArgs
  nameWithType.vb: BasicNackEventArgs.New
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.DeliveryTag
  name: DeliveryTag
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs_DeliveryTag
  commentId: F:RabbitMQ.Client.Events.BasicNackEventArgs.DeliveryTag
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.DeliveryTag
  nameWithType: BasicNackEventArgs.DeliveryTag
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.Multiple
  name: Multiple
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs_Multiple
  commentId: F:RabbitMQ.Client.Events.BasicNackEventArgs.Multiple
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.Multiple
  nameWithType: BasicNackEventArgs.Multiple
- uid: RabbitMQ.Client.Events.BasicNackEventArgs.Requeue
  name: Requeue
  href: api/RabbitMQ.Client.Events.BasicNackEventArgs.html#RabbitMQ_Client_Events_BasicNackEventArgs_Requeue
  commentId: F:RabbitMQ.Client.Events.BasicNackEventArgs.Requeue
  fullName: RabbitMQ.Client.Events.BasicNackEventArgs.Requeue
  nameWithType: BasicNackEventArgs.Requeue
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs
  name: BasicReturnEventArgs
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html
  commentId: T:RabbitMQ.Client.Events.BasicReturnEventArgs
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs
  nameWithType: BasicReturnEventArgs
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.#ctor(System.UInt16,System.String,System.String,System.String,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: BasicReturnEventArgs(ushort, string, string, string, IReadOnlyBasicProperties, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs__ctor_System_UInt16_System_String_System_String_System_String_RabbitMQ_Client_IReadOnlyBasicProperties_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.BasicReturnEventArgs.#ctor(System.UInt16,System.String,System.String,System.String,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: New(UShort, String, String, String, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.BasicReturnEventArgs(ushort, string, string, string, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.BasicReturnEventArgs.New(UShort, String, String, String, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: BasicReturnEventArgs.BasicReturnEventArgs(ushort, string, string, string, IReadOnlyBasicProperties, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: BasicReturnEventArgs.New(UShort, String, String, String, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.#ctor*
  name: BasicReturnEventArgs
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.BasicReturnEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.BasicReturnEventArgs
  fullName.vb: RabbitMQ.Client.Events.BasicReturnEventArgs.New
  nameWithType: BasicReturnEventArgs.BasicReturnEventArgs
  nameWithType.vb: BasicReturnEventArgs.New
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.BasicProperties
  name: BasicProperties
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_BasicProperties
  commentId: F:RabbitMQ.Client.Events.BasicReturnEventArgs.BasicProperties
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.BasicProperties
  nameWithType: BasicReturnEventArgs.BasicProperties
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.Body
  name: Body
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_Body
  commentId: F:RabbitMQ.Client.Events.BasicReturnEventArgs.Body
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.Body
  nameWithType: BasicReturnEventArgs.Body
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.Exchange
  name: Exchange
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_Exchange
  commentId: F:RabbitMQ.Client.Events.BasicReturnEventArgs.Exchange
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.Exchange
  nameWithType: BasicReturnEventArgs.Exchange
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_ReplyCode
  commentId: F:RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyCode
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyCode
  nameWithType: BasicReturnEventArgs.ReplyCode
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyText
  name: ReplyText
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_ReplyText
  commentId: F:RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyText
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.ReplyText
  nameWithType: BasicReturnEventArgs.ReplyText
- uid: RabbitMQ.Client.Events.BasicReturnEventArgs.RoutingKey
  name: RoutingKey
  href: api/RabbitMQ.Client.Events.BasicReturnEventArgs.html#RabbitMQ_Client_Events_BasicReturnEventArgs_RoutingKey
  commentId: F:RabbitMQ.Client.Events.BasicReturnEventArgs.RoutingKey
  fullName: RabbitMQ.Client.Events.BasicReturnEventArgs.RoutingKey
  nameWithType: BasicReturnEventArgs.RoutingKey
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs
  name: CallbackExceptionEventArgs
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html
  commentId: T:RabbitMQ.Client.Events.CallbackExceptionEventArgs
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs
  nameWithType: CallbackExceptionEventArgs
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception,System.Threading.CancellationToken)
  name: CallbackExceptionEventArgs(IDictionary<string, object>, Exception, CancellationToken)
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html#RabbitMQ_Client_Events_CallbackExceptionEventArgs__ctor_System_Collections_Generic_IDictionary_System_String_System_Object__System_Exception_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.CallbackExceptionEventArgs.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception,System.Threading.CancellationToken)
  name.vb: New(IDictionary(Of String, Object), Exception, CancellationToken)
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs.CallbackExceptionEventArgs(System.Collections.Generic.IDictionary<string, object>, System.Exception, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.CallbackExceptionEventArgs.New(System.Collections.Generic.IDictionary(Of String, Object), System.Exception, System.Threading.CancellationToken)
  nameWithType: CallbackExceptionEventArgs.CallbackExceptionEventArgs(IDictionary<string, object>, Exception, CancellationToken)
  nameWithType.vb: CallbackExceptionEventArgs.New(IDictionary(Of String, Object), Exception, CancellationToken)
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs.#ctor*
  name: CallbackExceptionEventArgs
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html#RabbitMQ_Client_Events_CallbackExceptionEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.CallbackExceptionEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs.CallbackExceptionEventArgs
  fullName.vb: RabbitMQ.Client.Events.CallbackExceptionEventArgs.New
  nameWithType: CallbackExceptionEventArgs.CallbackExceptionEventArgs
  nameWithType.vb: CallbackExceptionEventArgs.New
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception,System.String,System.Object,System.Threading.CancellationToken)
  name: Build(Exception, string, object, CancellationToken)
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html#RabbitMQ_Client_Events_CallbackExceptionEventArgs_Build_System_Exception_System_String_System_Object_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception,System.String,System.Object,System.Threading.CancellationToken)
  name.vb: Build(Exception, String, Object, CancellationToken)
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception, string, object, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception, String, Object, System.Threading.CancellationToken)
  nameWithType: CallbackExceptionEventArgs.Build(Exception, string, object, CancellationToken)
  nameWithType.vb: CallbackExceptionEventArgs.Build(Exception, String, Object, CancellationToken)
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception,System.String,System.Threading.CancellationToken)
  name: Build(Exception, string, CancellationToken)
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html#RabbitMQ_Client_Events_CallbackExceptionEventArgs_Build_System_Exception_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception,System.String,System.Threading.CancellationToken)
  name.vb: Build(Exception, String, CancellationToken)
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception, string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build(System.Exception, String, System.Threading.CancellationToken)
  nameWithType: CallbackExceptionEventArgs.Build(Exception, string, CancellationToken)
  nameWithType.vb: CallbackExceptionEventArgs.Build(Exception, String, CancellationToken)
- uid: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build*
  name: Build
  href: api/RabbitMQ.Client.Events.CallbackExceptionEventArgs.html#RabbitMQ_Client_Events_CallbackExceptionEventArgs_Build_
  commentId: Overload:RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.CallbackExceptionEventArgs.Build
  nameWithType: CallbackExceptionEventArgs.Build
- uid: RabbitMQ.Client.Events.ConnectionBlockedEventArgs
  name: ConnectionBlockedEventArgs
  href: api/RabbitMQ.Client.Events.ConnectionBlockedEventArgs.html
  commentId: T:RabbitMQ.Client.Events.ConnectionBlockedEventArgs
  fullName: RabbitMQ.Client.Events.ConnectionBlockedEventArgs
  nameWithType: ConnectionBlockedEventArgs
- uid: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.#ctor(System.String,System.Threading.CancellationToken)
  name: ConnectionBlockedEventArgs(string, CancellationToken)
  href: api/RabbitMQ.Client.Events.ConnectionBlockedEventArgs.html#RabbitMQ_Client_Events_ConnectionBlockedEventArgs__ctor_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.ConnectionBlockedEventArgs.#ctor(System.String,System.Threading.CancellationToken)
  name.vb: New(String, CancellationToken)
  fullName: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.ConnectionBlockedEventArgs(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.New(String, System.Threading.CancellationToken)
  nameWithType: ConnectionBlockedEventArgs.ConnectionBlockedEventArgs(string, CancellationToken)
  nameWithType.vb: ConnectionBlockedEventArgs.New(String, CancellationToken)
- uid: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.#ctor*
  name: ConnectionBlockedEventArgs
  href: api/RabbitMQ.Client.Events.ConnectionBlockedEventArgs.html#RabbitMQ_Client_Events_ConnectionBlockedEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.ConnectionBlockedEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.ConnectionBlockedEventArgs
  fullName.vb: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.New
  nameWithType: ConnectionBlockedEventArgs.ConnectionBlockedEventArgs
  nameWithType.vb: ConnectionBlockedEventArgs.New
- uid: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.Reason
  name: Reason
  href: api/RabbitMQ.Client.Events.ConnectionBlockedEventArgs.html#RabbitMQ_Client_Events_ConnectionBlockedEventArgs_Reason
  commentId: F:RabbitMQ.Client.Events.ConnectionBlockedEventArgs.Reason
  fullName: RabbitMQ.Client.Events.ConnectionBlockedEventArgs.Reason
  nameWithType: ConnectionBlockedEventArgs.Reason
- uid: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs
  name: ConnectionRecoveryErrorEventArgs
  href: api/RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.html
  commentId: T:RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs
  fullName: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs
  nameWithType: ConnectionRecoveryErrorEventArgs
- uid: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.#ctor(System.Exception,System.Threading.CancellationToken)
  name: ConnectionRecoveryErrorEventArgs(Exception, CancellationToken)
  href: api/RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.html#RabbitMQ_Client_Events_ConnectionRecoveryErrorEventArgs__ctor_System_Exception_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.#ctor(System.Exception,System.Threading.CancellationToken)
  name.vb: New(Exception, CancellationToken)
  fullName: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.ConnectionRecoveryErrorEventArgs(System.Exception, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.New(System.Exception, System.Threading.CancellationToken)
  nameWithType: ConnectionRecoveryErrorEventArgs.ConnectionRecoveryErrorEventArgs(Exception, CancellationToken)
  nameWithType.vb: ConnectionRecoveryErrorEventArgs.New(Exception, CancellationToken)
- uid: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.#ctor*
  name: ConnectionRecoveryErrorEventArgs
  href: api/RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.html#RabbitMQ_Client_Events_ConnectionRecoveryErrorEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.ConnectionRecoveryErrorEventArgs
  fullName.vb: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.New
  nameWithType: ConnectionRecoveryErrorEventArgs.ConnectionRecoveryErrorEventArgs
  nameWithType.vb: ConnectionRecoveryErrorEventArgs.New
- uid: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.Exception
  name: Exception
  href: api/RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.html#RabbitMQ_Client_Events_ConnectionRecoveryErrorEventArgs_Exception
  commentId: F:RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.Exception
  fullName: RabbitMQ.Client.Events.ConnectionRecoveryErrorEventArgs.Exception
  nameWithType: ConnectionRecoveryErrorEventArgs.Exception
- uid: RabbitMQ.Client.Events.ConsumerEventArgs
  name: ConsumerEventArgs
  href: api/RabbitMQ.Client.Events.ConsumerEventArgs.html
  commentId: T:RabbitMQ.Client.Events.ConsumerEventArgs
  fullName: RabbitMQ.Client.Events.ConsumerEventArgs
  nameWithType: ConsumerEventArgs
- uid: RabbitMQ.Client.Events.ConsumerEventArgs.#ctor(System.String[],System.Threading.CancellationToken)
  name: ConsumerEventArgs(string[], CancellationToken)
  href: api/RabbitMQ.Client.Events.ConsumerEventArgs.html#RabbitMQ_Client_Events_ConsumerEventArgs__ctor_System_String___System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.ConsumerEventArgs.#ctor(System.String[],System.Threading.CancellationToken)
  name.vb: New(String(), CancellationToken)
  fullName: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerEventArgs(string[], System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.ConsumerEventArgs.New(String(), System.Threading.CancellationToken)
  nameWithType: ConsumerEventArgs.ConsumerEventArgs(string[], CancellationToken)
  nameWithType.vb: ConsumerEventArgs.New(String(), CancellationToken)
- uid: RabbitMQ.Client.Events.ConsumerEventArgs.#ctor*
  name: ConsumerEventArgs
  href: api/RabbitMQ.Client.Events.ConsumerEventArgs.html#RabbitMQ_Client_Events_ConsumerEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.ConsumerEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerEventArgs
  fullName.vb: RabbitMQ.Client.Events.ConsumerEventArgs.New
  nameWithType: ConsumerEventArgs.ConsumerEventArgs
  nameWithType.vb: ConsumerEventArgs.New
- uid: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerTags
  name: ConsumerTags
  href: api/RabbitMQ.Client.Events.ConsumerEventArgs.html#RabbitMQ_Client_Events_ConsumerEventArgs_ConsumerTags
  commentId: F:RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerTags
  fullName: RabbitMQ.Client.Events.ConsumerEventArgs.ConsumerTags
  nameWithType: ConsumerEventArgs.ConsumerTags
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs
  name: ConsumerTagChangedAfterRecoveryEventArgs
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html
  commentId: T:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.#ctor(System.String,System.String,System.Threading.CancellationToken)
  name: ConsumerTagChangedAfterRecoveryEventArgs(string, string, CancellationToken)
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_ConsumerTagChangedAfterRecoveryEventArgs__ctor_System_String_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.#ctor(System.String,System.String,System.Threading.CancellationToken)
  name.vb: New(String, String, CancellationToken)
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.ConsumerTagChangedAfterRecoveryEventArgs(string, string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.New(String, String, System.Threading.CancellationToken)
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs.ConsumerTagChangedAfterRecoveryEventArgs(string, string, CancellationToken)
  nameWithType.vb: ConsumerTagChangedAfterRecoveryEventArgs.New(String, String, CancellationToken)
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.#ctor*
  name: ConsumerTagChangedAfterRecoveryEventArgs
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_ConsumerTagChangedAfterRecoveryEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.ConsumerTagChangedAfterRecoveryEventArgs
  fullName.vb: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.New
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs.ConsumerTagChangedAfterRecoveryEventArgs
  nameWithType.vb: ConsumerTagChangedAfterRecoveryEventArgs.New
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
  name: TagAfter
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_ConsumerTagChangedAfterRecoveryEventArgs_TagAfter
  commentId: F:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs.TagAfter
- uid: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
  name: TagBefore
  href: api/RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_ConsumerTagChangedAfterRecoveryEventArgs_TagBefore
  commentId: F:RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
  fullName: RabbitMQ.Client.Events.ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
  nameWithType: ConsumerTagChangedAfterRecoveryEventArgs.TagBefore
- uid: RabbitMQ.Client.Events.FlowControlEventArgs
  name: FlowControlEventArgs
  href: api/RabbitMQ.Client.Events.FlowControlEventArgs.html
  commentId: T:RabbitMQ.Client.Events.FlowControlEventArgs
  fullName: RabbitMQ.Client.Events.FlowControlEventArgs
  nameWithType: FlowControlEventArgs
- uid: RabbitMQ.Client.Events.FlowControlEventArgs.#ctor(System.Boolean,System.Threading.CancellationToken)
  name: FlowControlEventArgs(bool, CancellationToken)
  href: api/RabbitMQ.Client.Events.FlowControlEventArgs.html#RabbitMQ_Client_Events_FlowControlEventArgs__ctor_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.FlowControlEventArgs.#ctor(System.Boolean,System.Threading.CancellationToken)
  name.vb: New(Boolean, CancellationToken)
  fullName: RabbitMQ.Client.Events.FlowControlEventArgs.FlowControlEventArgs(bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.FlowControlEventArgs.New(Boolean, System.Threading.CancellationToken)
  nameWithType: FlowControlEventArgs.FlowControlEventArgs(bool, CancellationToken)
  nameWithType.vb: FlowControlEventArgs.New(Boolean, CancellationToken)
- uid: RabbitMQ.Client.Events.FlowControlEventArgs.#ctor*
  name: FlowControlEventArgs
  href: api/RabbitMQ.Client.Events.FlowControlEventArgs.html#RabbitMQ_Client_Events_FlowControlEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.FlowControlEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.FlowControlEventArgs.FlowControlEventArgs
  fullName.vb: RabbitMQ.Client.Events.FlowControlEventArgs.New
  nameWithType: FlowControlEventArgs.FlowControlEventArgs
  nameWithType.vb: FlowControlEventArgs.New
- uid: RabbitMQ.Client.Events.FlowControlEventArgs.Active
  name: Active
  href: api/RabbitMQ.Client.Events.FlowControlEventArgs.html#RabbitMQ_Client_Events_FlowControlEventArgs_Active
  commentId: F:RabbitMQ.Client.Events.FlowControlEventArgs.Active
  fullName: RabbitMQ.Client.Events.FlowControlEventArgs.Active
  nameWithType: FlowControlEventArgs.Active
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs
  name: QueueNameChangedAfterRecoveryEventArgs
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html
  commentId: T:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs
  nameWithType: QueueNameChangedAfterRecoveryEventArgs
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.#ctor(System.String,System.String,System.Threading.CancellationToken)
  name: QueueNameChangedAfterRecoveryEventArgs(string, string, CancellationToken)
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_QueueNameChangedAfterRecoveryEventArgs__ctor_System_String_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.#ctor(System.String,System.String,System.Threading.CancellationToken)
  name.vb: New(String, String, CancellationToken)
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.QueueNameChangedAfterRecoveryEventArgs(string, string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.New(String, String, System.Threading.CancellationToken)
  nameWithType: QueueNameChangedAfterRecoveryEventArgs.QueueNameChangedAfterRecoveryEventArgs(string, string, CancellationToken)
  nameWithType.vb: QueueNameChangedAfterRecoveryEventArgs.New(String, String, CancellationToken)
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.#ctor*
  name: QueueNameChangedAfterRecoveryEventArgs
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_QueueNameChangedAfterRecoveryEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.QueueNameChangedAfterRecoveryEventArgs
  fullName.vb: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.New
  nameWithType: QueueNameChangedAfterRecoveryEventArgs.QueueNameChangedAfterRecoveryEventArgs
  nameWithType.vb: QueueNameChangedAfterRecoveryEventArgs.New
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameAfter
  name: NameAfter
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_QueueNameChangedAfterRecoveryEventArgs_NameAfter
  commentId: F:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameAfter
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameAfter
  nameWithType: QueueNameChangedAfterRecoveryEventArgs.NameAfter
- uid: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameBefore
  name: NameBefore
  href: api/RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.html#RabbitMQ_Client_Events_QueueNameChangedAfterRecoveryEventArgs_NameBefore
  commentId: F:RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameBefore
  fullName: RabbitMQ.Client.Events.QueueNameChangedAfterRecoveryEventArgs.NameBefore
  nameWithType: QueueNameChangedAfterRecoveryEventArgs.NameBefore
- uid: RabbitMQ.Client.Events.RecoveringConsumerEventArgs
  name: RecoveringConsumerEventArgs
  href: api/RabbitMQ.Client.Events.RecoveringConsumerEventArgs.html
  commentId: T:RabbitMQ.Client.Events.RecoveringConsumerEventArgs
  fullName: RabbitMQ.Client.Events.RecoveringConsumerEventArgs
  nameWithType: RecoveringConsumerEventArgs
- uid: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: RecoveringConsumerEventArgs(string, IDictionary<string, object?>?, CancellationToken)
  href: api/RabbitMQ.Client.Events.RecoveringConsumerEventArgs.html#RabbitMQ_Client_Events_RecoveringConsumerEventArgs__ctor_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.RecoveringConsumerEventArgs.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name.vb: New(String, IDictionary(Of String, Object), CancellationToken)
  fullName: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.RecoveringConsumerEventArgs(string, System.Collections.Generic.IDictionary<string, object?>?, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.New(String, System.Collections.Generic.IDictionary(Of String, Object), System.Threading.CancellationToken)
  nameWithType: RecoveringConsumerEventArgs.RecoveringConsumerEventArgs(string, IDictionary<string, object?>?, CancellationToken)
  nameWithType.vb: RecoveringConsumerEventArgs.New(String, IDictionary(Of String, Object), CancellationToken)
- uid: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.#ctor*
  name: RecoveringConsumerEventArgs
  href: api/RabbitMQ.Client.Events.RecoveringConsumerEventArgs.html#RabbitMQ_Client_Events_RecoveringConsumerEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.RecoveringConsumerEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.RecoveringConsumerEventArgs
  fullName.vb: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.New
  nameWithType: RecoveringConsumerEventArgs.RecoveringConsumerEventArgs
  nameWithType.vb: RecoveringConsumerEventArgs.New
- uid: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerArguments
  name: ConsumerArguments
  href: api/RabbitMQ.Client.Events.RecoveringConsumerEventArgs.html#RabbitMQ_Client_Events_RecoveringConsumerEventArgs_ConsumerArguments
  commentId: P:RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerArguments
  fullName: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerArguments
  nameWithType: RecoveringConsumerEventArgs.ConsumerArguments
- uid: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerArguments*
  name: ConsumerArguments
  href: api/RabbitMQ.Client.Events.RecoveringConsumerEventArgs.html#RabbitMQ_Client_Events_RecoveringConsumerEventArgs_ConsumerArguments_
  commentId: Overload:RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerArguments
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerArguments
  nameWithType: RecoveringConsumerEventArgs.ConsumerArguments
- uid: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerTag
  name: ConsumerTag
  href: api/RabbitMQ.Client.Events.RecoveringConsumerEventArgs.html#RabbitMQ_Client_Events_RecoveringConsumerEventArgs_ConsumerTag
  commentId: P:RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerTag
  fullName: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerTag
  nameWithType: RecoveringConsumerEventArgs.ConsumerTag
- uid: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerTag*
  name: ConsumerTag
  href: api/RabbitMQ.Client.Events.RecoveringConsumerEventArgs.html#RabbitMQ_Client_Events_RecoveringConsumerEventArgs_ConsumerTag_
  commentId: Overload:RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerTag
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.RecoveringConsumerEventArgs.ConsumerTag
  nameWithType: RecoveringConsumerEventArgs.ConsumerTag
- uid: RabbitMQ.Client.Events.ShutdownEventArgs
  name: ShutdownEventArgs
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html
  commentId: T:RabbitMQ.Client.Events.ShutdownEventArgs
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs
  nameWithType: ShutdownEventArgs
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.#ctor(RabbitMQ.Client.ShutdownInitiator,System.UInt16,System.String,System.Exception,System.Threading.CancellationToken)
  name: ShutdownEventArgs(ShutdownInitiator, ushort, string, Exception, CancellationToken)
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs__ctor_RabbitMQ_Client_ShutdownInitiator_System_UInt16_System_String_System_Exception_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.ShutdownEventArgs.#ctor(RabbitMQ.Client.ShutdownInitiator,System.UInt16,System.String,System.Exception,System.Threading.CancellationToken)
  name.vb: New(ShutdownInitiator, UShort, String, Exception, CancellationToken)
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ShutdownEventArgs(RabbitMQ.Client.ShutdownInitiator, ushort, string, System.Exception, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.ShutdownEventArgs.New(RabbitMQ.Client.ShutdownInitiator, UShort, String, System.Exception, System.Threading.CancellationToken)
  nameWithType: ShutdownEventArgs.ShutdownEventArgs(ShutdownInitiator, ushort, string, Exception, CancellationToken)
  nameWithType.vb: ShutdownEventArgs.New(ShutdownInitiator, UShort, String, Exception, CancellationToken)
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.#ctor(RabbitMQ.Client.ShutdownInitiator,System.UInt16,System.String,System.Object,System.Threading.CancellationToken)
  name: ShutdownEventArgs(ShutdownInitiator, ushort, string, object?, CancellationToken)
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs__ctor_RabbitMQ_Client_ShutdownInitiator_System_UInt16_System_String_System_Object_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.ShutdownEventArgs.#ctor(RabbitMQ.Client.ShutdownInitiator,System.UInt16,System.String,System.Object,System.Threading.CancellationToken)
  name.vb: New(ShutdownInitiator, UShort, String, Object, CancellationToken)
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ShutdownEventArgs(RabbitMQ.Client.ShutdownInitiator, ushort, string, object?, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.ShutdownEventArgs.New(RabbitMQ.Client.ShutdownInitiator, UShort, String, Object, System.Threading.CancellationToken)
  nameWithType: ShutdownEventArgs.ShutdownEventArgs(ShutdownInitiator, ushort, string, object?, CancellationToken)
  nameWithType.vb: ShutdownEventArgs.New(ShutdownInitiator, UShort, String, Object, CancellationToken)
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.#ctor(RabbitMQ.Client.ShutdownInitiator,System.UInt16,System.String,System.UInt16,System.UInt16,System.Object,System.Threading.CancellationToken)
  name: ShutdownEventArgs(ShutdownInitiator, ushort, string, ushort, ushort, object?, CancellationToken)
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs__ctor_RabbitMQ_Client_ShutdownInitiator_System_UInt16_System_String_System_UInt16_System_UInt16_System_Object_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.Events.ShutdownEventArgs.#ctor(RabbitMQ.Client.ShutdownInitiator,System.UInt16,System.String,System.UInt16,System.UInt16,System.Object,System.Threading.CancellationToken)
  name.vb: New(ShutdownInitiator, UShort, String, UShort, UShort, Object, CancellationToken)
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ShutdownEventArgs(RabbitMQ.Client.ShutdownInitiator, ushort, string, ushort, ushort, object?, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.Events.ShutdownEventArgs.New(RabbitMQ.Client.ShutdownInitiator, UShort, String, UShort, UShort, Object, System.Threading.CancellationToken)
  nameWithType: ShutdownEventArgs.ShutdownEventArgs(ShutdownInitiator, ushort, string, ushort, ushort, object?, CancellationToken)
  nameWithType.vb: ShutdownEventArgs.New(ShutdownInitiator, UShort, String, UShort, UShort, Object, CancellationToken)
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.#ctor*
  name: ShutdownEventArgs
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs__ctor_
  commentId: Overload:RabbitMQ.Client.Events.ShutdownEventArgs.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ShutdownEventArgs
  fullName.vb: RabbitMQ.Client.Events.ShutdownEventArgs.New
  nameWithType: ShutdownEventArgs.ShutdownEventArgs
  nameWithType.vb: ShutdownEventArgs.New
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.Cause
  name: Cause
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_Cause
  commentId: P:RabbitMQ.Client.Events.ShutdownEventArgs.Cause
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.Cause
  nameWithType: ShutdownEventArgs.Cause
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.Cause*
  name: Cause
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_Cause_
  commentId: Overload:RabbitMQ.Client.Events.ShutdownEventArgs.Cause
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.Cause
  nameWithType: ShutdownEventArgs.Cause
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.ClassId
  name: ClassId
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_ClassId
  commentId: P:RabbitMQ.Client.Events.ShutdownEventArgs.ClassId
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ClassId
  nameWithType: ShutdownEventArgs.ClassId
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.ClassId*
  name: ClassId
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_ClassId_
  commentId: Overload:RabbitMQ.Client.Events.ShutdownEventArgs.ClassId
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ClassId
  nameWithType: ShutdownEventArgs.ClassId
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.Exception
  name: Exception
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_Exception
  commentId: P:RabbitMQ.Client.Events.ShutdownEventArgs.Exception
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.Exception
  nameWithType: ShutdownEventArgs.Exception
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.Exception*
  name: Exception
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_Exception_
  commentId: Overload:RabbitMQ.Client.Events.ShutdownEventArgs.Exception
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.Exception
  nameWithType: ShutdownEventArgs.Exception
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.Initiator
  name: Initiator
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_Initiator
  commentId: P:RabbitMQ.Client.Events.ShutdownEventArgs.Initiator
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.Initiator
  nameWithType: ShutdownEventArgs.Initiator
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.Initiator*
  name: Initiator
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_Initiator_
  commentId: Overload:RabbitMQ.Client.Events.ShutdownEventArgs.Initiator
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.Initiator
  nameWithType: ShutdownEventArgs.Initiator
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.MethodId
  name: MethodId
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_MethodId
  commentId: P:RabbitMQ.Client.Events.ShutdownEventArgs.MethodId
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.MethodId
  nameWithType: ShutdownEventArgs.MethodId
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.MethodId*
  name: MethodId
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_MethodId_
  commentId: Overload:RabbitMQ.Client.Events.ShutdownEventArgs.MethodId
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.MethodId
  nameWithType: ShutdownEventArgs.MethodId
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_ReplyCode
  commentId: P:RabbitMQ.Client.Events.ShutdownEventArgs.ReplyCode
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ReplyCode
  nameWithType: ShutdownEventArgs.ReplyCode
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Events.ShutdownEventArgs.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ReplyCode
  nameWithType: ShutdownEventArgs.ReplyCode
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.ReplyText
  name: ReplyText
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_ReplyText
  commentId: P:RabbitMQ.Client.Events.ShutdownEventArgs.ReplyText
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ReplyText
  nameWithType: ShutdownEventArgs.ReplyText
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.ReplyText*
  name: ReplyText
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_ReplyText_
  commentId: Overload:RabbitMQ.Client.Events.ShutdownEventArgs.ReplyText
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ReplyText
  nameWithType: ShutdownEventArgs.ReplyText
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.ToString
  name: ToString()
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_ToString
  commentId: M:RabbitMQ.Client.Events.ShutdownEventArgs.ToString
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ToString()
  nameWithType: ShutdownEventArgs.ToString()
- uid: RabbitMQ.Client.Events.ShutdownEventArgs.ToString*
  name: ToString
  href: api/RabbitMQ.Client.Events.ShutdownEventArgs.html#RabbitMQ_Client_Events_ShutdownEventArgs_ToString_
  commentId: Overload:RabbitMQ.Client.Events.ShutdownEventArgs.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.Events.ShutdownEventArgs.ToString
  nameWithType: ShutdownEventArgs.ToString
- uid: RabbitMQ.Client.Exceptions
  name: RabbitMQ.Client.Exceptions
  href: api/RabbitMQ.Client.Exceptions.html
  commentId: N:RabbitMQ.Client.Exceptions
  fullName: RabbitMQ.Client.Exceptions
  nameWithType: RabbitMQ.Client.Exceptions
- uid: RabbitMQ.Client.Exceptions.AlreadyClosedException
  name: AlreadyClosedException
  href: api/RabbitMQ.Client.Exceptions.AlreadyClosedException.html
  commentId: T:RabbitMQ.Client.Exceptions.AlreadyClosedException
  fullName: RabbitMQ.Client.Exceptions.AlreadyClosedException
  nameWithType: AlreadyClosedException
- uid: RabbitMQ.Client.Exceptions.AlreadyClosedException.#ctor(RabbitMQ.Client.Events.ShutdownEventArgs)
  name: AlreadyClosedException(ShutdownEventArgs)
  href: api/RabbitMQ.Client.Exceptions.AlreadyClosedException.html#RabbitMQ_Client_Exceptions_AlreadyClosedException__ctor_RabbitMQ_Client_Events_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.Exceptions.AlreadyClosedException.#ctor(RabbitMQ.Client.Events.ShutdownEventArgs)
  name.vb: New(ShutdownEventArgs)
  fullName: RabbitMQ.Client.Exceptions.AlreadyClosedException.AlreadyClosedException(RabbitMQ.Client.Events.ShutdownEventArgs)
  fullName.vb: RabbitMQ.Client.Exceptions.AlreadyClosedException.New(RabbitMQ.Client.Events.ShutdownEventArgs)
  nameWithType: AlreadyClosedException.AlreadyClosedException(ShutdownEventArgs)
  nameWithType.vb: AlreadyClosedException.New(ShutdownEventArgs)
- uid: RabbitMQ.Client.Exceptions.AlreadyClosedException.#ctor*
  name: AlreadyClosedException
  href: api/RabbitMQ.Client.Exceptions.AlreadyClosedException.html#RabbitMQ_Client_Exceptions_AlreadyClosedException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.AlreadyClosedException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.AlreadyClosedException.AlreadyClosedException
  fullName.vb: RabbitMQ.Client.Exceptions.AlreadyClosedException.New
  nameWithType: AlreadyClosedException.AlreadyClosedException
  nameWithType.vb: AlreadyClosedException.New
- uid: RabbitMQ.Client.Exceptions.AuthenticationFailureException
  name: AuthenticationFailureException
  href: api/RabbitMQ.Client.Exceptions.AuthenticationFailureException.html
  commentId: T:RabbitMQ.Client.Exceptions.AuthenticationFailureException
  fullName: RabbitMQ.Client.Exceptions.AuthenticationFailureException
  nameWithType: AuthenticationFailureException
- uid: RabbitMQ.Client.Exceptions.AuthenticationFailureException.#ctor(System.String)
  name: AuthenticationFailureException(string)
  href: api/RabbitMQ.Client.Exceptions.AuthenticationFailureException.html#RabbitMQ_Client_Exceptions_AuthenticationFailureException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.AuthenticationFailureException.#ctor(System.String)
  name.vb: New(String)
  fullName: RabbitMQ.Client.Exceptions.AuthenticationFailureException.AuthenticationFailureException(string)
  fullName.vb: RabbitMQ.Client.Exceptions.AuthenticationFailureException.New(String)
  nameWithType: AuthenticationFailureException.AuthenticationFailureException(string)
  nameWithType.vb: AuthenticationFailureException.New(String)
- uid: RabbitMQ.Client.Exceptions.AuthenticationFailureException.#ctor*
  name: AuthenticationFailureException
  href: api/RabbitMQ.Client.Exceptions.AuthenticationFailureException.html#RabbitMQ_Client_Exceptions_AuthenticationFailureException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.AuthenticationFailureException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.AuthenticationFailureException.AuthenticationFailureException
  fullName.vb: RabbitMQ.Client.Exceptions.AuthenticationFailureException.New
  nameWithType: AuthenticationFailureException.AuthenticationFailureException
  nameWithType.vb: AuthenticationFailureException.New
- uid: RabbitMQ.Client.Exceptions.BrokerUnreachableException
  name: BrokerUnreachableException
  href: api/RabbitMQ.Client.Exceptions.BrokerUnreachableException.html
  commentId: T:RabbitMQ.Client.Exceptions.BrokerUnreachableException
  fullName: RabbitMQ.Client.Exceptions.BrokerUnreachableException
  nameWithType: BrokerUnreachableException
- uid: RabbitMQ.Client.Exceptions.BrokerUnreachableException.#ctor(System.Exception)
  name: BrokerUnreachableException(Exception)
  href: api/RabbitMQ.Client.Exceptions.BrokerUnreachableException.html#RabbitMQ_Client_Exceptions_BrokerUnreachableException__ctor_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.BrokerUnreachableException.#ctor(System.Exception)
  name.vb: New(Exception)
  fullName: RabbitMQ.Client.Exceptions.BrokerUnreachableException.BrokerUnreachableException(System.Exception)
  fullName.vb: RabbitMQ.Client.Exceptions.BrokerUnreachableException.New(System.Exception)
  nameWithType: BrokerUnreachableException.BrokerUnreachableException(Exception)
  nameWithType.vb: BrokerUnreachableException.New(Exception)
- uid: RabbitMQ.Client.Exceptions.BrokerUnreachableException.#ctor*
  name: BrokerUnreachableException
  href: api/RabbitMQ.Client.Exceptions.BrokerUnreachableException.html#RabbitMQ_Client_Exceptions_BrokerUnreachableException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.BrokerUnreachableException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.BrokerUnreachableException.BrokerUnreachableException
  fullName.vb: RabbitMQ.Client.Exceptions.BrokerUnreachableException.New
  nameWithType: BrokerUnreachableException.BrokerUnreachableException
  nameWithType.vb: BrokerUnreachableException.New
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException
  name: ChannelAllocationException
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html
  commentId: T:RabbitMQ.Client.Exceptions.ChannelAllocationException
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException
  nameWithType: ChannelAllocationException
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor
  name: ChannelAllocationException()
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html#RabbitMQ_Client_Exceptions_ChannelAllocationException__ctor
  commentId: M:RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor
  name.vb: New()
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException.ChannelAllocationException()
  fullName.vb: RabbitMQ.Client.Exceptions.ChannelAllocationException.New()
  nameWithType: ChannelAllocationException.ChannelAllocationException()
  nameWithType.vb: ChannelAllocationException.New()
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor(System.Int32)
  name: ChannelAllocationException(int)
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html#RabbitMQ_Client_Exceptions_ChannelAllocationException__ctor_System_Int32_
  commentId: M:RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor(System.Int32)
  name.vb: New(Integer)
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException.ChannelAllocationException(int)
  fullName.vb: RabbitMQ.Client.Exceptions.ChannelAllocationException.New(Integer)
  nameWithType: ChannelAllocationException.ChannelAllocationException(int)
  nameWithType.vb: ChannelAllocationException.New(Integer)
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor*
  name: ChannelAllocationException
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html#RabbitMQ_Client_Exceptions_ChannelAllocationException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ChannelAllocationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException.ChannelAllocationException
  fullName.vb: RabbitMQ.Client.Exceptions.ChannelAllocationException.New
  nameWithType: ChannelAllocationException.ChannelAllocationException
  nameWithType.vb: ChannelAllocationException.New
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel
  name: Channel
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html#RabbitMQ_Client_Exceptions_ChannelAllocationException_Channel
  commentId: P:RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel
  nameWithType: ChannelAllocationException.Channel
- uid: RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel*
  name: Channel
  href: api/RabbitMQ.Client.Exceptions.ChannelAllocationException.html#RabbitMQ_Client_Exceptions_ChannelAllocationException_Channel_
  commentId: Overload:RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ChannelAllocationException.Channel
  nameWithType: ChannelAllocationException.Channel
- uid: RabbitMQ.Client.Exceptions.ConnectFailureException
  name: ConnectFailureException
  href: api/RabbitMQ.Client.Exceptions.ConnectFailureException.html
  commentId: T:RabbitMQ.Client.Exceptions.ConnectFailureException
  fullName: RabbitMQ.Client.Exceptions.ConnectFailureException
  nameWithType: ConnectFailureException
- uid: RabbitMQ.Client.Exceptions.ConnectFailureException.#ctor(System.String,System.Exception)
  name: ConnectFailureException(string, Exception)
  href: api/RabbitMQ.Client.Exceptions.ConnectFailureException.html#RabbitMQ_Client_Exceptions_ConnectFailureException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.ConnectFailureException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: RabbitMQ.Client.Exceptions.ConnectFailureException.ConnectFailureException(string, System.Exception)
  fullName.vb: RabbitMQ.Client.Exceptions.ConnectFailureException.New(String, System.Exception)
  nameWithType: ConnectFailureException.ConnectFailureException(string, Exception)
  nameWithType.vb: ConnectFailureException.New(String, Exception)
- uid: RabbitMQ.Client.Exceptions.ConnectFailureException.#ctor*
  name: ConnectFailureException
  href: api/RabbitMQ.Client.Exceptions.ConnectFailureException.html#RabbitMQ_Client_Exceptions_ConnectFailureException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ConnectFailureException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.ConnectFailureException.ConnectFailureException
  fullName.vb: RabbitMQ.Client.Exceptions.ConnectFailureException.New
  nameWithType: ConnectFailureException.ConnectFailureException
  nameWithType.vb: ConnectFailureException.New
- uid: RabbitMQ.Client.Exceptions.HardProtocolException
  name: HardProtocolException
  href: api/RabbitMQ.Client.Exceptions.HardProtocolException.html
  commentId: T:RabbitMQ.Client.Exceptions.HardProtocolException
  fullName: RabbitMQ.Client.Exceptions.HardProtocolException
  nameWithType: HardProtocolException
- uid: RabbitMQ.Client.Exceptions.HardProtocolException.#ctor(System.String)
  name: HardProtocolException(string)
  href: api/RabbitMQ.Client.Exceptions.HardProtocolException.html#RabbitMQ_Client_Exceptions_HardProtocolException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.HardProtocolException.#ctor(System.String)
  name.vb: New(String)
  fullName: RabbitMQ.Client.Exceptions.HardProtocolException.HardProtocolException(string)
  fullName.vb: RabbitMQ.Client.Exceptions.HardProtocolException.New(String)
  nameWithType: HardProtocolException.HardProtocolException(string)
  nameWithType.vb: HardProtocolException.New(String)
- uid: RabbitMQ.Client.Exceptions.HardProtocolException.#ctor(System.String,System.Boolean)
  name: HardProtocolException(string, bool)
  href: api/RabbitMQ.Client.Exceptions.HardProtocolException.html#RabbitMQ_Client_Exceptions_HardProtocolException__ctor_System_String_System_Boolean_
  commentId: M:RabbitMQ.Client.Exceptions.HardProtocolException.#ctor(System.String,System.Boolean)
  name.vb: New(String, Boolean)
  fullName: RabbitMQ.Client.Exceptions.HardProtocolException.HardProtocolException(string, bool)
  fullName.vb: RabbitMQ.Client.Exceptions.HardProtocolException.New(String, Boolean)
  nameWithType: HardProtocolException.HardProtocolException(string, bool)
  nameWithType.vb: HardProtocolException.New(String, Boolean)
- uid: RabbitMQ.Client.Exceptions.HardProtocolException.#ctor*
  name: HardProtocolException
  href: api/RabbitMQ.Client.Exceptions.HardProtocolException.html#RabbitMQ_Client_Exceptions_HardProtocolException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.HardProtocolException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.HardProtocolException.HardProtocolException
  fullName.vb: RabbitMQ.Client.Exceptions.HardProtocolException.New
  nameWithType: HardProtocolException.HardProtocolException
  nameWithType.vb: HardProtocolException.New
- uid: RabbitMQ.Client.Exceptions.HardProtocolException.CanShutdownCleanly
  name: CanShutdownCleanly
  href: api/RabbitMQ.Client.Exceptions.HardProtocolException.html#RabbitMQ_Client_Exceptions_HardProtocolException_CanShutdownCleanly
  commentId: P:RabbitMQ.Client.Exceptions.HardProtocolException.CanShutdownCleanly
  fullName: RabbitMQ.Client.Exceptions.HardProtocolException.CanShutdownCleanly
  nameWithType: HardProtocolException.CanShutdownCleanly
- uid: RabbitMQ.Client.Exceptions.HardProtocolException.CanShutdownCleanly*
  name: CanShutdownCleanly
  href: api/RabbitMQ.Client.Exceptions.HardProtocolException.html#RabbitMQ_Client_Exceptions_HardProtocolException_CanShutdownCleanly_
  commentId: Overload:RabbitMQ.Client.Exceptions.HardProtocolException.CanShutdownCleanly
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.HardProtocolException.CanShutdownCleanly
  nameWithType: HardProtocolException.CanShutdownCleanly
- uid: RabbitMQ.Client.Exceptions.HardProtocolException._canShutdownCleanly
  name: _canShutdownCleanly
  href: api/RabbitMQ.Client.Exceptions.HardProtocolException.html#RabbitMQ_Client_Exceptions_HardProtocolException__canShutdownCleanly
  commentId: F:RabbitMQ.Client.Exceptions.HardProtocolException._canShutdownCleanly
  fullName: RabbitMQ.Client.Exceptions.HardProtocolException._canShutdownCleanly
  nameWithType: HardProtocolException._canShutdownCleanly
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException
  name: MalformedFrameException
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html
  commentId: T:RabbitMQ.Client.Exceptions.MalformedFrameException
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException
  nameWithType: MalformedFrameException
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException.#ctor(System.String)
  name: MalformedFrameException(string)
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html#RabbitMQ_Client_Exceptions_MalformedFrameException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.MalformedFrameException.#ctor(System.String)
  name.vb: New(String)
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException.MalformedFrameException(string)
  fullName.vb: RabbitMQ.Client.Exceptions.MalformedFrameException.New(String)
  nameWithType: MalformedFrameException.MalformedFrameException(string)
  nameWithType.vb: MalformedFrameException.New(String)
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException.#ctor(System.String,System.Boolean)
  name: MalformedFrameException(string, bool)
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html#RabbitMQ_Client_Exceptions_MalformedFrameException__ctor_System_String_System_Boolean_
  commentId: M:RabbitMQ.Client.Exceptions.MalformedFrameException.#ctor(System.String,System.Boolean)
  name.vb: New(String, Boolean)
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException.MalformedFrameException(string, bool)
  fullName.vb: RabbitMQ.Client.Exceptions.MalformedFrameException.New(String, Boolean)
  nameWithType: MalformedFrameException.MalformedFrameException(string, bool)
  nameWithType.vb: MalformedFrameException.New(String, Boolean)
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException.#ctor*
  name: MalformedFrameException
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html#RabbitMQ_Client_Exceptions_MalformedFrameException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.MalformedFrameException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException.MalformedFrameException
  fullName.vb: RabbitMQ.Client.Exceptions.MalformedFrameException.New
  nameWithType: MalformedFrameException.MalformedFrameException
  nameWithType.vb: MalformedFrameException.New
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html#RabbitMQ_Client_Exceptions_MalformedFrameException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode
  nameWithType: MalformedFrameException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.MalformedFrameException.html#RabbitMQ_Client_Exceptions_MalformedFrameException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.MalformedFrameException.ReplyCode
  nameWithType: MalformedFrameException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException
  name: OperationInterruptedException
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html
  commentId: T:RabbitMQ.Client.Exceptions.OperationInterruptedException
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException
  nameWithType: OperationInterruptedException
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor
  name: OperationInterruptedException()
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException__ctor
  commentId: M:RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor
  name.vb: New()
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.OperationInterruptedException()
  fullName.vb: RabbitMQ.Client.Exceptions.OperationInterruptedException.New()
  nameWithType: OperationInterruptedException.OperationInterruptedException()
  nameWithType.vb: OperationInterruptedException.New()
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(RabbitMQ.Client.Events.ShutdownEventArgs)
  name: OperationInterruptedException(ShutdownEventArgs)
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException__ctor_RabbitMQ_Client_Events_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(RabbitMQ.Client.Events.ShutdownEventArgs)
  name.vb: New(ShutdownEventArgs)
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.OperationInterruptedException(RabbitMQ.Client.Events.ShutdownEventArgs)
  fullName.vb: RabbitMQ.Client.Exceptions.OperationInterruptedException.New(RabbitMQ.Client.Events.ShutdownEventArgs)
  nameWithType: OperationInterruptedException.OperationInterruptedException(ShutdownEventArgs)
  nameWithType.vb: OperationInterruptedException.New(ShutdownEventArgs)
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(RabbitMQ.Client.Events.ShutdownEventArgs,System.String)
  name: OperationInterruptedException(ShutdownEventArgs, string)
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException__ctor_RabbitMQ_Client_Events_ShutdownEventArgs_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor(RabbitMQ.Client.Events.ShutdownEventArgs,System.String)
  name.vb: New(ShutdownEventArgs, String)
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.OperationInterruptedException(RabbitMQ.Client.Events.ShutdownEventArgs, string)
  fullName.vb: RabbitMQ.Client.Exceptions.OperationInterruptedException.New(RabbitMQ.Client.Events.ShutdownEventArgs, String)
  nameWithType: OperationInterruptedException.OperationInterruptedException(ShutdownEventArgs, string)
  nameWithType.vb: OperationInterruptedException.New(ShutdownEventArgs, String)
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor*
  name: OperationInterruptedException
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.OperationInterruptedException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.OperationInterruptedException
  fullName.vb: RabbitMQ.Client.Exceptions.OperationInterruptedException.New
  nameWithType: OperationInterruptedException.OperationInterruptedException
  nameWithType.vb: OperationInterruptedException.New
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason
  name: ShutdownReason
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException_ShutdownReason
  commentId: P:RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason
  nameWithType: OperationInterruptedException.ShutdownReason
- uid: RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason*
  name: ShutdownReason
  href: api/RabbitMQ.Client.Exceptions.OperationInterruptedException.html#RabbitMQ_Client_Exceptions_OperationInterruptedException_ShutdownReason_
  commentId: Overload:RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.OperationInterruptedException.ShutdownReason
  nameWithType: OperationInterruptedException.ShutdownReason
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException
  name: PacketNotRecognizedException
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html
  commentId: T:RabbitMQ.Client.Exceptions.PacketNotRecognizedException
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException
  nameWithType: PacketNotRecognizedException
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name: PacketNotRecognizedException(int, int, int, int)
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name.vb: New(Integer, Integer, Integer, Integer)
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.PacketNotRecognizedException(int, int, int, int)
  fullName.vb: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.New(Integer, Integer, Integer, Integer)
  nameWithType: PacketNotRecognizedException.PacketNotRecognizedException(int, int, int, int)
  nameWithType.vb: PacketNotRecognizedException.New(Integer, Integer, Integer, Integer)
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.#ctor*
  name: PacketNotRecognizedException
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.PacketNotRecognizedException
  fullName.vb: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.New
  nameWithType: PacketNotRecognizedException.PacketNotRecognizedException
  nameWithType.vb: PacketNotRecognizedException.New
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor
  name: ServerMajor
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_ServerMajor
  commentId: P:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor
  nameWithType: PacketNotRecognizedException.ServerMajor
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor*
  name: ServerMajor
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_ServerMajor_
  commentId: Overload:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMajor
  nameWithType: PacketNotRecognizedException.ServerMajor
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor
  name: ServerMinor
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_ServerMinor
  commentId: P:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor
  nameWithType: PacketNotRecognizedException.ServerMinor
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor*
  name: ServerMinor
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_ServerMinor_
  commentId: Overload:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.ServerMinor
  nameWithType: PacketNotRecognizedException.ServerMinor
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh
  name: TransportHigh
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_TransportHigh
  commentId: P:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh
  nameWithType: PacketNotRecognizedException.TransportHigh
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh*
  name: TransportHigh
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_TransportHigh_
  commentId: Overload:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportHigh
  nameWithType: PacketNotRecognizedException.TransportHigh
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow
  name: TransportLow
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_TransportLow
  commentId: P:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow
  nameWithType: PacketNotRecognizedException.TransportLow
- uid: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow*
  name: TransportLow
  href: api/RabbitMQ.Client.Exceptions.PacketNotRecognizedException.html#RabbitMQ_Client_Exceptions_PacketNotRecognizedException_TransportLow_
  commentId: Overload:RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PacketNotRecognizedException.TransportLow
  nameWithType: PacketNotRecognizedException.TransportLow
- uid: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException
  name: PossibleAuthenticationFailureException
  href: api/RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.html
  commentId: T:RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException
  fullName: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException
  nameWithType: PossibleAuthenticationFailureException
- uid: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor(System.String)
  name: PossibleAuthenticationFailureException(string)
  href: api/RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.html#RabbitMQ_Client_Exceptions_PossibleAuthenticationFailureException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor(System.String)
  name.vb: New(String)
  fullName: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.PossibleAuthenticationFailureException(string)
  fullName.vb: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.New(String)
  nameWithType: PossibleAuthenticationFailureException.PossibleAuthenticationFailureException(string)
  nameWithType.vb: PossibleAuthenticationFailureException.New(String)
- uid: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor(System.String,System.Exception)
  name: PossibleAuthenticationFailureException(string, Exception)
  href: api/RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.html#RabbitMQ_Client_Exceptions_PossibleAuthenticationFailureException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.PossibleAuthenticationFailureException(string, System.Exception)
  fullName.vb: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.New(String, System.Exception)
  nameWithType: PossibleAuthenticationFailureException.PossibleAuthenticationFailureException(string, Exception)
  nameWithType.vb: PossibleAuthenticationFailureException.New(String, Exception)
- uid: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor*
  name: PossibleAuthenticationFailureException
  href: api/RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.html#RabbitMQ_Client_Exceptions_PossibleAuthenticationFailureException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.PossibleAuthenticationFailureException
  fullName.vb: RabbitMQ.Client.Exceptions.PossibleAuthenticationFailureException.New
  nameWithType: PossibleAuthenticationFailureException.PossibleAuthenticationFailureException
  nameWithType.vb: PossibleAuthenticationFailureException.New
- uid: RabbitMQ.Client.Exceptions.ProtocolException
  name: ProtocolException
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html
  commentId: T:RabbitMQ.Client.Exceptions.ProtocolException
  fullName: RabbitMQ.Client.Exceptions.ProtocolException
  nameWithType: ProtocolException
- uid: RabbitMQ.Client.Exceptions.ProtocolException.#ctor(System.String)
  name: ProtocolException(string)
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.ProtocolException.#ctor(System.String)
  name.vb: New(String)
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ProtocolException(string)
  fullName.vb: RabbitMQ.Client.Exceptions.ProtocolException.New(String)
  nameWithType: ProtocolException.ProtocolException(string)
  nameWithType.vb: ProtocolException.New(String)
- uid: RabbitMQ.Client.Exceptions.ProtocolException.#ctor*
  name: ProtocolException
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ProtocolException
  fullName.vb: RabbitMQ.Client.Exceptions.ProtocolException.New
  nameWithType: ProtocolException.ProtocolException
  nameWithType.vb: ProtocolException.New
- uid: RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode
  nameWithType: ProtocolException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ReplyCode
  nameWithType: ProtocolException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason
  name: ShutdownReason
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException_ShutdownReason
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason
  nameWithType: ProtocolException.ShutdownReason
- uid: RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason*
  name: ShutdownReason
  href: api/RabbitMQ.Client.Exceptions.ProtocolException.html#RabbitMQ_Client_Exceptions_ProtocolException_ShutdownReason_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolException.ShutdownReason
  nameWithType: ProtocolException.ShutdownReason
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException
  name: ProtocolVersionMismatchException
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html
  commentId: T:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException
  nameWithType: ProtocolVersionMismatchException
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name: ProtocolVersionMismatchException(int, int, int, int)
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name.vb: New(Integer, Integer, Integer, Integer)
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ProtocolVersionMismatchException(int, int, int, int)
  fullName.vb: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.New(Integer, Integer, Integer, Integer)
  nameWithType: ProtocolVersionMismatchException.ProtocolVersionMismatchException(int, int, int, int)
  nameWithType.vb: ProtocolVersionMismatchException.New(Integer, Integer, Integer, Integer)
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.#ctor*
  name: ProtocolVersionMismatchException
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ProtocolVersionMismatchException
  fullName.vb: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.New
  nameWithType: ProtocolVersionMismatchException.ProtocolVersionMismatchException
  nameWithType.vb: ProtocolVersionMismatchException.New
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor
  name: ClientMajor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ClientMajor
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor
  nameWithType: ProtocolVersionMismatchException.ClientMajor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor*
  name: ClientMajor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ClientMajor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMajor
  nameWithType: ProtocolVersionMismatchException.ClientMajor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor
  name: ClientMinor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ClientMinor
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor
  nameWithType: ProtocolVersionMismatchException.ClientMinor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor*
  name: ClientMinor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ClientMinor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ClientMinor
  nameWithType: ProtocolVersionMismatchException.ClientMinor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor
  name: ServerMajor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ServerMajor
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor
  nameWithType: ProtocolVersionMismatchException.ServerMajor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor*
  name: ServerMajor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ServerMajor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMajor
  nameWithType: ProtocolVersionMismatchException.ServerMajor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor
  name: ServerMinor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ServerMinor
  commentId: P:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor
  nameWithType: ProtocolVersionMismatchException.ServerMinor
- uid: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor*
  name: ServerMinor
  href: api/RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.html#RabbitMQ_Client_Exceptions_ProtocolVersionMismatchException_ServerMinor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.ProtocolVersionMismatchException.ServerMinor
  nameWithType: ProtocolVersionMismatchException.ServerMinor
- uid: RabbitMQ.Client.Exceptions.ProtocolViolationException
  name: ProtocolViolationException
  href: api/RabbitMQ.Client.Exceptions.ProtocolViolationException.html
  commentId: T:RabbitMQ.Client.Exceptions.ProtocolViolationException
  fullName: RabbitMQ.Client.Exceptions.ProtocolViolationException
  nameWithType: ProtocolViolationException
- uid: RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor
  name: ProtocolViolationException()
  href: api/RabbitMQ.Client.Exceptions.ProtocolViolationException.html#RabbitMQ_Client_Exceptions_ProtocolViolationException__ctor
  commentId: M:RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor
  name.vb: New()
  fullName: RabbitMQ.Client.Exceptions.ProtocolViolationException.ProtocolViolationException()
  fullName.vb: RabbitMQ.Client.Exceptions.ProtocolViolationException.New()
  nameWithType: ProtocolViolationException.ProtocolViolationException()
  nameWithType.vb: ProtocolViolationException.New()
- uid: RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor(System.String)
  name: ProtocolViolationException(string)
  href: api/RabbitMQ.Client.Exceptions.ProtocolViolationException.html#RabbitMQ_Client_Exceptions_ProtocolViolationException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor(System.String)
  name.vb: New(String)
  fullName: RabbitMQ.Client.Exceptions.ProtocolViolationException.ProtocolViolationException(string)
  fullName.vb: RabbitMQ.Client.Exceptions.ProtocolViolationException.New(String)
  nameWithType: ProtocolViolationException.ProtocolViolationException(string)
  nameWithType.vb: ProtocolViolationException.New(String)
- uid: RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor(System.String,System.Exception)
  name: ProtocolViolationException(string, Exception)
  href: api/RabbitMQ.Client.Exceptions.ProtocolViolationException.html#RabbitMQ_Client_Exceptions_ProtocolViolationException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: RabbitMQ.Client.Exceptions.ProtocolViolationException.ProtocolViolationException(string, System.Exception)
  fullName.vb: RabbitMQ.Client.Exceptions.ProtocolViolationException.New(String, System.Exception)
  nameWithType: ProtocolViolationException.ProtocolViolationException(string, Exception)
  nameWithType.vb: ProtocolViolationException.New(String, Exception)
- uid: RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor*
  name: ProtocolViolationException
  href: api/RabbitMQ.Client.Exceptions.ProtocolViolationException.html#RabbitMQ_Client_Exceptions_ProtocolViolationException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.ProtocolViolationException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.ProtocolViolationException.ProtocolViolationException
  fullName.vb: RabbitMQ.Client.Exceptions.ProtocolViolationException.New
  nameWithType: ProtocolViolationException.ProtocolViolationException
  nameWithType.vb: ProtocolViolationException.New
- uid: RabbitMQ.Client.Exceptions.PublishException
  name: PublishException
  href: api/RabbitMQ.Client.Exceptions.PublishException.html
  commentId: T:RabbitMQ.Client.Exceptions.PublishException
  fullName: RabbitMQ.Client.Exceptions.PublishException
  nameWithType: PublishException
- uid: RabbitMQ.Client.Exceptions.PublishException.#ctor(System.UInt64,System.Boolean)
  name: PublishException(ulong, bool)
  href: api/RabbitMQ.Client.Exceptions.PublishException.html#RabbitMQ_Client_Exceptions_PublishException__ctor_System_UInt64_System_Boolean_
  commentId: M:RabbitMQ.Client.Exceptions.PublishException.#ctor(System.UInt64,System.Boolean)
  name.vb: New(ULong, Boolean)
  fullName: RabbitMQ.Client.Exceptions.PublishException.PublishException(ulong, bool)
  fullName.vb: RabbitMQ.Client.Exceptions.PublishException.New(ULong, Boolean)
  nameWithType: PublishException.PublishException(ulong, bool)
  nameWithType.vb: PublishException.New(ULong, Boolean)
- uid: RabbitMQ.Client.Exceptions.PublishException.#ctor*
  name: PublishException
  href: api/RabbitMQ.Client.Exceptions.PublishException.html#RabbitMQ_Client_Exceptions_PublishException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.PublishException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.PublishException.PublishException
  fullName.vb: RabbitMQ.Client.Exceptions.PublishException.New
  nameWithType: PublishException.PublishException
  nameWithType.vb: PublishException.New
- uid: RabbitMQ.Client.Exceptions.PublishException.IsReturn
  name: IsReturn
  href: api/RabbitMQ.Client.Exceptions.PublishException.html#RabbitMQ_Client_Exceptions_PublishException_IsReturn
  commentId: P:RabbitMQ.Client.Exceptions.PublishException.IsReturn
  fullName: RabbitMQ.Client.Exceptions.PublishException.IsReturn
  nameWithType: PublishException.IsReturn
- uid: RabbitMQ.Client.Exceptions.PublishException.IsReturn*
  name: IsReturn
  href: api/RabbitMQ.Client.Exceptions.PublishException.html#RabbitMQ_Client_Exceptions_PublishException_IsReturn_
  commentId: Overload:RabbitMQ.Client.Exceptions.PublishException.IsReturn
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PublishException.IsReturn
  nameWithType: PublishException.IsReturn
- uid: RabbitMQ.Client.Exceptions.PublishException.PublishSequenceNumber
  name: PublishSequenceNumber
  href: api/RabbitMQ.Client.Exceptions.PublishException.html#RabbitMQ_Client_Exceptions_PublishException_PublishSequenceNumber
  commentId: P:RabbitMQ.Client.Exceptions.PublishException.PublishSequenceNumber
  fullName: RabbitMQ.Client.Exceptions.PublishException.PublishSequenceNumber
  nameWithType: PublishException.PublishSequenceNumber
- uid: RabbitMQ.Client.Exceptions.PublishException.PublishSequenceNumber*
  name: PublishSequenceNumber
  href: api/RabbitMQ.Client.Exceptions.PublishException.html#RabbitMQ_Client_Exceptions_PublishException_PublishSequenceNumber_
  commentId: Overload:RabbitMQ.Client.Exceptions.PublishException.PublishSequenceNumber
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.PublishException.PublishSequenceNumber
  nameWithType: PublishException.PublishSequenceNumber
- uid: RabbitMQ.Client.Exceptions.RabbitMQClientException
  name: RabbitMQClientException
  href: api/RabbitMQ.Client.Exceptions.RabbitMQClientException.html
  commentId: T:RabbitMQ.Client.Exceptions.RabbitMQClientException
  fullName: RabbitMQ.Client.Exceptions.RabbitMQClientException
  nameWithType: RabbitMQClientException
- uid: RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor
  name: RabbitMQClientException()
  href: api/RabbitMQ.Client.Exceptions.RabbitMQClientException.html#RabbitMQ_Client_Exceptions_RabbitMQClientException__ctor
  commentId: M:RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor
  name.vb: New()
  fullName: RabbitMQ.Client.Exceptions.RabbitMQClientException.RabbitMQClientException()
  fullName.vb: RabbitMQ.Client.Exceptions.RabbitMQClientException.New()
  nameWithType: RabbitMQClientException.RabbitMQClientException()
  nameWithType.vb: RabbitMQClientException.New()
- uid: RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor(System.String)
  name: RabbitMQClientException(string)
  href: api/RabbitMQ.Client.Exceptions.RabbitMQClientException.html#RabbitMQ_Client_Exceptions_RabbitMQClientException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor(System.String)
  name.vb: New(String)
  fullName: RabbitMQ.Client.Exceptions.RabbitMQClientException.RabbitMQClientException(string)
  fullName.vb: RabbitMQ.Client.Exceptions.RabbitMQClientException.New(String)
  nameWithType: RabbitMQClientException.RabbitMQClientException(string)
  nameWithType.vb: RabbitMQClientException.New(String)
- uid: RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor(System.String,System.Exception)
  name: RabbitMQClientException(string, Exception?)
  href: api/RabbitMQ.Client.Exceptions.RabbitMQClientException.html#RabbitMQ_Client_Exceptions_RabbitMQClientException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: RabbitMQ.Client.Exceptions.RabbitMQClientException.RabbitMQClientException(string, System.Exception?)
  fullName.vb: RabbitMQ.Client.Exceptions.RabbitMQClientException.New(String, System.Exception)
  nameWithType: RabbitMQClientException.RabbitMQClientException(string, Exception?)
  nameWithType.vb: RabbitMQClientException.New(String, Exception)
- uid: RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor*
  name: RabbitMQClientException
  href: api/RabbitMQ.Client.Exceptions.RabbitMQClientException.html#RabbitMQ_Client_Exceptions_RabbitMQClientException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.RabbitMQClientException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.RabbitMQClientException.RabbitMQClientException
  fullName.vb: RabbitMQ.Client.Exceptions.RabbitMQClientException.New
  nameWithType: RabbitMQClientException.RabbitMQClientException
  nameWithType.vb: RabbitMQClientException.New
- uid: RabbitMQ.Client.Exceptions.SyntaxErrorException
  name: SyntaxErrorException
  href: api/RabbitMQ.Client.Exceptions.SyntaxErrorException.html
  commentId: T:RabbitMQ.Client.Exceptions.SyntaxErrorException
  fullName: RabbitMQ.Client.Exceptions.SyntaxErrorException
  nameWithType: SyntaxErrorException
- uid: RabbitMQ.Client.Exceptions.SyntaxErrorException.#ctor(System.String)
  name: SyntaxErrorException(string)
  href: api/RabbitMQ.Client.Exceptions.SyntaxErrorException.html#RabbitMQ_Client_Exceptions_SyntaxErrorException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.SyntaxErrorException.#ctor(System.String)
  name.vb: New(String)
  fullName: RabbitMQ.Client.Exceptions.SyntaxErrorException.SyntaxErrorException(string)
  fullName.vb: RabbitMQ.Client.Exceptions.SyntaxErrorException.New(String)
  nameWithType: SyntaxErrorException.SyntaxErrorException(string)
  nameWithType.vb: SyntaxErrorException.New(String)
- uid: RabbitMQ.Client.Exceptions.SyntaxErrorException.#ctor*
  name: SyntaxErrorException
  href: api/RabbitMQ.Client.Exceptions.SyntaxErrorException.html#RabbitMQ_Client_Exceptions_SyntaxErrorException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.SyntaxErrorException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.SyntaxErrorException.SyntaxErrorException
  fullName.vb: RabbitMQ.Client.Exceptions.SyntaxErrorException.New
  nameWithType: SyntaxErrorException.SyntaxErrorException
  nameWithType.vb: SyntaxErrorException.New
- uid: RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.SyntaxErrorException.html#RabbitMQ_Client_Exceptions_SyntaxErrorException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode
  nameWithType: SyntaxErrorException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.SyntaxErrorException.html#RabbitMQ_Client_Exceptions_SyntaxErrorException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.SyntaxErrorException.ReplyCode
  nameWithType: SyntaxErrorException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.TopologyRecoveryException
  name: TopologyRecoveryException
  href: api/RabbitMQ.Client.Exceptions.TopologyRecoveryException.html
  commentId: T:RabbitMQ.Client.Exceptions.TopologyRecoveryException
  fullName: RabbitMQ.Client.Exceptions.TopologyRecoveryException
  nameWithType: TopologyRecoveryException
- uid: RabbitMQ.Client.Exceptions.TopologyRecoveryException.#ctor(System.String,System.Exception)
  name: TopologyRecoveryException(string, Exception)
  href: api/RabbitMQ.Client.Exceptions.TopologyRecoveryException.html#RabbitMQ_Client_Exceptions_TopologyRecoveryException__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.Exceptions.TopologyRecoveryException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: RabbitMQ.Client.Exceptions.TopologyRecoveryException.TopologyRecoveryException(string, System.Exception)
  fullName.vb: RabbitMQ.Client.Exceptions.TopologyRecoveryException.New(String, System.Exception)
  nameWithType: TopologyRecoveryException.TopologyRecoveryException(string, Exception)
  nameWithType.vb: TopologyRecoveryException.New(String, Exception)
- uid: RabbitMQ.Client.Exceptions.TopologyRecoveryException.#ctor*
  name: TopologyRecoveryException
  href: api/RabbitMQ.Client.Exceptions.TopologyRecoveryException.html#RabbitMQ_Client_Exceptions_TopologyRecoveryException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.TopologyRecoveryException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.TopologyRecoveryException.TopologyRecoveryException
  fullName.vb: RabbitMQ.Client.Exceptions.TopologyRecoveryException.New
  nameWithType: TopologyRecoveryException.TopologyRecoveryException
  nameWithType.vb: TopologyRecoveryException.New
- uid: RabbitMQ.Client.Exceptions.UnexpectedFrameException
  name: UnexpectedFrameException
  href: api/RabbitMQ.Client.Exceptions.UnexpectedFrameException.html
  commentId: T:RabbitMQ.Client.Exceptions.UnexpectedFrameException
  fullName: RabbitMQ.Client.Exceptions.UnexpectedFrameException
  nameWithType: UnexpectedFrameException
- uid: RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.UnexpectedFrameException.html#RabbitMQ_Client_Exceptions_UnexpectedFrameException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode
  nameWithType: UnexpectedFrameException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.UnexpectedFrameException.html#RabbitMQ_Client_Exceptions_UnexpectedFrameException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnexpectedFrameException.ReplyCode
  nameWithType: UnexpectedFrameException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException
  name: UnexpectedMethodException
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html
  commentId: T:RabbitMQ.Client.Exceptions.UnexpectedMethodException
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException
  nameWithType: UnexpectedMethodException
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolClassId
  name: ExpectedProtocolClassId
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ExpectedProtocolClassId
  commentId: P:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolClassId
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolClassId
  nameWithType: UnexpectedMethodException.ExpectedProtocolClassId
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolClassId*
  name: ExpectedProtocolClassId
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ExpectedProtocolClassId_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolClassId
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolClassId
  nameWithType: UnexpectedMethodException.ExpectedProtocolClassId
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodId
  name: ExpectedProtocolMethodId
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ExpectedProtocolMethodId
  commentId: P:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodId
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodId
  nameWithType: UnexpectedMethodException.ExpectedProtocolMethodId
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodId*
  name: ExpectedProtocolMethodId
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ExpectedProtocolMethodId_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodId
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodId
  nameWithType: UnexpectedMethodException.ExpectedProtocolMethodId
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodName
  name: ExpectedProtocolMethodName
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ExpectedProtocolMethodName
  commentId: P:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodName
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodName
  nameWithType: UnexpectedMethodException.ExpectedProtocolMethodName
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodName*
  name: ExpectedProtocolMethodName
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ExpectedProtocolMethodName_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodName
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ExpectedProtocolMethodName
  nameWithType: UnexpectedMethodException.ExpectedProtocolMethodName
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolClassId
  name: ProtocolClassId
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ProtocolClassId
  commentId: P:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolClassId
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolClassId
  nameWithType: UnexpectedMethodException.ProtocolClassId
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolClassId*
  name: ProtocolClassId
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ProtocolClassId_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolClassId
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolClassId
  nameWithType: UnexpectedMethodException.ProtocolClassId
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodId
  name: ProtocolMethodId
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ProtocolMethodId
  commentId: P:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodId
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodId
  nameWithType: UnexpectedMethodException.ProtocolMethodId
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodId*
  name: ProtocolMethodId
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ProtocolMethodId_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodId
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodId
  nameWithType: UnexpectedMethodException.ProtocolMethodId
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodName
  name: ProtocolMethodName
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ProtocolMethodName
  commentId: P:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodName
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodName
  nameWithType: UnexpectedMethodException.ProtocolMethodName
- uid: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodName*
  name: ProtocolMethodName
  href: api/RabbitMQ.Client.Exceptions.UnexpectedMethodException.html#RabbitMQ_Client_Exceptions_UnexpectedMethodException_ProtocolMethodName_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodName
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnexpectedMethodException.ProtocolMethodName
  nameWithType: UnexpectedMethodException.ProtocolMethodName
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException
  name: UnknownClassOrMethodException
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html
  commentId: T:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException
  nameWithType: UnknownClassOrMethodException
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.#ctor(System.UInt16,System.UInt16)
  name: UnknownClassOrMethodException(ushort, ushort)
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException__ctor_System_UInt16_System_UInt16_
  commentId: M:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.#ctor(System.UInt16,System.UInt16)
  name.vb: New(UShort, UShort)
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.UnknownClassOrMethodException(ushort, ushort)
  fullName.vb: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.New(UShort, UShort)
  nameWithType: UnknownClassOrMethodException.UnknownClassOrMethodException(ushort, ushort)
  nameWithType.vb: UnknownClassOrMethodException.New(UShort, UShort)
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.#ctor*
  name: UnknownClassOrMethodException
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.UnknownClassOrMethodException
  fullName.vb: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.New
  nameWithType: UnknownClassOrMethodException.UnknownClassOrMethodException
  nameWithType.vb: UnknownClassOrMethodException.New
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId
  name: ClassId
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ClassId
  commentId: P:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId
  nameWithType: UnknownClassOrMethodException.ClassId
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId*
  name: ClassId
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ClassId_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ClassId
  nameWithType: UnknownClassOrMethodException.ClassId
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId
  name: MethodId
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_MethodId
  commentId: P:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId
  nameWithType: UnknownClassOrMethodException.MethodId
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId*
  name: MethodId
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_MethodId_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.MethodId
  nameWithType: UnknownClassOrMethodException.MethodId
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ReplyCode
  commentId: P:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode
  nameWithType: UnknownClassOrMethodException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode*
  name: ReplyCode
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ReplyCode_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ReplyCode
  nameWithType: UnknownClassOrMethodException.ReplyCode
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString
  name: ToString()
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ToString
  commentId: M:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString()
  nameWithType: UnknownClassOrMethodException.ToString()
- uid: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString*
  name: ToString
  href: api/RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.html#RabbitMQ_Client_Exceptions_UnknownClassOrMethodException_ToString_
  commentId: Overload:RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.UnknownClassOrMethodException.ToString
  nameWithType: UnknownClassOrMethodException.ToString
- uid: RabbitMQ.Client.Exceptions.WireFormattingException
  name: WireFormattingException
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html
  commentId: T:RabbitMQ.Client.Exceptions.WireFormattingException
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException
  nameWithType: WireFormattingException
- uid: RabbitMQ.Client.Exceptions.WireFormattingException.#ctor(System.String)
  name: WireFormattingException(string)
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html#RabbitMQ_Client_Exceptions_WireFormattingException__ctor_System_String_
  commentId: M:RabbitMQ.Client.Exceptions.WireFormattingException.#ctor(System.String)
  name.vb: New(String)
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException.WireFormattingException(string)
  fullName.vb: RabbitMQ.Client.Exceptions.WireFormattingException.New(String)
  nameWithType: WireFormattingException.WireFormattingException(string)
  nameWithType.vb: WireFormattingException.New(String)
- uid: RabbitMQ.Client.Exceptions.WireFormattingException.#ctor(System.String,System.Object)
  name: WireFormattingException(string, object?)
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html#RabbitMQ_Client_Exceptions_WireFormattingException__ctor_System_String_System_Object_
  commentId: M:RabbitMQ.Client.Exceptions.WireFormattingException.#ctor(System.String,System.Object)
  name.vb: New(String, Object)
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException.WireFormattingException(string, object?)
  fullName.vb: RabbitMQ.Client.Exceptions.WireFormattingException.New(String, Object)
  nameWithType: WireFormattingException.WireFormattingException(string, object?)
  nameWithType.vb: WireFormattingException.New(String, Object)
- uid: RabbitMQ.Client.Exceptions.WireFormattingException.#ctor*
  name: WireFormattingException
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html#RabbitMQ_Client_Exceptions_WireFormattingException__ctor_
  commentId: Overload:RabbitMQ.Client.Exceptions.WireFormattingException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException.WireFormattingException
  fullName.vb: RabbitMQ.Client.Exceptions.WireFormattingException.New
  nameWithType: WireFormattingException.WireFormattingException
  nameWithType.vb: WireFormattingException.New
- uid: RabbitMQ.Client.Exceptions.WireFormattingException.Offender
  name: Offender
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html#RabbitMQ_Client_Exceptions_WireFormattingException_Offender
  commentId: P:RabbitMQ.Client.Exceptions.WireFormattingException.Offender
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException.Offender
  nameWithType: WireFormattingException.Offender
- uid: RabbitMQ.Client.Exceptions.WireFormattingException.Offender*
  name: Offender
  href: api/RabbitMQ.Client.Exceptions.WireFormattingException.html#RabbitMQ_Client_Exceptions_WireFormattingException_Offender_
  commentId: Overload:RabbitMQ.Client.Exceptions.WireFormattingException.Offender
  isSpec: "True"
  fullName: RabbitMQ.Client.Exceptions.WireFormattingException.Offender
  nameWithType: WireFormattingException.Offender
- uid: RabbitMQ.Client.ExchangeType
  name: ExchangeType
  href: api/RabbitMQ.Client.ExchangeType.html
  commentId: T:RabbitMQ.Client.ExchangeType
  fullName: RabbitMQ.Client.ExchangeType
  nameWithType: ExchangeType
- uid: RabbitMQ.Client.ExchangeType.All
  name: All()
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_All
  commentId: M:RabbitMQ.Client.ExchangeType.All
  fullName: RabbitMQ.Client.ExchangeType.All()
  nameWithType: ExchangeType.All()
- uid: RabbitMQ.Client.ExchangeType.All*
  name: All
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_All_
  commentId: Overload:RabbitMQ.Client.ExchangeType.All
  isSpec: "True"
  fullName: RabbitMQ.Client.ExchangeType.All
  nameWithType: ExchangeType.All
- uid: RabbitMQ.Client.ExchangeType.Direct
  name: Direct
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_Direct
  commentId: F:RabbitMQ.Client.ExchangeType.Direct
  fullName: RabbitMQ.Client.ExchangeType.Direct
  nameWithType: ExchangeType.Direct
- uid: RabbitMQ.Client.ExchangeType.Fanout
  name: Fanout
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_Fanout
  commentId: F:RabbitMQ.Client.ExchangeType.Fanout
  fullName: RabbitMQ.Client.ExchangeType.Fanout
  nameWithType: ExchangeType.Fanout
- uid: RabbitMQ.Client.ExchangeType.Headers
  name: Headers
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_Headers
  commentId: F:RabbitMQ.Client.ExchangeType.Headers
  fullName: RabbitMQ.Client.ExchangeType.Headers
  nameWithType: ExchangeType.Headers
- uid: RabbitMQ.Client.ExchangeType.Topic
  name: Topic
  href: api/RabbitMQ.Client.ExchangeType.html#RabbitMQ_Client_ExchangeType_Topic
  commentId: F:RabbitMQ.Client.ExchangeType.Topic
  fullName: RabbitMQ.Client.ExchangeType.Topic
  nameWithType: ExchangeType.Topic
- uid: RabbitMQ.Client.ExternalMechanism
  name: ExternalMechanism
  href: api/RabbitMQ.Client.ExternalMechanism.html
  commentId: T:RabbitMQ.Client.ExternalMechanism
  fullName: RabbitMQ.Client.ExternalMechanism
  nameWithType: ExternalMechanism
- uid: RabbitMQ.Client.ExternalMechanism.HandleChallengeAsync(System.Byte[],RabbitMQ.Client.ConnectionConfig,System.Threading.CancellationToken)
  name: HandleChallengeAsync(byte[]?, ConnectionConfig, CancellationToken)
  href: api/RabbitMQ.Client.ExternalMechanism.html#RabbitMQ_Client_ExternalMechanism_HandleChallengeAsync_System_Byte___RabbitMQ_Client_ConnectionConfig_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ExternalMechanism.HandleChallengeAsync(System.Byte[],RabbitMQ.Client.ConnectionConfig,System.Threading.CancellationToken)
  name.vb: HandleChallengeAsync(Byte(), ConnectionConfig, CancellationToken)
  fullName: RabbitMQ.Client.ExternalMechanism.HandleChallengeAsync(byte[]?, RabbitMQ.Client.ConnectionConfig, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.ExternalMechanism.HandleChallengeAsync(Byte(), RabbitMQ.Client.ConnectionConfig, System.Threading.CancellationToken)
  nameWithType: ExternalMechanism.HandleChallengeAsync(byte[]?, ConnectionConfig, CancellationToken)
  nameWithType.vb: ExternalMechanism.HandleChallengeAsync(Byte(), ConnectionConfig, CancellationToken)
- uid: RabbitMQ.Client.ExternalMechanism.HandleChallengeAsync*
  name: HandleChallengeAsync
  href: api/RabbitMQ.Client.ExternalMechanism.html#RabbitMQ_Client_ExternalMechanism_HandleChallengeAsync_
  commentId: Overload:RabbitMQ.Client.ExternalMechanism.HandleChallengeAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.ExternalMechanism.HandleChallengeAsync
  nameWithType: ExternalMechanism.HandleChallengeAsync
- uid: RabbitMQ.Client.ExternalMechanismFactory
  name: ExternalMechanismFactory
  href: api/RabbitMQ.Client.ExternalMechanismFactory.html
  commentId: T:RabbitMQ.Client.ExternalMechanismFactory
  fullName: RabbitMQ.Client.ExternalMechanismFactory
  nameWithType: ExternalMechanismFactory
- uid: RabbitMQ.Client.ExternalMechanismFactory.GetInstance
  name: GetInstance()
  href: api/RabbitMQ.Client.ExternalMechanismFactory.html#RabbitMQ_Client_ExternalMechanismFactory_GetInstance
  commentId: M:RabbitMQ.Client.ExternalMechanismFactory.GetInstance
  fullName: RabbitMQ.Client.ExternalMechanismFactory.GetInstance()
  nameWithType: ExternalMechanismFactory.GetInstance()
- uid: RabbitMQ.Client.ExternalMechanismFactory.GetInstance*
  name: GetInstance
  href: api/RabbitMQ.Client.ExternalMechanismFactory.html#RabbitMQ_Client_ExternalMechanismFactory_GetInstance_
  commentId: Overload:RabbitMQ.Client.ExternalMechanismFactory.GetInstance
  isSpec: "True"
  fullName: RabbitMQ.Client.ExternalMechanismFactory.GetInstance
  nameWithType: ExternalMechanismFactory.GetInstance
- uid: RabbitMQ.Client.ExternalMechanismFactory.Name
  name: Name
  href: api/RabbitMQ.Client.ExternalMechanismFactory.html#RabbitMQ_Client_ExternalMechanismFactory_Name
  commentId: P:RabbitMQ.Client.ExternalMechanismFactory.Name
  fullName: RabbitMQ.Client.ExternalMechanismFactory.Name
  nameWithType: ExternalMechanismFactory.Name
- uid: RabbitMQ.Client.ExternalMechanismFactory.Name*
  name: Name
  href: api/RabbitMQ.Client.ExternalMechanismFactory.html#RabbitMQ_Client_ExternalMechanismFactory_Name_
  commentId: Overload:RabbitMQ.Client.ExternalMechanismFactory.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.ExternalMechanismFactory.Name
  nameWithType: ExternalMechanismFactory.Name
- uid: RabbitMQ.Client.Headers
  name: Headers
  href: api/RabbitMQ.Client.Headers.html
  commentId: T:RabbitMQ.Client.Headers
  fullName: RabbitMQ.Client.Headers
  nameWithType: Headers
- uid: RabbitMQ.Client.Headers.AlternateExchange
  name: AlternateExchange
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_AlternateExchange
  commentId: F:RabbitMQ.Client.Headers.AlternateExchange
  fullName: RabbitMQ.Client.Headers.AlternateExchange
  nameWithType: Headers.AlternateExchange
- uid: RabbitMQ.Client.Headers.XDeadLetterExchange
  name: XDeadLetterExchange
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XDeadLetterExchange
  commentId: F:RabbitMQ.Client.Headers.XDeadLetterExchange
  fullName: RabbitMQ.Client.Headers.XDeadLetterExchange
  nameWithType: Headers.XDeadLetterExchange
- uid: RabbitMQ.Client.Headers.XDeadLetterRoutingKey
  name: XDeadLetterRoutingKey
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XDeadLetterRoutingKey
  commentId: F:RabbitMQ.Client.Headers.XDeadLetterRoutingKey
  fullName: RabbitMQ.Client.Headers.XDeadLetterRoutingKey
  nameWithType: Headers.XDeadLetterRoutingKey
- uid: RabbitMQ.Client.Headers.XExpires
  name: XExpires
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XExpires
  commentId: F:RabbitMQ.Client.Headers.XExpires
  fullName: RabbitMQ.Client.Headers.XExpires
  nameWithType: Headers.XExpires
- uid: RabbitMQ.Client.Headers.XMaxAge
  name: XMaxAge
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XMaxAge
  commentId: F:RabbitMQ.Client.Headers.XMaxAge
  fullName: RabbitMQ.Client.Headers.XMaxAge
  nameWithType: Headers.XMaxAge
- uid: RabbitMQ.Client.Headers.XMaxLength
  name: XMaxLength
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XMaxLength
  commentId: F:RabbitMQ.Client.Headers.XMaxLength
  fullName: RabbitMQ.Client.Headers.XMaxLength
  nameWithType: Headers.XMaxLength
- uid: RabbitMQ.Client.Headers.XMaxLengthInBytes
  name: XMaxLengthInBytes
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XMaxLengthInBytes
  commentId: F:RabbitMQ.Client.Headers.XMaxLengthInBytes
  fullName: RabbitMQ.Client.Headers.XMaxLengthInBytes
  nameWithType: Headers.XMaxLengthInBytes
- uid: RabbitMQ.Client.Headers.XMaxPriority
  name: XMaxPriority
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XMaxPriority
  commentId: F:RabbitMQ.Client.Headers.XMaxPriority
  fullName: RabbitMQ.Client.Headers.XMaxPriority
  nameWithType: Headers.XMaxPriority
- uid: RabbitMQ.Client.Headers.XMessageTTL
  name: XMessageTTL
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XMessageTTL
  commentId: F:RabbitMQ.Client.Headers.XMessageTTL
  fullName: RabbitMQ.Client.Headers.XMessageTTL
  nameWithType: Headers.XMessageTTL
- uid: RabbitMQ.Client.Headers.XOverflow
  name: XOverflow
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XOverflow
  commentId: F:RabbitMQ.Client.Headers.XOverflow
  fullName: RabbitMQ.Client.Headers.XOverflow
  nameWithType: Headers.XOverflow
- uid: RabbitMQ.Client.Headers.XPriority
  name: XPriority
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XPriority
  commentId: F:RabbitMQ.Client.Headers.XPriority
  fullName: RabbitMQ.Client.Headers.XPriority
  nameWithType: Headers.XPriority
- uid: RabbitMQ.Client.Headers.XQueueMode
  name: XQueueMode
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XQueueMode
  commentId: F:RabbitMQ.Client.Headers.XQueueMode
  fullName: RabbitMQ.Client.Headers.XQueueMode
  nameWithType: Headers.XQueueMode
- uid: RabbitMQ.Client.Headers.XQueueType
  name: XQueueType
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XQueueType
  commentId: F:RabbitMQ.Client.Headers.XQueueType
  fullName: RabbitMQ.Client.Headers.XQueueType
  nameWithType: Headers.XQueueType
- uid: RabbitMQ.Client.Headers.XQuorumInitialGroupSize
  name: XQuorumInitialGroupSize
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XQuorumInitialGroupSize
  commentId: F:RabbitMQ.Client.Headers.XQuorumInitialGroupSize
  fullName: RabbitMQ.Client.Headers.XQuorumInitialGroupSize
  nameWithType: Headers.XQuorumInitialGroupSize
- uid: RabbitMQ.Client.Headers.XSingleActiveConsumer
  name: XSingleActiveConsumer
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XSingleActiveConsumer
  commentId: F:RabbitMQ.Client.Headers.XSingleActiveConsumer
  fullName: RabbitMQ.Client.Headers.XSingleActiveConsumer
  nameWithType: Headers.XSingleActiveConsumer
- uid: RabbitMQ.Client.Headers.XStreamMaxSegmentSizeInBytes
  name: XStreamMaxSegmentSizeInBytes
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XStreamMaxSegmentSizeInBytes
  commentId: F:RabbitMQ.Client.Headers.XStreamMaxSegmentSizeInBytes
  fullName: RabbitMQ.Client.Headers.XStreamMaxSegmentSizeInBytes
  nameWithType: Headers.XStreamMaxSegmentSizeInBytes
- uid: RabbitMQ.Client.Headers.XStreamOffset
  name: XStreamOffset
  href: api/RabbitMQ.Client.Headers.html#RabbitMQ_Client_Headers_XStreamOffset
  commentId: F:RabbitMQ.Client.Headers.XStreamOffset
  fullName: RabbitMQ.Client.Headers.XStreamOffset
  nameWithType: Headers.XStreamOffset
- uid: RabbitMQ.Client.IAmqpHeader
  name: IAmqpHeader
  href: api/RabbitMQ.Client.IAmqpHeader.html
  commentId: T:RabbitMQ.Client.IAmqpHeader
  fullName: RabbitMQ.Client.IAmqpHeader
  nameWithType: IAmqpHeader
- uid: RabbitMQ.Client.IAmqpHeader.ProtocolClassId
  name: ProtocolClassId
  href: api/RabbitMQ.Client.IAmqpHeader.html#RabbitMQ_Client_IAmqpHeader_ProtocolClassId
  commentId: P:RabbitMQ.Client.IAmqpHeader.ProtocolClassId
  fullName: RabbitMQ.Client.IAmqpHeader.ProtocolClassId
  nameWithType: IAmqpHeader.ProtocolClassId
- uid: RabbitMQ.Client.IAmqpHeader.ProtocolClassId*
  name: ProtocolClassId
  href: api/RabbitMQ.Client.IAmqpHeader.html#RabbitMQ_Client_IAmqpHeader_ProtocolClassId_
  commentId: Overload:RabbitMQ.Client.IAmqpHeader.ProtocolClassId
  isSpec: "True"
  fullName: RabbitMQ.Client.IAmqpHeader.ProtocolClassId
  nameWithType: IAmqpHeader.ProtocolClassId
- uid: RabbitMQ.Client.IAmqpWriteable
  name: IAmqpWriteable
  href: api/RabbitMQ.Client.IAmqpWriteable.html
  commentId: T:RabbitMQ.Client.IAmqpWriteable
  fullName: RabbitMQ.Client.IAmqpWriteable
  nameWithType: IAmqpWriteable
- uid: RabbitMQ.Client.IAmqpWriteable.GetRequiredBufferSize
  name: GetRequiredBufferSize()
  href: api/RabbitMQ.Client.IAmqpWriteable.html#RabbitMQ_Client_IAmqpWriteable_GetRequiredBufferSize
  commentId: M:RabbitMQ.Client.IAmqpWriteable.GetRequiredBufferSize
  fullName: RabbitMQ.Client.IAmqpWriteable.GetRequiredBufferSize()
  nameWithType: IAmqpWriteable.GetRequiredBufferSize()
- uid: RabbitMQ.Client.IAmqpWriteable.GetRequiredBufferSize*
  name: GetRequiredBufferSize
  href: api/RabbitMQ.Client.IAmqpWriteable.html#RabbitMQ_Client_IAmqpWriteable_GetRequiredBufferSize_
  commentId: Overload:RabbitMQ.Client.IAmqpWriteable.GetRequiredBufferSize
  isSpec: "True"
  fullName: RabbitMQ.Client.IAmqpWriteable.GetRequiredBufferSize
  nameWithType: IAmqpWriteable.GetRequiredBufferSize
- uid: RabbitMQ.Client.IAmqpWriteable.WriteTo(System.Span{System.Byte})
  name: WriteTo(Span<byte>)
  href: api/RabbitMQ.Client.IAmqpWriteable.html#RabbitMQ_Client_IAmqpWriteable_WriteTo_System_Span_System_Byte__
  commentId: M:RabbitMQ.Client.IAmqpWriteable.WriteTo(System.Span{System.Byte})
  name.vb: WriteTo(Span(Of Byte))
  fullName: RabbitMQ.Client.IAmqpWriteable.WriteTo(System.Span<byte>)
  fullName.vb: RabbitMQ.Client.IAmqpWriteable.WriteTo(System.Span(Of Byte))
  nameWithType: IAmqpWriteable.WriteTo(Span<byte>)
  nameWithType.vb: IAmqpWriteable.WriteTo(Span(Of Byte))
- uid: RabbitMQ.Client.IAmqpWriteable.WriteTo*
  name: WriteTo
  href: api/RabbitMQ.Client.IAmqpWriteable.html#RabbitMQ_Client_IAmqpWriteable_WriteTo_
  commentId: Overload:RabbitMQ.Client.IAmqpWriteable.WriteTo
  isSpec: "True"
  fullName: RabbitMQ.Client.IAmqpWriteable.WriteTo
  nameWithType: IAmqpWriteable.WriteTo
- uid: RabbitMQ.Client.IAsyncBasicConsumer
  name: IAsyncBasicConsumer
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html
  commentId: T:RabbitMQ.Client.IAsyncBasicConsumer
  fullName: RabbitMQ.Client.IAsyncBasicConsumer
  nameWithType: IAsyncBasicConsumer
- uid: RabbitMQ.Client.IAsyncBasicConsumer.Channel
  name: Channel
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_Channel
  commentId: P:RabbitMQ.Client.IAsyncBasicConsumer.Channel
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.Channel
  nameWithType: IAsyncBasicConsumer.Channel
- uid: RabbitMQ.Client.IAsyncBasicConsumer.Channel*
  name: Channel
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_Channel_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.Channel
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.Channel
  nameWithType: IAsyncBasicConsumer.Channel
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelAsync(System.String,System.Threading.CancellationToken)
  name: HandleBasicCancelAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicCancelAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelAsync(System.String,System.Threading.CancellationToken)
  name.vb: HandleBasicCancelAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelAsync(String, System.Threading.CancellationToken)
  nameWithType: IAsyncBasicConsumer.HandleBasicCancelAsync(string, CancellationToken)
  nameWithType.vb: IAsyncBasicConsumer.HandleBasicCancelAsync(String, CancellationToken)
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelAsync*
  name: HandleBasicCancelAsync
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicCancelAsync_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelAsync
  nameWithType: IAsyncBasicConsumer.HandleBasicCancelAsync
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOkAsync(System.String,System.Threading.CancellationToken)
  name: HandleBasicCancelOkAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicCancelOkAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOkAsync(System.String,System.Threading.CancellationToken)
  name.vb: HandleBasicCancelOkAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOkAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOkAsync(String, System.Threading.CancellationToken)
  nameWithType: IAsyncBasicConsumer.HandleBasicCancelOkAsync(string, CancellationToken)
  nameWithType.vb: IAsyncBasicConsumer.HandleBasicCancelOkAsync(String, CancellationToken)
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOkAsync*
  name: HandleBasicCancelOkAsync
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicCancelOkAsync_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOkAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicCancelOkAsync
  nameWithType: IAsyncBasicConsumer.HandleBasicCancelOkAsync
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOkAsync(System.String,System.Threading.CancellationToken)
  name: HandleBasicConsumeOkAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicConsumeOkAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOkAsync(System.String,System.Threading.CancellationToken)
  name.vb: HandleBasicConsumeOkAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOkAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOkAsync(String, System.Threading.CancellationToken)
  nameWithType: IAsyncBasicConsumer.HandleBasicConsumeOkAsync(string, CancellationToken)
  nameWithType.vb: IAsyncBasicConsumer.HandleBasicConsumeOkAsync(String, CancellationToken)
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOkAsync*
  name: HandleBasicConsumeOkAsync
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicConsumeOkAsync_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOkAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicConsumeOkAsync
  nameWithType: IAsyncBasicConsumer.HandleBasicConsumeOkAsync
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliverAsync(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: HandleBasicDeliverAsync(string, ulong, bool, string, string, IReadOnlyBasicProperties, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicDeliverAsync_System_String_System_UInt64_System_Boolean_System_String_System_String_RabbitMQ_Client_IReadOnlyBasicProperties_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliverAsync(System.String,System.UInt64,System.Boolean,System.String,System.String,RabbitMQ.Client.IReadOnlyBasicProperties,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: HandleBasicDeliverAsync(String, ULong, Boolean, String, String, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliverAsync(string, ulong, bool, string, string, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliverAsync(String, ULong, Boolean, String, String, RabbitMQ.Client.IReadOnlyBasicProperties, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: IAsyncBasicConsumer.HandleBasicDeliverAsync(string, ulong, bool, string, string, IReadOnlyBasicProperties, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: IAsyncBasicConsumer.HandleBasicDeliverAsync(String, ULong, Boolean, String, String, IReadOnlyBasicProperties, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliverAsync*
  name: HandleBasicDeliverAsync
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleBasicDeliverAsync_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliverAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleBasicDeliverAsync
  nameWithType: IAsyncBasicConsumer.HandleBasicDeliverAsync
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleChannelShutdownAsync(System.Object,RabbitMQ.Client.Events.ShutdownEventArgs)
  name: HandleChannelShutdownAsync(object, ShutdownEventArgs)
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleChannelShutdownAsync_System_Object_RabbitMQ_Client_Events_ShutdownEventArgs_
  commentId: M:RabbitMQ.Client.IAsyncBasicConsumer.HandleChannelShutdownAsync(System.Object,RabbitMQ.Client.Events.ShutdownEventArgs)
  name.vb: HandleChannelShutdownAsync(Object, ShutdownEventArgs)
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleChannelShutdownAsync(object, RabbitMQ.Client.Events.ShutdownEventArgs)
  fullName.vb: RabbitMQ.Client.IAsyncBasicConsumer.HandleChannelShutdownAsync(Object, RabbitMQ.Client.Events.ShutdownEventArgs)
  nameWithType: IAsyncBasicConsumer.HandleChannelShutdownAsync(object, ShutdownEventArgs)
  nameWithType.vb: IAsyncBasicConsumer.HandleChannelShutdownAsync(Object, ShutdownEventArgs)
- uid: RabbitMQ.Client.IAsyncBasicConsumer.HandleChannelShutdownAsync*
  name: HandleChannelShutdownAsync
  href: api/RabbitMQ.Client.IAsyncBasicConsumer.html#RabbitMQ_Client_IAsyncBasicConsumer_HandleChannelShutdownAsync_
  commentId: Overload:RabbitMQ.Client.IAsyncBasicConsumer.HandleChannelShutdownAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IAsyncBasicConsumer.HandleChannelShutdownAsync
  nameWithType: IAsyncBasicConsumer.HandleChannelShutdownAsync
- uid: RabbitMQ.Client.IAuthMechanism
  name: IAuthMechanism
  href: api/RabbitMQ.Client.IAuthMechanism.html
  commentId: T:RabbitMQ.Client.IAuthMechanism
  fullName: RabbitMQ.Client.IAuthMechanism
  nameWithType: IAuthMechanism
- uid: RabbitMQ.Client.IAuthMechanism.HandleChallengeAsync(System.Byte[],RabbitMQ.Client.ConnectionConfig,System.Threading.CancellationToken)
  name: HandleChallengeAsync(byte[]?, ConnectionConfig, CancellationToken)
  href: api/RabbitMQ.Client.IAuthMechanism.html#RabbitMQ_Client_IAuthMechanism_HandleChallengeAsync_System_Byte___RabbitMQ_Client_ConnectionConfig_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IAuthMechanism.HandleChallengeAsync(System.Byte[],RabbitMQ.Client.ConnectionConfig,System.Threading.CancellationToken)
  name.vb: HandleChallengeAsync(Byte(), ConnectionConfig, CancellationToken)
  fullName: RabbitMQ.Client.IAuthMechanism.HandleChallengeAsync(byte[]?, RabbitMQ.Client.ConnectionConfig, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IAuthMechanism.HandleChallengeAsync(Byte(), RabbitMQ.Client.ConnectionConfig, System.Threading.CancellationToken)
  nameWithType: IAuthMechanism.HandleChallengeAsync(byte[]?, ConnectionConfig, CancellationToken)
  nameWithType.vb: IAuthMechanism.HandleChallengeAsync(Byte(), ConnectionConfig, CancellationToken)
- uid: RabbitMQ.Client.IAuthMechanism.HandleChallengeAsync*
  name: HandleChallengeAsync
  href: api/RabbitMQ.Client.IAuthMechanism.html#RabbitMQ_Client_IAuthMechanism_HandleChallengeAsync_
  commentId: Overload:RabbitMQ.Client.IAuthMechanism.HandleChallengeAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IAuthMechanism.HandleChallengeAsync
  nameWithType: IAuthMechanism.HandleChallengeAsync
- uid: RabbitMQ.Client.IAuthMechanismFactory
  name: IAuthMechanismFactory
  href: api/RabbitMQ.Client.IAuthMechanismFactory.html
  commentId: T:RabbitMQ.Client.IAuthMechanismFactory
  fullName: RabbitMQ.Client.IAuthMechanismFactory
  nameWithType: IAuthMechanismFactory
- uid: RabbitMQ.Client.IAuthMechanismFactory.GetInstance
  name: GetInstance()
  href: api/RabbitMQ.Client.IAuthMechanismFactory.html#RabbitMQ_Client_IAuthMechanismFactory_GetInstance
  commentId: M:RabbitMQ.Client.IAuthMechanismFactory.GetInstance
  fullName: RabbitMQ.Client.IAuthMechanismFactory.GetInstance()
  nameWithType: IAuthMechanismFactory.GetInstance()
- uid: RabbitMQ.Client.IAuthMechanismFactory.GetInstance*
  name: GetInstance
  href: api/RabbitMQ.Client.IAuthMechanismFactory.html#RabbitMQ_Client_IAuthMechanismFactory_GetInstance_
  commentId: Overload:RabbitMQ.Client.IAuthMechanismFactory.GetInstance
  isSpec: "True"
  fullName: RabbitMQ.Client.IAuthMechanismFactory.GetInstance
  nameWithType: IAuthMechanismFactory.GetInstance
- uid: RabbitMQ.Client.IAuthMechanismFactory.Name
  name: Name
  href: api/RabbitMQ.Client.IAuthMechanismFactory.html#RabbitMQ_Client_IAuthMechanismFactory_Name
  commentId: P:RabbitMQ.Client.IAuthMechanismFactory.Name
  fullName: RabbitMQ.Client.IAuthMechanismFactory.Name
  nameWithType: IAuthMechanismFactory.Name
- uid: RabbitMQ.Client.IAuthMechanismFactory.Name*
  name: Name
  href: api/RabbitMQ.Client.IAuthMechanismFactory.html#RabbitMQ_Client_IAuthMechanismFactory_Name_
  commentId: Overload:RabbitMQ.Client.IAuthMechanismFactory.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.IAuthMechanismFactory.Name
  nameWithType: IAuthMechanismFactory.Name
- uid: RabbitMQ.Client.IBasicProperties
  name: IBasicProperties
  href: api/RabbitMQ.Client.IBasicProperties.html
  commentId: T:RabbitMQ.Client.IBasicProperties
  fullName: RabbitMQ.Client.IBasicProperties
  nameWithType: IBasicProperties
- uid: RabbitMQ.Client.IBasicProperties.AppId
  name: AppId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_AppId
  commentId: P:RabbitMQ.Client.IBasicProperties.AppId
  fullName: RabbitMQ.Client.IBasicProperties.AppId
  nameWithType: IBasicProperties.AppId
- uid: RabbitMQ.Client.IBasicProperties.AppId*
  name: AppId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_AppId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.AppId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.AppId
  nameWithType: IBasicProperties.AppId
- uid: RabbitMQ.Client.IBasicProperties.ClearAppId
  name: ClearAppId()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearAppId
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearAppId
  fullName: RabbitMQ.Client.IBasicProperties.ClearAppId()
  nameWithType: IBasicProperties.ClearAppId()
- uid: RabbitMQ.Client.IBasicProperties.ClearAppId*
  name: ClearAppId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearAppId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearAppId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearAppId
  nameWithType: IBasicProperties.ClearAppId
- uid: RabbitMQ.Client.IBasicProperties.ClearClusterId
  name: ClearClusterId()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearClusterId
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearClusterId
  fullName: RabbitMQ.Client.IBasicProperties.ClearClusterId()
  nameWithType: IBasicProperties.ClearClusterId()
- uid: RabbitMQ.Client.IBasicProperties.ClearClusterId*
  name: ClearClusterId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearClusterId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearClusterId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearClusterId
  nameWithType: IBasicProperties.ClearClusterId
- uid: RabbitMQ.Client.IBasicProperties.ClearContentEncoding
  name: ClearContentEncoding()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearContentEncoding
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearContentEncoding
  fullName: RabbitMQ.Client.IBasicProperties.ClearContentEncoding()
  nameWithType: IBasicProperties.ClearContentEncoding()
- uid: RabbitMQ.Client.IBasicProperties.ClearContentEncoding*
  name: ClearContentEncoding
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearContentEncoding_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearContentEncoding
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearContentEncoding
  nameWithType: IBasicProperties.ClearContentEncoding
- uid: RabbitMQ.Client.IBasicProperties.ClearContentType
  name: ClearContentType()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearContentType
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearContentType
  fullName: RabbitMQ.Client.IBasicProperties.ClearContentType()
  nameWithType: IBasicProperties.ClearContentType()
- uid: RabbitMQ.Client.IBasicProperties.ClearContentType*
  name: ClearContentType
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearContentType_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearContentType
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearContentType
  nameWithType: IBasicProperties.ClearContentType
- uid: RabbitMQ.Client.IBasicProperties.ClearCorrelationId
  name: ClearCorrelationId()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearCorrelationId
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearCorrelationId
  fullName: RabbitMQ.Client.IBasicProperties.ClearCorrelationId()
  nameWithType: IBasicProperties.ClearCorrelationId()
- uid: RabbitMQ.Client.IBasicProperties.ClearCorrelationId*
  name: ClearCorrelationId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearCorrelationId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearCorrelationId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearCorrelationId
  nameWithType: IBasicProperties.ClearCorrelationId
- uid: RabbitMQ.Client.IBasicProperties.ClearDeliveryMode
  name: ClearDeliveryMode()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearDeliveryMode
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearDeliveryMode
  fullName: RabbitMQ.Client.IBasicProperties.ClearDeliveryMode()
  nameWithType: IBasicProperties.ClearDeliveryMode()
- uid: RabbitMQ.Client.IBasicProperties.ClearDeliveryMode*
  name: ClearDeliveryMode
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearDeliveryMode_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearDeliveryMode
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearDeliveryMode
  nameWithType: IBasicProperties.ClearDeliveryMode
- uid: RabbitMQ.Client.IBasicProperties.ClearExpiration
  name: ClearExpiration()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearExpiration
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearExpiration
  fullName: RabbitMQ.Client.IBasicProperties.ClearExpiration()
  nameWithType: IBasicProperties.ClearExpiration()
- uid: RabbitMQ.Client.IBasicProperties.ClearExpiration*
  name: ClearExpiration
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearExpiration_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearExpiration
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearExpiration
  nameWithType: IBasicProperties.ClearExpiration
- uid: RabbitMQ.Client.IBasicProperties.ClearHeaders
  name: ClearHeaders()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearHeaders
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearHeaders
  fullName: RabbitMQ.Client.IBasicProperties.ClearHeaders()
  nameWithType: IBasicProperties.ClearHeaders()
- uid: RabbitMQ.Client.IBasicProperties.ClearHeaders*
  name: ClearHeaders
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearHeaders_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearHeaders
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearHeaders
  nameWithType: IBasicProperties.ClearHeaders
- uid: RabbitMQ.Client.IBasicProperties.ClearMessageId
  name: ClearMessageId()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearMessageId
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearMessageId
  fullName: RabbitMQ.Client.IBasicProperties.ClearMessageId()
  nameWithType: IBasicProperties.ClearMessageId()
- uid: RabbitMQ.Client.IBasicProperties.ClearMessageId*
  name: ClearMessageId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearMessageId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearMessageId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearMessageId
  nameWithType: IBasicProperties.ClearMessageId
- uid: RabbitMQ.Client.IBasicProperties.ClearPriority
  name: ClearPriority()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearPriority
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearPriority
  fullName: RabbitMQ.Client.IBasicProperties.ClearPriority()
  nameWithType: IBasicProperties.ClearPriority()
- uid: RabbitMQ.Client.IBasicProperties.ClearPriority*
  name: ClearPriority
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearPriority_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearPriority
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearPriority
  nameWithType: IBasicProperties.ClearPriority
- uid: RabbitMQ.Client.IBasicProperties.ClearReplyTo
  name: ClearReplyTo()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearReplyTo
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearReplyTo
  fullName: RabbitMQ.Client.IBasicProperties.ClearReplyTo()
  nameWithType: IBasicProperties.ClearReplyTo()
- uid: RabbitMQ.Client.IBasicProperties.ClearReplyTo*
  name: ClearReplyTo
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearReplyTo_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearReplyTo
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearReplyTo
  nameWithType: IBasicProperties.ClearReplyTo
- uid: RabbitMQ.Client.IBasicProperties.ClearTimestamp
  name: ClearTimestamp()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearTimestamp
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearTimestamp
  fullName: RabbitMQ.Client.IBasicProperties.ClearTimestamp()
  nameWithType: IBasicProperties.ClearTimestamp()
- uid: RabbitMQ.Client.IBasicProperties.ClearTimestamp*
  name: ClearTimestamp
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearTimestamp_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearTimestamp
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearTimestamp
  nameWithType: IBasicProperties.ClearTimestamp
- uid: RabbitMQ.Client.IBasicProperties.ClearType
  name: ClearType()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearType
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearType
  fullName: RabbitMQ.Client.IBasicProperties.ClearType()
  nameWithType: IBasicProperties.ClearType()
- uid: RabbitMQ.Client.IBasicProperties.ClearType*
  name: ClearType
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearType_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearType
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearType
  nameWithType: IBasicProperties.ClearType
- uid: RabbitMQ.Client.IBasicProperties.ClearUserId
  name: ClearUserId()
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearUserId
  commentId: M:RabbitMQ.Client.IBasicProperties.ClearUserId
  fullName: RabbitMQ.Client.IBasicProperties.ClearUserId()
  nameWithType: IBasicProperties.ClearUserId()
- uid: RabbitMQ.Client.IBasicProperties.ClearUserId*
  name: ClearUserId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClearUserId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClearUserId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClearUserId
  nameWithType: IBasicProperties.ClearUserId
- uid: RabbitMQ.Client.IBasicProperties.ClusterId
  name: ClusterId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClusterId
  commentId: P:RabbitMQ.Client.IBasicProperties.ClusterId
  fullName: RabbitMQ.Client.IBasicProperties.ClusterId
  nameWithType: IBasicProperties.ClusterId
- uid: RabbitMQ.Client.IBasicProperties.ClusterId*
  name: ClusterId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ClusterId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ClusterId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ClusterId
  nameWithType: IBasicProperties.ClusterId
- uid: RabbitMQ.Client.IBasicProperties.ContentEncoding
  name: ContentEncoding
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ContentEncoding
  commentId: P:RabbitMQ.Client.IBasicProperties.ContentEncoding
  fullName: RabbitMQ.Client.IBasicProperties.ContentEncoding
  nameWithType: IBasicProperties.ContentEncoding
- uid: RabbitMQ.Client.IBasicProperties.ContentEncoding*
  name: ContentEncoding
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ContentEncoding_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ContentEncoding
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ContentEncoding
  nameWithType: IBasicProperties.ContentEncoding
- uid: RabbitMQ.Client.IBasicProperties.ContentType
  name: ContentType
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ContentType
  commentId: P:RabbitMQ.Client.IBasicProperties.ContentType
  fullName: RabbitMQ.Client.IBasicProperties.ContentType
  nameWithType: IBasicProperties.ContentType
- uid: RabbitMQ.Client.IBasicProperties.ContentType*
  name: ContentType
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ContentType_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ContentType
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ContentType
  nameWithType: IBasicProperties.ContentType
- uid: RabbitMQ.Client.IBasicProperties.CorrelationId
  name: CorrelationId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_CorrelationId
  commentId: P:RabbitMQ.Client.IBasicProperties.CorrelationId
  fullName: RabbitMQ.Client.IBasicProperties.CorrelationId
  nameWithType: IBasicProperties.CorrelationId
- uid: RabbitMQ.Client.IBasicProperties.CorrelationId*
  name: CorrelationId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_CorrelationId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.CorrelationId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.CorrelationId
  nameWithType: IBasicProperties.CorrelationId
- uid: RabbitMQ.Client.IBasicProperties.DeliveryMode
  name: DeliveryMode
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_DeliveryMode
  commentId: P:RabbitMQ.Client.IBasicProperties.DeliveryMode
  fullName: RabbitMQ.Client.IBasicProperties.DeliveryMode
  nameWithType: IBasicProperties.DeliveryMode
- uid: RabbitMQ.Client.IBasicProperties.DeliveryMode*
  name: DeliveryMode
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_DeliveryMode_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.DeliveryMode
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.DeliveryMode
  nameWithType: IBasicProperties.DeliveryMode
- uid: RabbitMQ.Client.IBasicProperties.Expiration
  name: Expiration
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Expiration
  commentId: P:RabbitMQ.Client.IBasicProperties.Expiration
  fullName: RabbitMQ.Client.IBasicProperties.Expiration
  nameWithType: IBasicProperties.Expiration
- uid: RabbitMQ.Client.IBasicProperties.Expiration*
  name: Expiration
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Expiration_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Expiration
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Expiration
  nameWithType: IBasicProperties.Expiration
- uid: RabbitMQ.Client.IBasicProperties.Headers
  name: Headers
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Headers
  commentId: P:RabbitMQ.Client.IBasicProperties.Headers
  fullName: RabbitMQ.Client.IBasicProperties.Headers
  nameWithType: IBasicProperties.Headers
- uid: RabbitMQ.Client.IBasicProperties.Headers*
  name: Headers
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Headers_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Headers
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Headers
  nameWithType: IBasicProperties.Headers
- uid: RabbitMQ.Client.IBasicProperties.MessageId
  name: MessageId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_MessageId
  commentId: P:RabbitMQ.Client.IBasicProperties.MessageId
  fullName: RabbitMQ.Client.IBasicProperties.MessageId
  nameWithType: IBasicProperties.MessageId
- uid: RabbitMQ.Client.IBasicProperties.MessageId*
  name: MessageId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_MessageId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.MessageId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.MessageId
  nameWithType: IBasicProperties.MessageId
- uid: RabbitMQ.Client.IBasicProperties.Persistent
  name: Persistent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Persistent
  commentId: P:RabbitMQ.Client.IBasicProperties.Persistent
  fullName: RabbitMQ.Client.IBasicProperties.Persistent
  nameWithType: IBasicProperties.Persistent
- uid: RabbitMQ.Client.IBasicProperties.Persistent*
  name: Persistent
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Persistent_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Persistent
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Persistent
  nameWithType: IBasicProperties.Persistent
- uid: RabbitMQ.Client.IBasicProperties.Priority
  name: Priority
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Priority
  commentId: P:RabbitMQ.Client.IBasicProperties.Priority
  fullName: RabbitMQ.Client.IBasicProperties.Priority
  nameWithType: IBasicProperties.Priority
- uid: RabbitMQ.Client.IBasicProperties.Priority*
  name: Priority
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Priority_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Priority
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Priority
  nameWithType: IBasicProperties.Priority
- uid: RabbitMQ.Client.IBasicProperties.ReplyTo
  name: ReplyTo
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ReplyTo
  commentId: P:RabbitMQ.Client.IBasicProperties.ReplyTo
  fullName: RabbitMQ.Client.IBasicProperties.ReplyTo
  nameWithType: IBasicProperties.ReplyTo
- uid: RabbitMQ.Client.IBasicProperties.ReplyTo*
  name: ReplyTo
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ReplyTo_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ReplyTo
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ReplyTo
  nameWithType: IBasicProperties.ReplyTo
- uid: RabbitMQ.Client.IBasicProperties.ReplyToAddress
  name: ReplyToAddress
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ReplyToAddress
  commentId: P:RabbitMQ.Client.IBasicProperties.ReplyToAddress
  fullName: RabbitMQ.Client.IBasicProperties.ReplyToAddress
  nameWithType: IBasicProperties.ReplyToAddress
- uid: RabbitMQ.Client.IBasicProperties.ReplyToAddress*
  name: ReplyToAddress
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_ReplyToAddress_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.ReplyToAddress
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.ReplyToAddress
  nameWithType: IBasicProperties.ReplyToAddress
- uid: RabbitMQ.Client.IBasicProperties.Timestamp
  name: Timestamp
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Timestamp
  commentId: P:RabbitMQ.Client.IBasicProperties.Timestamp
  fullName: RabbitMQ.Client.IBasicProperties.Timestamp
  nameWithType: IBasicProperties.Timestamp
- uid: RabbitMQ.Client.IBasicProperties.Timestamp*
  name: Timestamp
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Timestamp_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Timestamp
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Timestamp
  nameWithType: IBasicProperties.Timestamp
- uid: RabbitMQ.Client.IBasicProperties.Type
  name: Type
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Type
  commentId: P:RabbitMQ.Client.IBasicProperties.Type
  fullName: RabbitMQ.Client.IBasicProperties.Type
  nameWithType: IBasicProperties.Type
- uid: RabbitMQ.Client.IBasicProperties.Type*
  name: Type
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_Type_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.Type
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.Type
  nameWithType: IBasicProperties.Type
- uid: RabbitMQ.Client.IBasicProperties.UserId
  name: UserId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_UserId
  commentId: P:RabbitMQ.Client.IBasicProperties.UserId
  fullName: RabbitMQ.Client.IBasicProperties.UserId
  nameWithType: IBasicProperties.UserId
- uid: RabbitMQ.Client.IBasicProperties.UserId*
  name: UserId
  href: api/RabbitMQ.Client.IBasicProperties.html#RabbitMQ_Client_IBasicProperties_UserId_
  commentId: Overload:RabbitMQ.Client.IBasicProperties.UserId
  isSpec: "True"
  fullName: RabbitMQ.Client.IBasicProperties.UserId
  nameWithType: IBasicProperties.UserId
- uid: RabbitMQ.Client.IChannel
  name: IChannel
  href: api/RabbitMQ.Client.IChannel.html
  commentId: T:RabbitMQ.Client.IChannel
  fullName: RabbitMQ.Client.IChannel
  nameWithType: IChannel
- uid: RabbitMQ.Client.IChannel.BasicAckAsync(System.UInt64,System.Boolean,System.Threading.CancellationToken)
  name: BasicAckAsync(ulong, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicAckAsync_System_UInt64_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.BasicAckAsync(System.UInt64,System.Boolean,System.Threading.CancellationToken)
  name.vb: BasicAckAsync(ULong, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.BasicAckAsync(ulong, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.BasicAckAsync(ULong, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.BasicAckAsync(ulong, bool, CancellationToken)
  nameWithType.vb: IChannel.BasicAckAsync(ULong, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.BasicAckAsync*
  name: BasicAckAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicAckAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.BasicAckAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.BasicAckAsync
  nameWithType: IChannel.BasicAckAsync
- uid: RabbitMQ.Client.IChannel.BasicAcksAsync
  name: BasicAcksAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicAcksAsync
  commentId: E:RabbitMQ.Client.IChannel.BasicAcksAsync
  fullName: RabbitMQ.Client.IChannel.BasicAcksAsync
  nameWithType: IChannel.BasicAcksAsync
- uid: RabbitMQ.Client.IChannel.BasicCancelAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  name: BasicCancelAsync(string, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicCancelAsync_System_String_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.BasicCancelAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  name.vb: BasicCancelAsync(String, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.BasicCancelAsync(string, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.BasicCancelAsync(String, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.BasicCancelAsync(string, bool, CancellationToken)
  nameWithType.vb: IChannel.BasicCancelAsync(String, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.BasicCancelAsync*
  name: BasicCancelAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicCancelAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.BasicCancelAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.BasicCancelAsync
  nameWithType: IChannel.BasicCancelAsync
- uid: RabbitMQ.Client.IChannel.BasicConsumeAsync(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IAsyncBasicConsumer,System.Threading.CancellationToken)
  name: BasicConsumeAsync(string, bool, string, bool, bool, IDictionary<string, object?>?, IAsyncBasicConsumer, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicConsumeAsync_System_String_System_Boolean_System_String_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__RabbitMQ_Client_IAsyncBasicConsumer_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.BasicConsumeAsync(System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IAsyncBasicConsumer,System.Threading.CancellationToken)
  name.vb: BasicConsumeAsync(String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object), IAsyncBasicConsumer, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.BasicConsumeAsync(string, bool, string, bool, bool, System.Collections.Generic.IDictionary<string, object?>?, RabbitMQ.Client.IAsyncBasicConsumer, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.BasicConsumeAsync(String, Boolean, String, Boolean, Boolean, System.Collections.Generic.IDictionary(Of String, Object), RabbitMQ.Client.IAsyncBasicConsumer, System.Threading.CancellationToken)
  nameWithType: IChannel.BasicConsumeAsync(string, bool, string, bool, bool, IDictionary<string, object?>?, IAsyncBasicConsumer, CancellationToken)
  nameWithType.vb: IChannel.BasicConsumeAsync(String, Boolean, String, Boolean, Boolean, IDictionary(Of String, Object), IAsyncBasicConsumer, CancellationToken)
- uid: RabbitMQ.Client.IChannel.BasicConsumeAsync*
  name: BasicConsumeAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicConsumeAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.BasicConsumeAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.BasicConsumeAsync
  nameWithType: IChannel.BasicConsumeAsync
- uid: RabbitMQ.Client.IChannel.BasicGetAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  name: BasicGetAsync(string, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicGetAsync_System_String_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.BasicGetAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  name.vb: BasicGetAsync(String, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.BasicGetAsync(string, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.BasicGetAsync(String, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.BasicGetAsync(string, bool, CancellationToken)
  nameWithType.vb: IChannel.BasicGetAsync(String, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.BasicGetAsync*
  name: BasicGetAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicGetAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.BasicGetAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.BasicGetAsync
  nameWithType: IChannel.BasicGetAsync
- uid: RabbitMQ.Client.IChannel.BasicNackAsync(System.UInt64,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name: BasicNackAsync(ulong, bool, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicNackAsync_System_UInt64_System_Boolean_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.BasicNackAsync(System.UInt64,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name.vb: BasicNackAsync(ULong, Boolean, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.BasicNackAsync(ulong, bool, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.BasicNackAsync(ULong, Boolean, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.BasicNackAsync(ulong, bool, bool, CancellationToken)
  nameWithType.vb: IChannel.BasicNackAsync(ULong, Boolean, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.BasicNackAsync*
  name: BasicNackAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicNackAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.BasicNackAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.BasicNackAsync
  nameWithType: IChannel.BasicNackAsync
- uid: RabbitMQ.Client.IChannel.BasicNacksAsync
  name: BasicNacksAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicNacksAsync
  commentId: E:RabbitMQ.Client.IChannel.BasicNacksAsync
  fullName: RabbitMQ.Client.IChannel.BasicNacksAsync
  nameWithType: IChannel.BasicNacksAsync
- uid: RabbitMQ.Client.IChannel.BasicPublishAsync*
  name: BasicPublishAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicPublishAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.BasicPublishAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.BasicPublishAsync
  nameWithType: IChannel.BasicPublishAsync
- uid: RabbitMQ.Client.IChannel.BasicPublishAsync``1(RabbitMQ.Client.CachedString,RabbitMQ.Client.CachedString,System.Boolean,``0,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: BasicPublishAsync<TProperties>(CachedString, CachedString, bool, TProperties, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicPublishAsync__1_RabbitMQ_Client_CachedString_RabbitMQ_Client_CachedString_System_Boolean___0_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.BasicPublishAsync``1(RabbitMQ.Client.CachedString,RabbitMQ.Client.CachedString,System.Boolean,``0,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: BasicPublishAsync(Of TProperties)(CachedString, CachedString, Boolean, TProperties, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.IChannel.BasicPublishAsync<TProperties>(RabbitMQ.Client.CachedString, RabbitMQ.Client.CachedString, bool, TProperties, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.BasicPublishAsync(Of TProperties)(RabbitMQ.Client.CachedString, RabbitMQ.Client.CachedString, Boolean, TProperties, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: IChannel.BasicPublishAsync<TProperties>(CachedString, CachedString, bool, TProperties, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: IChannel.BasicPublishAsync(Of TProperties)(CachedString, CachedString, Boolean, TProperties, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.IChannel.BasicPublishAsync``1(System.String,System.String,System.Boolean,``0,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: BasicPublishAsync<TProperties>(string, string, bool, TProperties, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicPublishAsync__1_System_String_System_String_System_Boolean___0_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.BasicPublishAsync``1(System.String,System.String,System.Boolean,``0,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: BasicPublishAsync(Of TProperties)(String, String, Boolean, TProperties, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.IChannel.BasicPublishAsync<TProperties>(string, string, bool, TProperties, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.BasicPublishAsync(Of TProperties)(String, String, Boolean, TProperties, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: IChannel.BasicPublishAsync<TProperties>(string, string, bool, TProperties, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: IChannel.BasicPublishAsync(Of TProperties)(String, String, Boolean, TProperties, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.IChannel.BasicQosAsync(System.UInt32,System.UInt16,System.Boolean,System.Threading.CancellationToken)
  name: BasicQosAsync(uint, ushort, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicQosAsync_System_UInt32_System_UInt16_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.BasicQosAsync(System.UInt32,System.UInt16,System.Boolean,System.Threading.CancellationToken)
  name.vb: BasicQosAsync(UInteger, UShort, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.BasicQosAsync(uint, ushort, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.BasicQosAsync(UInteger, UShort, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.BasicQosAsync(uint, ushort, bool, CancellationToken)
  nameWithType.vb: IChannel.BasicQosAsync(UInteger, UShort, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.BasicQosAsync*
  name: BasicQosAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicQosAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.BasicQosAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.BasicQosAsync
  nameWithType: IChannel.BasicQosAsync
- uid: RabbitMQ.Client.IChannel.BasicRejectAsync(System.UInt64,System.Boolean,System.Threading.CancellationToken)
  name: BasicRejectAsync(ulong, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicRejectAsync_System_UInt64_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.BasicRejectAsync(System.UInt64,System.Boolean,System.Threading.CancellationToken)
  name.vb: BasicRejectAsync(ULong, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.BasicRejectAsync(ulong, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.BasicRejectAsync(ULong, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.BasicRejectAsync(ulong, bool, CancellationToken)
  nameWithType.vb: IChannel.BasicRejectAsync(ULong, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.BasicRejectAsync*
  name: BasicRejectAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicRejectAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.BasicRejectAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.BasicRejectAsync
  nameWithType: IChannel.BasicRejectAsync
- uid: RabbitMQ.Client.IChannel.BasicReturnAsync
  name: BasicReturnAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_BasicReturnAsync
  commentId: E:RabbitMQ.Client.IChannel.BasicReturnAsync
  fullName: RabbitMQ.Client.IChannel.BasicReturnAsync
  nameWithType: IChannel.BasicReturnAsync
- uid: RabbitMQ.Client.IChannel.CallbackExceptionAsync
  name: CallbackExceptionAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_CallbackExceptionAsync
  commentId: E:RabbitMQ.Client.IChannel.CallbackExceptionAsync
  fullName: RabbitMQ.Client.IChannel.CallbackExceptionAsync
  nameWithType: IChannel.CallbackExceptionAsync
- uid: RabbitMQ.Client.IChannel.ChannelNumber
  name: ChannelNumber
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ChannelNumber
  commentId: P:RabbitMQ.Client.IChannel.ChannelNumber
  fullName: RabbitMQ.Client.IChannel.ChannelNumber
  nameWithType: IChannel.ChannelNumber
- uid: RabbitMQ.Client.IChannel.ChannelNumber*
  name: ChannelNumber
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ChannelNumber_
  commentId: Overload:RabbitMQ.Client.IChannel.ChannelNumber
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.ChannelNumber
  nameWithType: IChannel.ChannelNumber
- uid: RabbitMQ.Client.IChannel.ChannelShutdownAsync
  name: ChannelShutdownAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ChannelShutdownAsync
  commentId: E:RabbitMQ.Client.IChannel.ChannelShutdownAsync
  fullName: RabbitMQ.Client.IChannel.ChannelShutdownAsync
  nameWithType: IChannel.ChannelShutdownAsync
- uid: RabbitMQ.Client.IChannel.CloseAsync(RabbitMQ.Client.Events.ShutdownEventArgs,System.Boolean,System.Threading.CancellationToken)
  name: CloseAsync(ShutdownEventArgs, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_CloseAsync_RabbitMQ_Client_Events_ShutdownEventArgs_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.CloseAsync(RabbitMQ.Client.Events.ShutdownEventArgs,System.Boolean,System.Threading.CancellationToken)
  name.vb: CloseAsync(ShutdownEventArgs, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.CloseAsync(RabbitMQ.Client.Events.ShutdownEventArgs, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.CloseAsync(RabbitMQ.Client.Events.ShutdownEventArgs, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.CloseAsync(ShutdownEventArgs, bool, CancellationToken)
  nameWithType.vb: IChannel.CloseAsync(ShutdownEventArgs, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.CloseAsync(System.UInt16,System.String,System.Boolean,System.Threading.CancellationToken)
  name: CloseAsync(ushort, string, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_CloseAsync_System_UInt16_System_String_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.CloseAsync(System.UInt16,System.String,System.Boolean,System.Threading.CancellationToken)
  name.vb: CloseAsync(UShort, String, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.CloseAsync(ushort, string, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.CloseAsync(UShort, String, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.CloseAsync(ushort, string, bool, CancellationToken)
  nameWithType.vb: IChannel.CloseAsync(UShort, String, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.CloseAsync*
  name: CloseAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_CloseAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.CloseAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.CloseAsync
  nameWithType: IChannel.CloseAsync
- uid: RabbitMQ.Client.IChannel.CloseReason
  name: CloseReason
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_CloseReason
  commentId: P:RabbitMQ.Client.IChannel.CloseReason
  fullName: RabbitMQ.Client.IChannel.CloseReason
  nameWithType: IChannel.CloseReason
- uid: RabbitMQ.Client.IChannel.CloseReason*
  name: CloseReason
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_CloseReason_
  commentId: Overload:RabbitMQ.Client.IChannel.CloseReason
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.CloseReason
  nameWithType: IChannel.CloseReason
- uid: RabbitMQ.Client.IChannel.ConsumerCountAsync(System.String,System.Threading.CancellationToken)
  name: ConsumerCountAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ConsumerCountAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.ConsumerCountAsync(System.String,System.Threading.CancellationToken)
  name.vb: ConsumerCountAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.ConsumerCountAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.ConsumerCountAsync(String, System.Threading.CancellationToken)
  nameWithType: IChannel.ConsumerCountAsync(string, CancellationToken)
  nameWithType.vb: IChannel.ConsumerCountAsync(String, CancellationToken)
- uid: RabbitMQ.Client.IChannel.ConsumerCountAsync*
  name: ConsumerCountAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ConsumerCountAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.ConsumerCountAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.ConsumerCountAsync
  nameWithType: IChannel.ConsumerCountAsync
- uid: RabbitMQ.Client.IChannel.ContinuationTimeout
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ContinuationTimeout
  commentId: P:RabbitMQ.Client.IChannel.ContinuationTimeout
  fullName: RabbitMQ.Client.IChannel.ContinuationTimeout
  nameWithType: IChannel.ContinuationTimeout
- uid: RabbitMQ.Client.IChannel.ContinuationTimeout*
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ContinuationTimeout_
  commentId: Overload:RabbitMQ.Client.IChannel.ContinuationTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.ContinuationTimeout
  nameWithType: IChannel.ContinuationTimeout
- uid: RabbitMQ.Client.IChannel.CurrentQueue
  name: CurrentQueue
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_CurrentQueue
  commentId: P:RabbitMQ.Client.IChannel.CurrentQueue
  fullName: RabbitMQ.Client.IChannel.CurrentQueue
  nameWithType: IChannel.CurrentQueue
- uid: RabbitMQ.Client.IChannel.CurrentQueue*
  name: CurrentQueue
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_CurrentQueue_
  commentId: Overload:RabbitMQ.Client.IChannel.CurrentQueue
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.CurrentQueue
  nameWithType: IChannel.CurrentQueue
- uid: RabbitMQ.Client.IChannel.DefaultConsumer
  name: DefaultConsumer
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_DefaultConsumer
  commentId: P:RabbitMQ.Client.IChannel.DefaultConsumer
  fullName: RabbitMQ.Client.IChannel.DefaultConsumer
  nameWithType: IChannel.DefaultConsumer
- uid: RabbitMQ.Client.IChannel.DefaultConsumer*
  name: DefaultConsumer
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_DefaultConsumer_
  commentId: Overload:RabbitMQ.Client.IChannel.DefaultConsumer
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.DefaultConsumer
  nameWithType: IChannel.DefaultConsumer
- uid: RabbitMQ.Client.IChannel.ExchangeBindAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  name: ExchangeBindAsync(string, string, string, IDictionary<string, object?>?, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ExchangeBindAsync_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.ExchangeBindAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  name.vb: ExchangeBindAsync(String, String, String, IDictionary(Of String, Object), Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.ExchangeBindAsync(string, string, string, System.Collections.Generic.IDictionary<string, object?>?, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.ExchangeBindAsync(String, String, String, System.Collections.Generic.IDictionary(Of String, Object), Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.ExchangeBindAsync(string, string, string, IDictionary<string, object?>?, bool, CancellationToken)
  nameWithType.vb: IChannel.ExchangeBindAsync(String, String, String, IDictionary(Of String, Object), Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.ExchangeBindAsync*
  name: ExchangeBindAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ExchangeBindAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.ExchangeBindAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.ExchangeBindAsync
  nameWithType: IChannel.ExchangeBindAsync
- uid: RabbitMQ.Client.IChannel.ExchangeDeclareAsync(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name: ExchangeDeclareAsync(string, string, bool, bool, IDictionary<string, object?>?, bool, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ExchangeDeclareAsync_System_String_System_String_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__System_Boolean_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.ExchangeDeclareAsync(System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name.vb: ExchangeDeclareAsync(String, String, Boolean, Boolean, IDictionary(Of String, Object), Boolean, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.ExchangeDeclareAsync(string, string, bool, bool, System.Collections.Generic.IDictionary<string, object?>?, bool, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.ExchangeDeclareAsync(String, String, Boolean, Boolean, System.Collections.Generic.IDictionary(Of String, Object), Boolean, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.ExchangeDeclareAsync(string, string, bool, bool, IDictionary<string, object?>?, bool, bool, CancellationToken)
  nameWithType.vb: IChannel.ExchangeDeclareAsync(String, String, Boolean, Boolean, IDictionary(Of String, Object), Boolean, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.ExchangeDeclareAsync*
  name: ExchangeDeclareAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ExchangeDeclareAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.ExchangeDeclareAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.ExchangeDeclareAsync
  nameWithType: IChannel.ExchangeDeclareAsync
- uid: RabbitMQ.Client.IChannel.ExchangeDeclarePassiveAsync(System.String,System.Threading.CancellationToken)
  name: ExchangeDeclarePassiveAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ExchangeDeclarePassiveAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.ExchangeDeclarePassiveAsync(System.String,System.Threading.CancellationToken)
  name.vb: ExchangeDeclarePassiveAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.ExchangeDeclarePassiveAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.ExchangeDeclarePassiveAsync(String, System.Threading.CancellationToken)
  nameWithType: IChannel.ExchangeDeclarePassiveAsync(string, CancellationToken)
  nameWithType.vb: IChannel.ExchangeDeclarePassiveAsync(String, CancellationToken)
- uid: RabbitMQ.Client.IChannel.ExchangeDeclarePassiveAsync*
  name: ExchangeDeclarePassiveAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ExchangeDeclarePassiveAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.ExchangeDeclarePassiveAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.ExchangeDeclarePassiveAsync
  nameWithType: IChannel.ExchangeDeclarePassiveAsync
- uid: RabbitMQ.Client.IChannel.ExchangeDeleteAsync(System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name: ExchangeDeleteAsync(string, bool, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ExchangeDeleteAsync_System_String_System_Boolean_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.ExchangeDeleteAsync(System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name.vb: ExchangeDeleteAsync(String, Boolean, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.ExchangeDeleteAsync(string, bool, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.ExchangeDeleteAsync(String, Boolean, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.ExchangeDeleteAsync(string, bool, bool, CancellationToken)
  nameWithType.vb: IChannel.ExchangeDeleteAsync(String, Boolean, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.ExchangeDeleteAsync*
  name: ExchangeDeleteAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ExchangeDeleteAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.ExchangeDeleteAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.ExchangeDeleteAsync
  nameWithType: IChannel.ExchangeDeleteAsync
- uid: RabbitMQ.Client.IChannel.ExchangeUnbindAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  name: ExchangeUnbindAsync(string, string, string, IDictionary<string, object?>?, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ExchangeUnbindAsync_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.ExchangeUnbindAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  name.vb: ExchangeUnbindAsync(String, String, String, IDictionary(Of String, Object), Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.ExchangeUnbindAsync(string, string, string, System.Collections.Generic.IDictionary<string, object?>?, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.ExchangeUnbindAsync(String, String, String, System.Collections.Generic.IDictionary(Of String, Object), Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.ExchangeUnbindAsync(string, string, string, IDictionary<string, object?>?, bool, CancellationToken)
  nameWithType.vb: IChannel.ExchangeUnbindAsync(String, String, String, IDictionary(Of String, Object), Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.ExchangeUnbindAsync*
  name: ExchangeUnbindAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_ExchangeUnbindAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.ExchangeUnbindAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.ExchangeUnbindAsync
  nameWithType: IChannel.ExchangeUnbindAsync
- uid: RabbitMQ.Client.IChannel.FlowControlAsync
  name: FlowControlAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_FlowControlAsync
  commentId: E:RabbitMQ.Client.IChannel.FlowControlAsync
  fullName: RabbitMQ.Client.IChannel.FlowControlAsync
  nameWithType: IChannel.FlowControlAsync
- uid: RabbitMQ.Client.IChannel.GetNextPublishSequenceNumberAsync(System.Threading.CancellationToken)
  name: GetNextPublishSequenceNumberAsync(CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_GetNextPublishSequenceNumberAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.GetNextPublishSequenceNumberAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.IChannel.GetNextPublishSequenceNumberAsync(System.Threading.CancellationToken)
  nameWithType: IChannel.GetNextPublishSequenceNumberAsync(CancellationToken)
- uid: RabbitMQ.Client.IChannel.GetNextPublishSequenceNumberAsync*
  name: GetNextPublishSequenceNumberAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_GetNextPublishSequenceNumberAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.GetNextPublishSequenceNumberAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.GetNextPublishSequenceNumberAsync
  nameWithType: IChannel.GetNextPublishSequenceNumberAsync
- uid: RabbitMQ.Client.IChannel.IsClosed
  name: IsClosed
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_IsClosed
  commentId: P:RabbitMQ.Client.IChannel.IsClosed
  fullName: RabbitMQ.Client.IChannel.IsClosed
  nameWithType: IChannel.IsClosed
- uid: RabbitMQ.Client.IChannel.IsClosed*
  name: IsClosed
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_IsClosed_
  commentId: Overload:RabbitMQ.Client.IChannel.IsClosed
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.IsClosed
  nameWithType: IChannel.IsClosed
- uid: RabbitMQ.Client.IChannel.IsOpen
  name: IsOpen
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_IsOpen
  commentId: P:RabbitMQ.Client.IChannel.IsOpen
  fullName: RabbitMQ.Client.IChannel.IsOpen
  nameWithType: IChannel.IsOpen
- uid: RabbitMQ.Client.IChannel.IsOpen*
  name: IsOpen
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_IsOpen_
  commentId: Overload:RabbitMQ.Client.IChannel.IsOpen
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.IsOpen
  nameWithType: IChannel.IsOpen
- uid: RabbitMQ.Client.IChannel.MessageCountAsync(System.String,System.Threading.CancellationToken)
  name: MessageCountAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_MessageCountAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.MessageCountAsync(System.String,System.Threading.CancellationToken)
  name.vb: MessageCountAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.MessageCountAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.MessageCountAsync(String, System.Threading.CancellationToken)
  nameWithType: IChannel.MessageCountAsync(string, CancellationToken)
  nameWithType.vb: IChannel.MessageCountAsync(String, CancellationToken)
- uid: RabbitMQ.Client.IChannel.MessageCountAsync*
  name: MessageCountAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_MessageCountAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.MessageCountAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.MessageCountAsync
  nameWithType: IChannel.MessageCountAsync
- uid: RabbitMQ.Client.IChannel.QueueBindAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  name: QueueBindAsync(string, string, string, IDictionary<string, object?>?, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueueBindAsync_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.QueueBindAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  name.vb: QueueBindAsync(String, String, String, IDictionary(Of String, Object), Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.QueueBindAsync(string, string, string, System.Collections.Generic.IDictionary<string, object?>?, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.QueueBindAsync(String, String, String, System.Collections.Generic.IDictionary(Of String, Object), Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.QueueBindAsync(string, string, string, IDictionary<string, object?>?, bool, CancellationToken)
  nameWithType.vb: IChannel.QueueBindAsync(String, String, String, IDictionary(Of String, Object), Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.QueueBindAsync*
  name: QueueBindAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueueBindAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.QueueBindAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.QueueBindAsync
  nameWithType: IChannel.QueueBindAsync
- uid: RabbitMQ.Client.IChannel.QueueDeclareAsync(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name: QueueDeclareAsync(string, bool, bool, bool, IDictionary<string, object?>?, bool, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueueDeclareAsync_System_String_System_Boolean_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__System_Boolean_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.QueueDeclareAsync(System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name.vb: QueueDeclareAsync(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object), Boolean, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.QueueDeclareAsync(string, bool, bool, bool, System.Collections.Generic.IDictionary<string, object?>?, bool, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.QueueDeclareAsync(String, Boolean, Boolean, Boolean, System.Collections.Generic.IDictionary(Of String, Object), Boolean, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.QueueDeclareAsync(string, bool, bool, bool, IDictionary<string, object?>?, bool, bool, CancellationToken)
  nameWithType.vb: IChannel.QueueDeclareAsync(String, Boolean, Boolean, Boolean, IDictionary(Of String, Object), Boolean, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.QueueDeclareAsync*
  name: QueueDeclareAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueueDeclareAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.QueueDeclareAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.QueueDeclareAsync
  nameWithType: IChannel.QueueDeclareAsync
- uid: RabbitMQ.Client.IChannel.QueueDeclarePassiveAsync(System.String,System.Threading.CancellationToken)
  name: QueueDeclarePassiveAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueueDeclarePassiveAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.QueueDeclarePassiveAsync(System.String,System.Threading.CancellationToken)
  name.vb: QueueDeclarePassiveAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.QueueDeclarePassiveAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.QueueDeclarePassiveAsync(String, System.Threading.CancellationToken)
  nameWithType: IChannel.QueueDeclarePassiveAsync(string, CancellationToken)
  nameWithType.vb: IChannel.QueueDeclarePassiveAsync(String, CancellationToken)
- uid: RabbitMQ.Client.IChannel.QueueDeclarePassiveAsync*
  name: QueueDeclarePassiveAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueueDeclarePassiveAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.QueueDeclarePassiveAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.QueueDeclarePassiveAsync
  nameWithType: IChannel.QueueDeclarePassiveAsync
- uid: RabbitMQ.Client.IChannel.QueueDeleteAsync(System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name: QueueDeleteAsync(string, bool, bool, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueueDeleteAsync_System_String_System_Boolean_System_Boolean_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.QueueDeleteAsync(System.String,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name.vb: QueueDeleteAsync(String, Boolean, Boolean, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.QueueDeleteAsync(string, bool, bool, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.QueueDeleteAsync(String, Boolean, Boolean, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannel.QueueDeleteAsync(string, bool, bool, bool, CancellationToken)
  nameWithType.vb: IChannel.QueueDeleteAsync(String, Boolean, Boolean, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannel.QueueDeleteAsync*
  name: QueueDeleteAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueueDeleteAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.QueueDeleteAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.QueueDeleteAsync
  nameWithType: IChannel.QueueDeleteAsync
- uid: RabbitMQ.Client.IChannel.QueuePurgeAsync(System.String,System.Threading.CancellationToken)
  name: QueuePurgeAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueuePurgeAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.QueuePurgeAsync(System.String,System.Threading.CancellationToken)
  name.vb: QueuePurgeAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.IChannel.QueuePurgeAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.QueuePurgeAsync(String, System.Threading.CancellationToken)
  nameWithType: IChannel.QueuePurgeAsync(string, CancellationToken)
  nameWithType.vb: IChannel.QueuePurgeAsync(String, CancellationToken)
- uid: RabbitMQ.Client.IChannel.QueuePurgeAsync*
  name: QueuePurgeAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueuePurgeAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.QueuePurgeAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.QueuePurgeAsync
  nameWithType: IChannel.QueuePurgeAsync
- uid: RabbitMQ.Client.IChannel.QueueUnbindAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: QueueUnbindAsync(string, string, string, IDictionary<string, object?>?, CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueueUnbindAsync_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.QueueUnbindAsync(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name.vb: QueueUnbindAsync(String, String, String, IDictionary(Of String, Object), CancellationToken)
  fullName: RabbitMQ.Client.IChannel.QueueUnbindAsync(string, string, string, System.Collections.Generic.IDictionary<string, object?>?, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannel.QueueUnbindAsync(String, String, String, System.Collections.Generic.IDictionary(Of String, Object), System.Threading.CancellationToken)
  nameWithType: IChannel.QueueUnbindAsync(string, string, string, IDictionary<string, object?>?, CancellationToken)
  nameWithType.vb: IChannel.QueueUnbindAsync(String, String, String, IDictionary(Of String, Object), CancellationToken)
- uid: RabbitMQ.Client.IChannel.QueueUnbindAsync*
  name: QueueUnbindAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_QueueUnbindAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.QueueUnbindAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.QueueUnbindAsync
  nameWithType: IChannel.QueueUnbindAsync
- uid: RabbitMQ.Client.IChannel.TxCommitAsync(System.Threading.CancellationToken)
  name: TxCommitAsync(CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_TxCommitAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.TxCommitAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.IChannel.TxCommitAsync(System.Threading.CancellationToken)
  nameWithType: IChannel.TxCommitAsync(CancellationToken)
- uid: RabbitMQ.Client.IChannel.TxCommitAsync*
  name: TxCommitAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_TxCommitAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.TxCommitAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.TxCommitAsync
  nameWithType: IChannel.TxCommitAsync
- uid: RabbitMQ.Client.IChannel.TxRollbackAsync(System.Threading.CancellationToken)
  name: TxRollbackAsync(CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_TxRollbackAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.TxRollbackAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.IChannel.TxRollbackAsync(System.Threading.CancellationToken)
  nameWithType: IChannel.TxRollbackAsync(CancellationToken)
- uid: RabbitMQ.Client.IChannel.TxRollbackAsync*
  name: TxRollbackAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_TxRollbackAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.TxRollbackAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.TxRollbackAsync
  nameWithType: IChannel.TxRollbackAsync
- uid: RabbitMQ.Client.IChannel.TxSelectAsync(System.Threading.CancellationToken)
  name: TxSelectAsync(CancellationToken)
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_TxSelectAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannel.TxSelectAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.IChannel.TxSelectAsync(System.Threading.CancellationToken)
  nameWithType: IChannel.TxSelectAsync(CancellationToken)
- uid: RabbitMQ.Client.IChannel.TxSelectAsync*
  name: TxSelectAsync
  href: api/RabbitMQ.Client.IChannel.html#RabbitMQ_Client_IChannel_TxSelectAsync_
  commentId: Overload:RabbitMQ.Client.IChannel.TxSelectAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannel.TxSelectAsync
  nameWithType: IChannel.TxSelectAsync
- uid: RabbitMQ.Client.IChannelExtensions
  name: IChannelExtensions
  href: api/RabbitMQ.Client.IChannelExtensions.html
  commentId: T:RabbitMQ.Client.IChannelExtensions
  fullName: RabbitMQ.Client.IChannelExtensions
  nameWithType: IChannelExtensions
- uid: RabbitMQ.Client.IChannelExtensions.AbortAsync(RabbitMQ.Client.IChannel,System.Threading.CancellationToken)
  name: AbortAsync(IChannel, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_AbortAsync_RabbitMQ_Client_IChannel_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.AbortAsync(RabbitMQ.Client.IChannel,System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.AbortAsync(RabbitMQ.Client.IChannel, System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.AbortAsync(IChannel, CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.AbortAsync*
  name: AbortAsync
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_AbortAsync_
  commentId: Overload:RabbitMQ.Client.IChannelExtensions.AbortAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannelExtensions.AbortAsync
  nameWithType: IChannelExtensions.AbortAsync
- uid: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel,System.String,System.Boolean,RabbitMQ.Client.IAsyncBasicConsumer,System.Threading.CancellationToken)
  name: BasicConsumeAsync(IChannel, string, bool, IAsyncBasicConsumer, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_BasicConsumeAsync_RabbitMQ_Client_IChannel_System_String_System_Boolean_RabbitMQ_Client_IAsyncBasicConsumer_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel,System.String,System.Boolean,RabbitMQ.Client.IAsyncBasicConsumer,System.Threading.CancellationToken)
  name.vb: BasicConsumeAsync(IChannel, String, Boolean, IAsyncBasicConsumer, CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel, string, bool, RabbitMQ.Client.IAsyncBasicConsumer, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel, String, Boolean, RabbitMQ.Client.IAsyncBasicConsumer, System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.BasicConsumeAsync(IChannel, string, bool, IAsyncBasicConsumer, CancellationToken)
  nameWithType.vb: IChannelExtensions.BasicConsumeAsync(IChannel, String, Boolean, IAsyncBasicConsumer, CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel,System.String,System.Boolean,System.String,RabbitMQ.Client.IAsyncBasicConsumer,System.Threading.CancellationToken)
  name: BasicConsumeAsync(IChannel, string, bool, string, IAsyncBasicConsumer, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_BasicConsumeAsync_RabbitMQ_Client_IChannel_System_String_System_Boolean_System_String_RabbitMQ_Client_IAsyncBasicConsumer_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel,System.String,System.Boolean,System.String,RabbitMQ.Client.IAsyncBasicConsumer,System.Threading.CancellationToken)
  name.vb: BasicConsumeAsync(IChannel, String, Boolean, String, IAsyncBasicConsumer, CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel, string, bool, string, RabbitMQ.Client.IAsyncBasicConsumer, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel, String, Boolean, String, RabbitMQ.Client.IAsyncBasicConsumer, System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.BasicConsumeAsync(IChannel, string, bool, string, IAsyncBasicConsumer, CancellationToken)
  nameWithType.vb: IChannelExtensions.BasicConsumeAsync(IChannel, String, Boolean, String, IAsyncBasicConsumer, CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel,System.String,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IAsyncBasicConsumer,System.Threading.CancellationToken)
  name: BasicConsumeAsync(IChannel, string, bool, string, IDictionary<string, object?>?, IAsyncBasicConsumer, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_BasicConsumeAsync_RabbitMQ_Client_IChannel_System_String_System_Boolean_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__RabbitMQ_Client_IAsyncBasicConsumer_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel,System.String,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},RabbitMQ.Client.IAsyncBasicConsumer,System.Threading.CancellationToken)
  name.vb: BasicConsumeAsync(IChannel, String, Boolean, String, IDictionary(Of String, Object), IAsyncBasicConsumer, CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel, string, bool, string, System.Collections.Generic.IDictionary<string, object?>?, RabbitMQ.Client.IAsyncBasicConsumer, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync(RabbitMQ.Client.IChannel, String, Boolean, String, System.Collections.Generic.IDictionary(Of String, Object), RabbitMQ.Client.IAsyncBasicConsumer, System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.BasicConsumeAsync(IChannel, string, bool, string, IDictionary<string, object?>?, IAsyncBasicConsumer, CancellationToken)
  nameWithType.vb: IChannelExtensions.BasicConsumeAsync(IChannel, String, Boolean, String, IDictionary(Of String, Object), IAsyncBasicConsumer, CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync*
  name: BasicConsumeAsync
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_BasicConsumeAsync_
  commentId: Overload:RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannelExtensions.BasicConsumeAsync
  nameWithType: IChannelExtensions.BasicConsumeAsync
- uid: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel,RabbitMQ.Client.CachedString,RabbitMQ.Client.CachedString,System.Boolean,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: BasicPublishAsync(IChannel, CachedString, CachedString, bool, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_BasicPublishAsync_RabbitMQ_Client_IChannel_RabbitMQ_Client_CachedString_RabbitMQ_Client_CachedString_System_Boolean_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel,RabbitMQ.Client.CachedString,RabbitMQ.Client.CachedString,System.Boolean,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: BasicPublishAsync(IChannel, CachedString, CachedString, Boolean, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel, RabbitMQ.Client.CachedString, RabbitMQ.Client.CachedString, bool, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel, RabbitMQ.Client.CachedString, RabbitMQ.Client.CachedString, Boolean, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.BasicPublishAsync(IChannel, CachedString, CachedString, bool, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: IChannelExtensions.BasicPublishAsync(IChannel, CachedString, CachedString, Boolean, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel,RabbitMQ.Client.CachedString,RabbitMQ.Client.CachedString,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: BasicPublishAsync(IChannel, CachedString, CachedString, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_BasicPublishAsync_RabbitMQ_Client_IChannel_RabbitMQ_Client_CachedString_RabbitMQ_Client_CachedString_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel,RabbitMQ.Client.CachedString,RabbitMQ.Client.CachedString,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: BasicPublishAsync(IChannel, CachedString, CachedString, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel, RabbitMQ.Client.CachedString, RabbitMQ.Client.CachedString, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel, RabbitMQ.Client.CachedString, RabbitMQ.Client.CachedString, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.BasicPublishAsync(IChannel, CachedString, CachedString, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: IChannelExtensions.BasicPublishAsync(IChannel, CachedString, CachedString, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel,System.String,System.String,System.Boolean,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: BasicPublishAsync(IChannel, string, string, bool, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_BasicPublishAsync_RabbitMQ_Client_IChannel_System_String_System_String_System_Boolean_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel,System.String,System.String,System.Boolean,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: BasicPublishAsync(IChannel, String, String, Boolean, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel, string, string, bool, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel, String, String, Boolean, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.BasicPublishAsync(IChannel, string, string, bool, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: IChannelExtensions.BasicPublishAsync(IChannel, String, String, Boolean, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel,System.String,System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: BasicPublishAsync(IChannel, string, string, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_BasicPublishAsync_RabbitMQ_Client_IChannel_System_String_System_String_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel,System.String,System.String,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: BasicPublishAsync(IChannel, String, String, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel, string, string, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(RabbitMQ.Client.IChannel, String, String, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.BasicPublishAsync(IChannel, string, string, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: IChannelExtensions.BasicPublishAsync(IChannel, String, String, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync*
  name: BasicPublishAsync
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_BasicPublishAsync_
  commentId: Overload:RabbitMQ.Client.IChannelExtensions.BasicPublishAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync
  nameWithType: IChannelExtensions.BasicPublishAsync
- uid: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync``1(RabbitMQ.Client.IChannel,RabbitMQ.Client.PublicationAddress,``0,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name: BasicPublishAsync<T>(IChannel, PublicationAddress, T, ReadOnlyMemory<byte>, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_BasicPublishAsync__1_RabbitMQ_Client_IChannel_RabbitMQ_Client_PublicationAddress___0_System_ReadOnlyMemory_System_Byte__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.BasicPublishAsync``1(RabbitMQ.Client.IChannel,RabbitMQ.Client.PublicationAddress,``0,System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  name.vb: BasicPublishAsync(Of T)(IChannel, PublicationAddress, T, ReadOnlyMemory(Of Byte), CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync<T>(RabbitMQ.Client.IChannel, RabbitMQ.Client.PublicationAddress, T, System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.BasicPublishAsync(Of T)(RabbitMQ.Client.IChannel, RabbitMQ.Client.PublicationAddress, T, System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.BasicPublishAsync<T>(IChannel, PublicationAddress, T, ReadOnlyMemory<byte>, CancellationToken)
  nameWithType.vb: IChannelExtensions.BasicPublishAsync(Of T)(IChannel, PublicationAddress, T, ReadOnlyMemory(Of Byte), CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.CloseAsync(RabbitMQ.Client.IChannel,System.Threading.CancellationToken)
  name: CloseAsync(IChannel, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_CloseAsync_RabbitMQ_Client_IChannel_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.CloseAsync(RabbitMQ.Client.IChannel,System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.CloseAsync(RabbitMQ.Client.IChannel, System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.CloseAsync(IChannel, CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.CloseAsync(RabbitMQ.Client.IChannel,System.UInt16,System.String,System.Threading.CancellationToken)
  name: CloseAsync(IChannel, ushort, string, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_CloseAsync_RabbitMQ_Client_IChannel_System_UInt16_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.CloseAsync(RabbitMQ.Client.IChannel,System.UInt16,System.String,System.Threading.CancellationToken)
  name.vb: CloseAsync(IChannel, UShort, String, CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.CloseAsync(RabbitMQ.Client.IChannel, ushort, string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.CloseAsync(RabbitMQ.Client.IChannel, UShort, String, System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.CloseAsync(IChannel, ushort, string, CancellationToken)
  nameWithType.vb: IChannelExtensions.CloseAsync(IChannel, UShort, String, CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.CloseAsync*
  name: CloseAsync
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_CloseAsync_
  commentId: Overload:RabbitMQ.Client.IChannelExtensions.CloseAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannelExtensions.CloseAsync
  nameWithType: IChannelExtensions.CloseAsync
- uid: RabbitMQ.Client.IChannelExtensions.ExchangeDeclareAsync(RabbitMQ.Client.IChannel,System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  name: ExchangeDeclareAsync(IChannel, string, string, bool, bool, IDictionary<string, object?>?, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_ExchangeDeclareAsync_RabbitMQ_Client_IChannel_System_String_System_String_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.ExchangeDeclareAsync(RabbitMQ.Client.IChannel,System.String,System.String,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  name.vb: ExchangeDeclareAsync(IChannel, String, String, Boolean, Boolean, IDictionary(Of String, Object), Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.ExchangeDeclareAsync(RabbitMQ.Client.IChannel, string, string, bool, bool, System.Collections.Generic.IDictionary<string, object?>?, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.ExchangeDeclareAsync(RabbitMQ.Client.IChannel, String, String, Boolean, Boolean, System.Collections.Generic.IDictionary(Of String, Object), Boolean, System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.ExchangeDeclareAsync(IChannel, string, string, bool, bool, IDictionary<string, object?>?, bool, CancellationToken)
  nameWithType.vb: IChannelExtensions.ExchangeDeclareAsync(IChannel, String, String, Boolean, Boolean, IDictionary(Of String, Object), Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.ExchangeDeclareAsync*
  name: ExchangeDeclareAsync
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_ExchangeDeclareAsync_
  commentId: Overload:RabbitMQ.Client.IChannelExtensions.ExchangeDeclareAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannelExtensions.ExchangeDeclareAsync
  nameWithType: IChannelExtensions.ExchangeDeclareAsync
- uid: RabbitMQ.Client.IChannelExtensions.QueueDeclareAsync(RabbitMQ.Client.IChannel,System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  name: QueueDeclareAsync(IChannel, string, bool, bool, bool, IDictionary<string, object?>?, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_QueueDeclareAsync_RabbitMQ_Client_IChannel_System_String_System_Boolean_System_Boolean_System_Boolean_System_Collections_Generic_IDictionary_System_String_System_Object__System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.QueueDeclareAsync(RabbitMQ.Client.IChannel,System.String,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)
  name.vb: QueueDeclareAsync(IChannel, String, Boolean, Boolean, Boolean, IDictionary(Of String, Object), Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.QueueDeclareAsync(RabbitMQ.Client.IChannel, string, bool, bool, bool, System.Collections.Generic.IDictionary<string, object?>?, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.QueueDeclareAsync(RabbitMQ.Client.IChannel, String, Boolean, Boolean, Boolean, System.Collections.Generic.IDictionary(Of String, Object), Boolean, System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.QueueDeclareAsync(IChannel, string, bool, bool, bool, IDictionary<string, object?>?, bool, CancellationToken)
  nameWithType.vb: IChannelExtensions.QueueDeclareAsync(IChannel, String, Boolean, Boolean, Boolean, IDictionary(Of String, Object), Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.QueueDeclareAsync*
  name: QueueDeclareAsync
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_QueueDeclareAsync_
  commentId: Overload:RabbitMQ.Client.IChannelExtensions.QueueDeclareAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannelExtensions.QueueDeclareAsync
  nameWithType: IChannelExtensions.QueueDeclareAsync
- uid: RabbitMQ.Client.IChannelExtensions.QueueDeleteAsync(RabbitMQ.Client.IChannel,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name: QueueDeleteAsync(IChannel, string, bool, bool, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_QueueDeleteAsync_RabbitMQ_Client_IChannel_System_String_System_Boolean_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.QueueDeleteAsync(RabbitMQ.Client.IChannel,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  name.vb: QueueDeleteAsync(IChannel, String, Boolean, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.QueueDeleteAsync(RabbitMQ.Client.IChannel, string, bool, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.QueueDeleteAsync(RabbitMQ.Client.IChannel, String, Boolean, Boolean, System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.QueueDeleteAsync(IChannel, string, bool, bool, CancellationToken)
  nameWithType.vb: IChannelExtensions.QueueDeleteAsync(IChannel, String, Boolean, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.QueueDeleteAsync*
  name: QueueDeleteAsync
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_QueueDeleteAsync_
  commentId: Overload:RabbitMQ.Client.IChannelExtensions.QueueDeleteAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannelExtensions.QueueDeleteAsync
  nameWithType: IChannelExtensions.QueueDeleteAsync
- uid: RabbitMQ.Client.IChannelExtensions.QueueUnbindAsync(RabbitMQ.Client.IChannel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name: QueueUnbindAsync(IChannel, string, string, string, IDictionary<string, object?>?, CancellationToken)
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_QueueUnbindAsync_RabbitMQ_Client_IChannel_System_String_System_String_System_String_System_Collections_Generic_IDictionary_System_String_System_Object__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IChannelExtensions.QueueUnbindAsync(RabbitMQ.Client.IChannel,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  name.vb: QueueUnbindAsync(IChannel, String, String, String, IDictionary(Of String, Object), CancellationToken)
  fullName: RabbitMQ.Client.IChannelExtensions.QueueUnbindAsync(RabbitMQ.Client.IChannel, string, string, string, System.Collections.Generic.IDictionary<string, object?>?, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IChannelExtensions.QueueUnbindAsync(RabbitMQ.Client.IChannel, String, String, String, System.Collections.Generic.IDictionary(Of String, Object), System.Threading.CancellationToken)
  nameWithType: IChannelExtensions.QueueUnbindAsync(IChannel, string, string, string, IDictionary<string, object?>?, CancellationToken)
  nameWithType.vb: IChannelExtensions.QueueUnbindAsync(IChannel, String, String, String, IDictionary(Of String, Object), CancellationToken)
- uid: RabbitMQ.Client.IChannelExtensions.QueueUnbindAsync*
  name: QueueUnbindAsync
  href: api/RabbitMQ.Client.IChannelExtensions.html#RabbitMQ_Client_IChannelExtensions_QueueUnbindAsync_
  commentId: Overload:RabbitMQ.Client.IChannelExtensions.QueueUnbindAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IChannelExtensions.QueueUnbindAsync
  nameWithType: IChannelExtensions.QueueUnbindAsync
- uid: RabbitMQ.Client.IConnection
  name: IConnection
  href: api/RabbitMQ.Client.IConnection.html
  commentId: T:RabbitMQ.Client.IConnection
  fullName: RabbitMQ.Client.IConnection
  nameWithType: IConnection
- uid: RabbitMQ.Client.IConnection.CallbackExceptionAsync
  name: CallbackExceptionAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CallbackExceptionAsync
  commentId: E:RabbitMQ.Client.IConnection.CallbackExceptionAsync
  fullName: RabbitMQ.Client.IConnection.CallbackExceptionAsync
  nameWithType: IConnection.CallbackExceptionAsync
- uid: RabbitMQ.Client.IConnection.ChannelMax
  name: ChannelMax
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ChannelMax
  commentId: P:RabbitMQ.Client.IConnection.ChannelMax
  fullName: RabbitMQ.Client.IConnection.ChannelMax
  nameWithType: IConnection.ChannelMax
- uid: RabbitMQ.Client.IConnection.ChannelMax*
  name: ChannelMax
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ChannelMax_
  commentId: Overload:RabbitMQ.Client.IConnection.ChannelMax
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.ChannelMax
  nameWithType: IConnection.ChannelMax
- uid: RabbitMQ.Client.IConnection.ClientProperties
  name: ClientProperties
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ClientProperties
  commentId: P:RabbitMQ.Client.IConnection.ClientProperties
  fullName: RabbitMQ.Client.IConnection.ClientProperties
  nameWithType: IConnection.ClientProperties
- uid: RabbitMQ.Client.IConnection.ClientProperties*
  name: ClientProperties
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ClientProperties_
  commentId: Overload:RabbitMQ.Client.IConnection.ClientProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.ClientProperties
  nameWithType: IConnection.ClientProperties
- uid: RabbitMQ.Client.IConnection.ClientProvidedName
  name: ClientProvidedName
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ClientProvidedName
  commentId: P:RabbitMQ.Client.IConnection.ClientProvidedName
  fullName: RabbitMQ.Client.IConnection.ClientProvidedName
  nameWithType: IConnection.ClientProvidedName
- uid: RabbitMQ.Client.IConnection.ClientProvidedName*
  name: ClientProvidedName
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ClientProvidedName_
  commentId: Overload:RabbitMQ.Client.IConnection.ClientProvidedName
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.ClientProvidedName
  nameWithType: IConnection.ClientProvidedName
- uid: RabbitMQ.Client.IConnection.CloseAsync(System.UInt16,System.String,System.TimeSpan,System.Boolean,System.Threading.CancellationToken)
  name: CloseAsync(ushort, string, TimeSpan, bool, CancellationToken)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CloseAsync_System_UInt16_System_String_System_TimeSpan_System_Boolean_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnection.CloseAsync(System.UInt16,System.String,System.TimeSpan,System.Boolean,System.Threading.CancellationToken)
  name.vb: CloseAsync(UShort, String, TimeSpan, Boolean, CancellationToken)
  fullName: RabbitMQ.Client.IConnection.CloseAsync(ushort, string, System.TimeSpan, bool, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IConnection.CloseAsync(UShort, String, System.TimeSpan, Boolean, System.Threading.CancellationToken)
  nameWithType: IConnection.CloseAsync(ushort, string, TimeSpan, bool, CancellationToken)
  nameWithType.vb: IConnection.CloseAsync(UShort, String, TimeSpan, Boolean, CancellationToken)
- uid: RabbitMQ.Client.IConnection.CloseAsync*
  name: CloseAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CloseAsync_
  commentId: Overload:RabbitMQ.Client.IConnection.CloseAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.CloseAsync
  nameWithType: IConnection.CloseAsync
- uid: RabbitMQ.Client.IConnection.CloseReason
  name: CloseReason
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CloseReason
  commentId: P:RabbitMQ.Client.IConnection.CloseReason
  fullName: RabbitMQ.Client.IConnection.CloseReason
  nameWithType: IConnection.CloseReason
- uid: RabbitMQ.Client.IConnection.CloseReason*
  name: CloseReason
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CloseReason_
  commentId: Overload:RabbitMQ.Client.IConnection.CloseReason
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.CloseReason
  nameWithType: IConnection.CloseReason
- uid: RabbitMQ.Client.IConnection.ConnectionBlockedAsync
  name: ConnectionBlockedAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ConnectionBlockedAsync
  commentId: E:RabbitMQ.Client.IConnection.ConnectionBlockedAsync
  fullName: RabbitMQ.Client.IConnection.ConnectionBlockedAsync
  nameWithType: IConnection.ConnectionBlockedAsync
- uid: RabbitMQ.Client.IConnection.ConnectionRecoveryErrorAsync
  name: ConnectionRecoveryErrorAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ConnectionRecoveryErrorAsync
  commentId: E:RabbitMQ.Client.IConnection.ConnectionRecoveryErrorAsync
  fullName: RabbitMQ.Client.IConnection.ConnectionRecoveryErrorAsync
  nameWithType: IConnection.ConnectionRecoveryErrorAsync
- uid: RabbitMQ.Client.IConnection.ConnectionShutdownAsync
  name: ConnectionShutdownAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ConnectionShutdownAsync
  commentId: E:RabbitMQ.Client.IConnection.ConnectionShutdownAsync
  fullName: RabbitMQ.Client.IConnection.ConnectionShutdownAsync
  nameWithType: IConnection.ConnectionShutdownAsync
- uid: RabbitMQ.Client.IConnection.ConnectionUnblockedAsync
  name: ConnectionUnblockedAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ConnectionUnblockedAsync
  commentId: E:RabbitMQ.Client.IConnection.ConnectionUnblockedAsync
  fullName: RabbitMQ.Client.IConnection.ConnectionUnblockedAsync
  nameWithType: IConnection.ConnectionUnblockedAsync
- uid: RabbitMQ.Client.IConnection.ConsumerTagChangeAfterRecoveryAsync
  name: ConsumerTagChangeAfterRecoveryAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ConsumerTagChangeAfterRecoveryAsync
  commentId: E:RabbitMQ.Client.IConnection.ConsumerTagChangeAfterRecoveryAsync
  fullName: RabbitMQ.Client.IConnection.ConsumerTagChangeAfterRecoveryAsync
  nameWithType: IConnection.ConsumerTagChangeAfterRecoveryAsync
- uid: RabbitMQ.Client.IConnection.CreateChannelAsync(RabbitMQ.Client.CreateChannelOptions,System.Threading.CancellationToken)
  name: CreateChannelAsync(CreateChannelOptions?, CancellationToken)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CreateChannelAsync_RabbitMQ_Client_CreateChannelOptions_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnection.CreateChannelAsync(RabbitMQ.Client.CreateChannelOptions,System.Threading.CancellationToken)
  name.vb: CreateChannelAsync(CreateChannelOptions, CancellationToken)
  fullName: RabbitMQ.Client.IConnection.CreateChannelAsync(RabbitMQ.Client.CreateChannelOptions?, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IConnection.CreateChannelAsync(RabbitMQ.Client.CreateChannelOptions, System.Threading.CancellationToken)
  nameWithType: IConnection.CreateChannelAsync(CreateChannelOptions?, CancellationToken)
  nameWithType.vb: IConnection.CreateChannelAsync(CreateChannelOptions, CancellationToken)
- uid: RabbitMQ.Client.IConnection.CreateChannelAsync*
  name: CreateChannelAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_CreateChannelAsync_
  commentId: Overload:RabbitMQ.Client.IConnection.CreateChannelAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.CreateChannelAsync
  nameWithType: IConnection.CreateChannelAsync
- uid: RabbitMQ.Client.IConnection.Endpoint
  name: Endpoint
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Endpoint
  commentId: P:RabbitMQ.Client.IConnection.Endpoint
  fullName: RabbitMQ.Client.IConnection.Endpoint
  nameWithType: IConnection.Endpoint
- uid: RabbitMQ.Client.IConnection.Endpoint*
  name: Endpoint
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Endpoint_
  commentId: Overload:RabbitMQ.Client.IConnection.Endpoint
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.Endpoint
  nameWithType: IConnection.Endpoint
- uid: RabbitMQ.Client.IConnection.FrameMax
  name: FrameMax
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_FrameMax
  commentId: P:RabbitMQ.Client.IConnection.FrameMax
  fullName: RabbitMQ.Client.IConnection.FrameMax
  nameWithType: IConnection.FrameMax
- uid: RabbitMQ.Client.IConnection.FrameMax*
  name: FrameMax
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_FrameMax_
  commentId: Overload:RabbitMQ.Client.IConnection.FrameMax
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.FrameMax
  nameWithType: IConnection.FrameMax
- uid: RabbitMQ.Client.IConnection.Heartbeat
  name: Heartbeat
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Heartbeat
  commentId: P:RabbitMQ.Client.IConnection.Heartbeat
  fullName: RabbitMQ.Client.IConnection.Heartbeat
  nameWithType: IConnection.Heartbeat
- uid: RabbitMQ.Client.IConnection.Heartbeat*
  name: Heartbeat
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Heartbeat_
  commentId: Overload:RabbitMQ.Client.IConnection.Heartbeat
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.Heartbeat
  nameWithType: IConnection.Heartbeat
- uid: RabbitMQ.Client.IConnection.IsOpen
  name: IsOpen
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_IsOpen
  commentId: P:RabbitMQ.Client.IConnection.IsOpen
  fullName: RabbitMQ.Client.IConnection.IsOpen
  nameWithType: IConnection.IsOpen
- uid: RabbitMQ.Client.IConnection.IsOpen*
  name: IsOpen
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_IsOpen_
  commentId: Overload:RabbitMQ.Client.IConnection.IsOpen
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.IsOpen
  nameWithType: IConnection.IsOpen
- uid: RabbitMQ.Client.IConnection.Protocol
  name: Protocol
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Protocol
  commentId: P:RabbitMQ.Client.IConnection.Protocol
  fullName: RabbitMQ.Client.IConnection.Protocol
  nameWithType: IConnection.Protocol
- uid: RabbitMQ.Client.IConnection.Protocol*
  name: Protocol
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_Protocol_
  commentId: Overload:RabbitMQ.Client.IConnection.Protocol
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.Protocol
  nameWithType: IConnection.Protocol
- uid: RabbitMQ.Client.IConnection.QueueNameChangedAfterRecoveryAsync
  name: QueueNameChangedAfterRecoveryAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_QueueNameChangedAfterRecoveryAsync
  commentId: E:RabbitMQ.Client.IConnection.QueueNameChangedAfterRecoveryAsync
  fullName: RabbitMQ.Client.IConnection.QueueNameChangedAfterRecoveryAsync
  nameWithType: IConnection.QueueNameChangedAfterRecoveryAsync
- uid: RabbitMQ.Client.IConnection.RecoveringConsumerAsync
  name: RecoveringConsumerAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_RecoveringConsumerAsync
  commentId: E:RabbitMQ.Client.IConnection.RecoveringConsumerAsync
  fullName: RabbitMQ.Client.IConnection.RecoveringConsumerAsync
  nameWithType: IConnection.RecoveringConsumerAsync
- uid: RabbitMQ.Client.IConnection.RecoverySucceededAsync
  name: RecoverySucceededAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_RecoverySucceededAsync
  commentId: E:RabbitMQ.Client.IConnection.RecoverySucceededAsync
  fullName: RabbitMQ.Client.IConnection.RecoverySucceededAsync
  nameWithType: IConnection.RecoverySucceededAsync
- uid: RabbitMQ.Client.IConnection.ServerProperties
  name: ServerProperties
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ServerProperties
  commentId: P:RabbitMQ.Client.IConnection.ServerProperties
  fullName: RabbitMQ.Client.IConnection.ServerProperties
  nameWithType: IConnection.ServerProperties
- uid: RabbitMQ.Client.IConnection.ServerProperties*
  name: ServerProperties
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ServerProperties_
  commentId: Overload:RabbitMQ.Client.IConnection.ServerProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.ServerProperties
  nameWithType: IConnection.ServerProperties
- uid: RabbitMQ.Client.IConnection.ShutdownReport
  name: ShutdownReport
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ShutdownReport
  commentId: P:RabbitMQ.Client.IConnection.ShutdownReport
  fullName: RabbitMQ.Client.IConnection.ShutdownReport
  nameWithType: IConnection.ShutdownReport
- uid: RabbitMQ.Client.IConnection.ShutdownReport*
  name: ShutdownReport
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_ShutdownReport_
  commentId: Overload:RabbitMQ.Client.IConnection.ShutdownReport
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.ShutdownReport
  nameWithType: IConnection.ShutdownReport
- uid: RabbitMQ.Client.IConnection.UpdateSecretAsync(System.String,System.String,System.Threading.CancellationToken)
  name: UpdateSecretAsync(string, string, CancellationToken)
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_UpdateSecretAsync_System_String_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnection.UpdateSecretAsync(System.String,System.String,System.Threading.CancellationToken)
  name.vb: UpdateSecretAsync(String, String, CancellationToken)
  fullName: RabbitMQ.Client.IConnection.UpdateSecretAsync(string, string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IConnection.UpdateSecretAsync(String, String, System.Threading.CancellationToken)
  nameWithType: IConnection.UpdateSecretAsync(string, string, CancellationToken)
  nameWithType.vb: IConnection.UpdateSecretAsync(String, String, CancellationToken)
- uid: RabbitMQ.Client.IConnection.UpdateSecretAsync*
  name: UpdateSecretAsync
  href: api/RabbitMQ.Client.IConnection.html#RabbitMQ_Client_IConnection_UpdateSecretAsync_
  commentId: Overload:RabbitMQ.Client.IConnection.UpdateSecretAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnection.UpdateSecretAsync
  nameWithType: IConnection.UpdateSecretAsync
- uid: RabbitMQ.Client.IConnectionExtensions
  name: IConnectionExtensions
  href: api/RabbitMQ.Client.IConnectionExtensions.html
  commentId: T:RabbitMQ.Client.IConnectionExtensions
  fullName: RabbitMQ.Client.IConnectionExtensions
  nameWithType: IConnectionExtensions
- uid: RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection)
  name: AbortAsync(IConnection)
  href: api/RabbitMQ.Client.IConnectionExtensions.html#RabbitMQ_Client_IConnectionExtensions_AbortAsync_RabbitMQ_Client_IConnection_
  commentId: M:RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection)
  fullName: RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection)
  nameWithType: IConnectionExtensions.AbortAsync(IConnection)
- uid: RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection,System.TimeSpan)
  name: AbortAsync(IConnection, TimeSpan)
  href: api/RabbitMQ.Client.IConnectionExtensions.html#RabbitMQ_Client_IConnectionExtensions_AbortAsync_RabbitMQ_Client_IConnection_System_TimeSpan_
  commentId: M:RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection,System.TimeSpan)
  fullName: RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection, System.TimeSpan)
  nameWithType: IConnectionExtensions.AbortAsync(IConnection, TimeSpan)
- uid: RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection,System.UInt16,System.String)
  name: AbortAsync(IConnection, ushort, string)
  href: api/RabbitMQ.Client.IConnectionExtensions.html#RabbitMQ_Client_IConnectionExtensions_AbortAsync_RabbitMQ_Client_IConnection_System_UInt16_System_String_
  commentId: M:RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection,System.UInt16,System.String)
  name.vb: AbortAsync(IConnection, UShort, String)
  fullName: RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection, ushort, string)
  fullName.vb: RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection, UShort, String)
  nameWithType: IConnectionExtensions.AbortAsync(IConnection, ushort, string)
  nameWithType.vb: IConnectionExtensions.AbortAsync(IConnection, UShort, String)
- uid: RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection,System.UInt16,System.String,System.TimeSpan)
  name: AbortAsync(IConnection, ushort, string, TimeSpan)
  href: api/RabbitMQ.Client.IConnectionExtensions.html#RabbitMQ_Client_IConnectionExtensions_AbortAsync_RabbitMQ_Client_IConnection_System_UInt16_System_String_System_TimeSpan_
  commentId: M:RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection,System.UInt16,System.String,System.TimeSpan)
  name.vb: AbortAsync(IConnection, UShort, String, TimeSpan)
  fullName: RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection, ushort, string, System.TimeSpan)
  fullName.vb: RabbitMQ.Client.IConnectionExtensions.AbortAsync(RabbitMQ.Client.IConnection, UShort, String, System.TimeSpan)
  nameWithType: IConnectionExtensions.AbortAsync(IConnection, ushort, string, TimeSpan)
  nameWithType.vb: IConnectionExtensions.AbortAsync(IConnection, UShort, String, TimeSpan)
- uid: RabbitMQ.Client.IConnectionExtensions.AbortAsync*
  name: AbortAsync
  href: api/RabbitMQ.Client.IConnectionExtensions.html#RabbitMQ_Client_IConnectionExtensions_AbortAsync_
  commentId: Overload:RabbitMQ.Client.IConnectionExtensions.AbortAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionExtensions.AbortAsync
  nameWithType: IConnectionExtensions.AbortAsync
- uid: RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection,System.Threading.CancellationToken)
  name: CloseAsync(IConnection, CancellationToken)
  href: api/RabbitMQ.Client.IConnectionExtensions.html#RabbitMQ_Client_IConnectionExtensions_CloseAsync_RabbitMQ_Client_IConnection_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection,System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection, System.Threading.CancellationToken)
  nameWithType: IConnectionExtensions.CloseAsync(IConnection, CancellationToken)
- uid: RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection,System.TimeSpan)
  name: CloseAsync(IConnection, TimeSpan)
  href: api/RabbitMQ.Client.IConnectionExtensions.html#RabbitMQ_Client_IConnectionExtensions_CloseAsync_RabbitMQ_Client_IConnection_System_TimeSpan_
  commentId: M:RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection,System.TimeSpan)
  fullName: RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection, System.TimeSpan)
  nameWithType: IConnectionExtensions.CloseAsync(IConnection, TimeSpan)
- uid: RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection,System.UInt16,System.String,System.Threading.CancellationToken)
  name: CloseAsync(IConnection, ushort, string, CancellationToken)
  href: api/RabbitMQ.Client.IConnectionExtensions.html#RabbitMQ_Client_IConnectionExtensions_CloseAsync_RabbitMQ_Client_IConnection_System_UInt16_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection,System.UInt16,System.String,System.Threading.CancellationToken)
  name.vb: CloseAsync(IConnection, UShort, String, CancellationToken)
  fullName: RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection, ushort, string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection, UShort, String, System.Threading.CancellationToken)
  nameWithType: IConnectionExtensions.CloseAsync(IConnection, ushort, string, CancellationToken)
  nameWithType.vb: IConnectionExtensions.CloseAsync(IConnection, UShort, String, CancellationToken)
- uid: RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection,System.UInt16,System.String,System.TimeSpan)
  name: CloseAsync(IConnection, ushort, string, TimeSpan)
  href: api/RabbitMQ.Client.IConnectionExtensions.html#RabbitMQ_Client_IConnectionExtensions_CloseAsync_RabbitMQ_Client_IConnection_System_UInt16_System_String_System_TimeSpan_
  commentId: M:RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection,System.UInt16,System.String,System.TimeSpan)
  name.vb: CloseAsync(IConnection, UShort, String, TimeSpan)
  fullName: RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection, ushort, string, System.TimeSpan)
  fullName.vb: RabbitMQ.Client.IConnectionExtensions.CloseAsync(RabbitMQ.Client.IConnection, UShort, String, System.TimeSpan)
  nameWithType: IConnectionExtensions.CloseAsync(IConnection, ushort, string, TimeSpan)
  nameWithType.vb: IConnectionExtensions.CloseAsync(IConnection, UShort, String, TimeSpan)
- uid: RabbitMQ.Client.IConnectionExtensions.CloseAsync*
  name: CloseAsync
  href: api/RabbitMQ.Client.IConnectionExtensions.html#RabbitMQ_Client_IConnectionExtensions_CloseAsync_
  commentId: Overload:RabbitMQ.Client.IConnectionExtensions.CloseAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionExtensions.CloseAsync
  nameWithType: IConnectionExtensions.CloseAsync
- uid: RabbitMQ.Client.IConnectionFactory
  name: IConnectionFactory
  href: api/RabbitMQ.Client.IConnectionFactory.html
  commentId: T:RabbitMQ.Client.IConnectionFactory
  fullName: RabbitMQ.Client.IConnectionFactory
  nameWithType: IConnectionFactory
- uid: RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IEnumerable{System.String})
  name: AuthMechanismFactory(IEnumerable<string>)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_AuthMechanismFactory_System_Collections_Generic_IEnumerable_System_String__
  commentId: M:RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IEnumerable{System.String})
  name.vb: AuthMechanismFactory(IEnumerable(Of String))
  fullName: RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IEnumerable<string>)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory(System.Collections.Generic.IEnumerable(Of String))
  nameWithType: IConnectionFactory.AuthMechanismFactory(IEnumerable<string>)
  nameWithType.vb: IConnectionFactory.AuthMechanismFactory(IEnumerable(Of String))
- uid: RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory*
  name: AuthMechanismFactory
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_AuthMechanismFactory_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.AuthMechanismFactory
  nameWithType: IConnectionFactory.AuthMechanismFactory
- uid: RabbitMQ.Client.IConnectionFactory.ClientProperties
  name: ClientProperties
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ClientProperties
  commentId: P:RabbitMQ.Client.IConnectionFactory.ClientProperties
  fullName: RabbitMQ.Client.IConnectionFactory.ClientProperties
  nameWithType: IConnectionFactory.ClientProperties
- uid: RabbitMQ.Client.IConnectionFactory.ClientProperties*
  name: ClientProperties
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ClientProperties_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.ClientProperties
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.ClientProperties
  nameWithType: IConnectionFactory.ClientProperties
- uid: RabbitMQ.Client.IConnectionFactory.ClientProvidedName
  name: ClientProvidedName
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ClientProvidedName
  commentId: P:RabbitMQ.Client.IConnectionFactory.ClientProvidedName
  fullName: RabbitMQ.Client.IConnectionFactory.ClientProvidedName
  nameWithType: IConnectionFactory.ClientProvidedName
- uid: RabbitMQ.Client.IConnectionFactory.ClientProvidedName*
  name: ClientProvidedName
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ClientProvidedName_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.ClientProvidedName
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.ClientProvidedName
  nameWithType: IConnectionFactory.ClientProvidedName
- uid: RabbitMQ.Client.IConnectionFactory.ConsumerDispatchConcurrency
  name: ConsumerDispatchConcurrency
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ConsumerDispatchConcurrency
  commentId: P:RabbitMQ.Client.IConnectionFactory.ConsumerDispatchConcurrency
  fullName: RabbitMQ.Client.IConnectionFactory.ConsumerDispatchConcurrency
  nameWithType: IConnectionFactory.ConsumerDispatchConcurrency
- uid: RabbitMQ.Client.IConnectionFactory.ConsumerDispatchConcurrency*
  name: ConsumerDispatchConcurrency
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ConsumerDispatchConcurrency_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.ConsumerDispatchConcurrency
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.ConsumerDispatchConcurrency
  nameWithType: IConnectionFactory.ConsumerDispatchConcurrency
- uid: RabbitMQ.Client.IConnectionFactory.ContinuationTimeout
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ContinuationTimeout
  commentId: P:RabbitMQ.Client.IConnectionFactory.ContinuationTimeout
  fullName: RabbitMQ.Client.IConnectionFactory.ContinuationTimeout
  nameWithType: IConnectionFactory.ContinuationTimeout
- uid: RabbitMQ.Client.IConnectionFactory.ContinuationTimeout*
  name: ContinuationTimeout
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_ContinuationTimeout_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.ContinuationTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.ContinuationTimeout
  nameWithType: IConnectionFactory.ContinuationTimeout
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint},System.String,System.Threading.CancellationToken)
  name: CreateConnectionAsync(IEnumerable<AmqpTcpEndpoint>, string, CancellationToken)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnectionAsync_System_Collections_Generic_IEnumerable_RabbitMQ_Client_AmqpTcpEndpoint__System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint},System.String,System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(IEnumerable(Of AmqpTcpEndpoint), String, CancellationToken)
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable<RabbitMQ.Client.AmqpTcpEndpoint>, string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable(Of RabbitMQ.Client.AmqpTcpEndpoint), String, System.Threading.CancellationToken)
  nameWithType: IConnectionFactory.CreateConnectionAsync(IEnumerable<AmqpTcpEndpoint>, string, CancellationToken)
  nameWithType.vb: IConnectionFactory.CreateConnectionAsync(IEnumerable(Of AmqpTcpEndpoint), String, CancellationToken)
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint},System.Threading.CancellationToken)
  name: CreateConnectionAsync(IEnumerable<AmqpTcpEndpoint>, CancellationToken)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnectionAsync_System_Collections_Generic_IEnumerable_RabbitMQ_Client_AmqpTcpEndpoint__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{RabbitMQ.Client.AmqpTcpEndpoint},System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(IEnumerable(Of AmqpTcpEndpoint), CancellationToken)
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable<RabbitMQ.Client.AmqpTcpEndpoint>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable(Of RabbitMQ.Client.AmqpTcpEndpoint), System.Threading.CancellationToken)
  nameWithType: IConnectionFactory.CreateConnectionAsync(IEnumerable<AmqpTcpEndpoint>, CancellationToken)
  nameWithType.vb: IConnectionFactory.CreateConnectionAsync(IEnumerable(Of AmqpTcpEndpoint), CancellationToken)
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)
  name: CreateConnectionAsync(IEnumerable<string>, string, CancellationToken)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnectionAsync_System_Collections_Generic_IEnumerable_System_String__System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(IEnumerable(Of String), String, CancellationToken)
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable<string>, string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable(Of String), String, System.Threading.CancellationToken)
  nameWithType: IConnectionFactory.CreateConnectionAsync(IEnumerable<string>, string, CancellationToken)
  nameWithType.vb: IConnectionFactory.CreateConnectionAsync(IEnumerable(Of String), String, CancellationToken)
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: CreateConnectionAsync(IEnumerable<string>, CancellationToken)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnectionAsync_System_Collections_Generic_IEnumerable_System_String__System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(IEnumerable(Of String), CancellationToken)
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable<string>, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Collections.Generic.IEnumerable(Of String), System.Threading.CancellationToken)
  nameWithType: IConnectionFactory.CreateConnectionAsync(IEnumerable<string>, CancellationToken)
  nameWithType.vb: IConnectionFactory.CreateConnectionAsync(IEnumerable(Of String), CancellationToken)
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.String,System.Threading.CancellationToken)
  name: CreateConnectionAsync(string, CancellationToken)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnectionAsync_System_String_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.String,System.Threading.CancellationToken)
  name.vb: CreateConnectionAsync(String, CancellationToken)
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(string, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(String, System.Threading.CancellationToken)
  nameWithType: IConnectionFactory.CreateConnectionAsync(string, CancellationToken)
  nameWithType.vb: IConnectionFactory.CreateConnectionAsync(String, CancellationToken)
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Threading.CancellationToken)
  name: CreateConnectionAsync(CancellationToken)
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnectionAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync(System.Threading.CancellationToken)
  nameWithType: IConnectionFactory.CreateConnectionAsync(CancellationToken)
- uid: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync*
  name: CreateConnectionAsync
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CreateConnectionAsync_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.CreateConnectionAsync
  nameWithType: IConnectionFactory.CreateConnectionAsync
- uid: RabbitMQ.Client.IConnectionFactory.CredentialsProvider
  name: CredentialsProvider
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CredentialsProvider
  commentId: P:RabbitMQ.Client.IConnectionFactory.CredentialsProvider
  fullName: RabbitMQ.Client.IConnectionFactory.CredentialsProvider
  nameWithType: IConnectionFactory.CredentialsProvider
- uid: RabbitMQ.Client.IConnectionFactory.CredentialsProvider*
  name: CredentialsProvider
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_CredentialsProvider_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.CredentialsProvider
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.CredentialsProvider
  nameWithType: IConnectionFactory.CredentialsProvider
- uid: RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout
  name: HandshakeContinuationTimeout
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_HandshakeContinuationTimeout
  commentId: P:RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout
  fullName: RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout
  nameWithType: IConnectionFactory.HandshakeContinuationTimeout
- uid: RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout*
  name: HandshakeContinuationTimeout
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_HandshakeContinuationTimeout_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.HandshakeContinuationTimeout
  nameWithType: IConnectionFactory.HandshakeContinuationTimeout
- uid: RabbitMQ.Client.IConnectionFactory.Password
  name: Password
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_Password
  commentId: P:RabbitMQ.Client.IConnectionFactory.Password
  fullName: RabbitMQ.Client.IConnectionFactory.Password
  nameWithType: IConnectionFactory.Password
- uid: RabbitMQ.Client.IConnectionFactory.Password*
  name: Password
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_Password_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.Password
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.Password
  nameWithType: IConnectionFactory.Password
- uid: RabbitMQ.Client.IConnectionFactory.RequestedChannelMax
  name: RequestedChannelMax
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedChannelMax
  commentId: P:RabbitMQ.Client.IConnectionFactory.RequestedChannelMax
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedChannelMax
  nameWithType: IConnectionFactory.RequestedChannelMax
- uid: RabbitMQ.Client.IConnectionFactory.RequestedChannelMax*
  name: RequestedChannelMax
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedChannelMax_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.RequestedChannelMax
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedChannelMax
  nameWithType: IConnectionFactory.RequestedChannelMax
- uid: RabbitMQ.Client.IConnectionFactory.RequestedFrameMax
  name: RequestedFrameMax
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedFrameMax
  commentId: P:RabbitMQ.Client.IConnectionFactory.RequestedFrameMax
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedFrameMax
  nameWithType: IConnectionFactory.RequestedFrameMax
- uid: RabbitMQ.Client.IConnectionFactory.RequestedFrameMax*
  name: RequestedFrameMax
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedFrameMax_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.RequestedFrameMax
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedFrameMax
  nameWithType: IConnectionFactory.RequestedFrameMax
- uid: RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat
  name: RequestedHeartbeat
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedHeartbeat
  commentId: P:RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat
  nameWithType: IConnectionFactory.RequestedHeartbeat
- uid: RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat*
  name: RequestedHeartbeat
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_RequestedHeartbeat_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.RequestedHeartbeat
  nameWithType: IConnectionFactory.RequestedHeartbeat
- uid: RabbitMQ.Client.IConnectionFactory.Uri
  name: Uri
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_Uri
  commentId: P:RabbitMQ.Client.IConnectionFactory.Uri
  fullName: RabbitMQ.Client.IConnectionFactory.Uri
  nameWithType: IConnectionFactory.Uri
- uid: RabbitMQ.Client.IConnectionFactory.Uri*
  name: Uri
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_Uri_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.Uri
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.Uri
  nameWithType: IConnectionFactory.Uri
- uid: RabbitMQ.Client.IConnectionFactory.UserName
  name: UserName
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_UserName
  commentId: P:RabbitMQ.Client.IConnectionFactory.UserName
  fullName: RabbitMQ.Client.IConnectionFactory.UserName
  nameWithType: IConnectionFactory.UserName
- uid: RabbitMQ.Client.IConnectionFactory.UserName*
  name: UserName
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_UserName_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.UserName
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.UserName
  nameWithType: IConnectionFactory.UserName
- uid: RabbitMQ.Client.IConnectionFactory.VirtualHost
  name: VirtualHost
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_VirtualHost
  commentId: P:RabbitMQ.Client.IConnectionFactory.VirtualHost
  fullName: RabbitMQ.Client.IConnectionFactory.VirtualHost
  nameWithType: IConnectionFactory.VirtualHost
- uid: RabbitMQ.Client.IConnectionFactory.VirtualHost*
  name: VirtualHost
  href: api/RabbitMQ.Client.IConnectionFactory.html#RabbitMQ_Client_IConnectionFactory_VirtualHost_
  commentId: Overload:RabbitMQ.Client.IConnectionFactory.VirtualHost
  isSpec: "True"
  fullName: RabbitMQ.Client.IConnectionFactory.VirtualHost
  nameWithType: IConnectionFactory.VirtualHost
- uid: RabbitMQ.Client.ICredentialsProvider
  name: ICredentialsProvider
  href: api/RabbitMQ.Client.ICredentialsProvider.html
  commentId: T:RabbitMQ.Client.ICredentialsProvider
  fullName: RabbitMQ.Client.ICredentialsProvider
  nameWithType: ICredentialsProvider
- uid: RabbitMQ.Client.ICredentialsProvider.GetCredentialsAsync(System.Threading.CancellationToken)
  name: GetCredentialsAsync(CancellationToken)
  href: api/RabbitMQ.Client.ICredentialsProvider.html#RabbitMQ_Client_ICredentialsProvider_GetCredentialsAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ICredentialsProvider.GetCredentialsAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.ICredentialsProvider.GetCredentialsAsync(System.Threading.CancellationToken)
  nameWithType: ICredentialsProvider.GetCredentialsAsync(CancellationToken)
- uid: RabbitMQ.Client.ICredentialsProvider.GetCredentialsAsync*
  name: GetCredentialsAsync
  href: api/RabbitMQ.Client.ICredentialsProvider.html#RabbitMQ_Client_ICredentialsProvider_GetCredentialsAsync_
  commentId: Overload:RabbitMQ.Client.ICredentialsProvider.GetCredentialsAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.ICredentialsProvider.GetCredentialsAsync
  nameWithType: ICredentialsProvider.GetCredentialsAsync
- uid: RabbitMQ.Client.ICredentialsProvider.Name
  name: Name
  href: api/RabbitMQ.Client.ICredentialsProvider.html#RabbitMQ_Client_ICredentialsProvider_Name
  commentId: P:RabbitMQ.Client.ICredentialsProvider.Name
  fullName: RabbitMQ.Client.ICredentialsProvider.Name
  nameWithType: ICredentialsProvider.Name
- uid: RabbitMQ.Client.ICredentialsProvider.Name*
  name: Name
  href: api/RabbitMQ.Client.ICredentialsProvider.html#RabbitMQ_Client_ICredentialsProvider_Name_
  commentId: Overload:RabbitMQ.Client.ICredentialsProvider.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.ICredentialsProvider.Name
  nameWithType: ICredentialsProvider.Name
- uid: RabbitMQ.Client.IEndpointResolver
  name: IEndpointResolver
  href: api/RabbitMQ.Client.IEndpointResolver.html
  commentId: T:RabbitMQ.Client.IEndpointResolver
  fullName: RabbitMQ.Client.IEndpointResolver
  nameWithType: IEndpointResolver
- uid: RabbitMQ.Client.IEndpointResolver.All
  name: All()
  href: api/RabbitMQ.Client.IEndpointResolver.html#RabbitMQ_Client_IEndpointResolver_All
  commentId: M:RabbitMQ.Client.IEndpointResolver.All
  fullName: RabbitMQ.Client.IEndpointResolver.All()
  nameWithType: IEndpointResolver.All()
- uid: RabbitMQ.Client.IEndpointResolver.All*
  name: All
  href: api/RabbitMQ.Client.IEndpointResolver.html#RabbitMQ_Client_IEndpointResolver_All_
  commentId: Overload:RabbitMQ.Client.IEndpointResolver.All
  isSpec: "True"
  fullName: RabbitMQ.Client.IEndpointResolver.All
  nameWithType: IEndpointResolver.All
- uid: RabbitMQ.Client.INetworkConnection
  name: INetworkConnection
  href: api/RabbitMQ.Client.INetworkConnection.html
  commentId: T:RabbitMQ.Client.INetworkConnection
  fullName: RabbitMQ.Client.INetworkConnection
  nameWithType: INetworkConnection
- uid: RabbitMQ.Client.INetworkConnection.LocalPort
  name: LocalPort
  href: api/RabbitMQ.Client.INetworkConnection.html#RabbitMQ_Client_INetworkConnection_LocalPort
  commentId: P:RabbitMQ.Client.INetworkConnection.LocalPort
  fullName: RabbitMQ.Client.INetworkConnection.LocalPort
  nameWithType: INetworkConnection.LocalPort
- uid: RabbitMQ.Client.INetworkConnection.LocalPort*
  name: LocalPort
  href: api/RabbitMQ.Client.INetworkConnection.html#RabbitMQ_Client_INetworkConnection_LocalPort_
  commentId: Overload:RabbitMQ.Client.INetworkConnection.LocalPort
  isSpec: "True"
  fullName: RabbitMQ.Client.INetworkConnection.LocalPort
  nameWithType: INetworkConnection.LocalPort
- uid: RabbitMQ.Client.INetworkConnection.RemotePort
  name: RemotePort
  href: api/RabbitMQ.Client.INetworkConnection.html#RabbitMQ_Client_INetworkConnection_RemotePort
  commentId: P:RabbitMQ.Client.INetworkConnection.RemotePort
  fullName: RabbitMQ.Client.INetworkConnection.RemotePort
  nameWithType: INetworkConnection.RemotePort
- uid: RabbitMQ.Client.INetworkConnection.RemotePort*
  name: RemotePort
  href: api/RabbitMQ.Client.INetworkConnection.html#RabbitMQ_Client_INetworkConnection_RemotePort_
  commentId: Overload:RabbitMQ.Client.INetworkConnection.RemotePort
  isSpec: "True"
  fullName: RabbitMQ.Client.INetworkConnection.RemotePort
  nameWithType: INetworkConnection.RemotePort
- uid: RabbitMQ.Client.IProtocol
  name: IProtocol
  href: api/RabbitMQ.Client.IProtocol.html
  commentId: T:RabbitMQ.Client.IProtocol
  fullName: RabbitMQ.Client.IProtocol
  nameWithType: IProtocol
- uid: RabbitMQ.Client.IProtocol.ApiName
  name: ApiName
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_ApiName
  commentId: P:RabbitMQ.Client.IProtocol.ApiName
  fullName: RabbitMQ.Client.IProtocol.ApiName
  nameWithType: IProtocol.ApiName
- uid: RabbitMQ.Client.IProtocol.ApiName*
  name: ApiName
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_ApiName_
  commentId: Overload:RabbitMQ.Client.IProtocol.ApiName
  isSpec: "True"
  fullName: RabbitMQ.Client.IProtocol.ApiName
  nameWithType: IProtocol.ApiName
- uid: RabbitMQ.Client.IProtocol.DefaultPort
  name: DefaultPort
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_DefaultPort
  commentId: P:RabbitMQ.Client.IProtocol.DefaultPort
  fullName: RabbitMQ.Client.IProtocol.DefaultPort
  nameWithType: IProtocol.DefaultPort
- uid: RabbitMQ.Client.IProtocol.DefaultPort*
  name: DefaultPort
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_DefaultPort_
  commentId: Overload:RabbitMQ.Client.IProtocol.DefaultPort
  isSpec: "True"
  fullName: RabbitMQ.Client.IProtocol.DefaultPort
  nameWithType: IProtocol.DefaultPort
- uid: RabbitMQ.Client.IProtocol.MajorVersion
  name: MajorVersion
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_MajorVersion
  commentId: P:RabbitMQ.Client.IProtocol.MajorVersion
  fullName: RabbitMQ.Client.IProtocol.MajorVersion
  nameWithType: IProtocol.MajorVersion
- uid: RabbitMQ.Client.IProtocol.MajorVersion*
  name: MajorVersion
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_MajorVersion_
  commentId: Overload:RabbitMQ.Client.IProtocol.MajorVersion
  isSpec: "True"
  fullName: RabbitMQ.Client.IProtocol.MajorVersion
  nameWithType: IProtocol.MajorVersion
- uid: RabbitMQ.Client.IProtocol.MinorVersion
  name: MinorVersion
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_MinorVersion
  commentId: P:RabbitMQ.Client.IProtocol.MinorVersion
  fullName: RabbitMQ.Client.IProtocol.MinorVersion
  nameWithType: IProtocol.MinorVersion
- uid: RabbitMQ.Client.IProtocol.MinorVersion*
  name: MinorVersion
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_MinorVersion_
  commentId: Overload:RabbitMQ.Client.IProtocol.MinorVersion
  isSpec: "True"
  fullName: RabbitMQ.Client.IProtocol.MinorVersion
  nameWithType: IProtocol.MinorVersion
- uid: RabbitMQ.Client.IProtocol.Revision
  name: Revision
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_Revision
  commentId: P:RabbitMQ.Client.IProtocol.Revision
  fullName: RabbitMQ.Client.IProtocol.Revision
  nameWithType: IProtocol.Revision
- uid: RabbitMQ.Client.IProtocol.Revision*
  name: Revision
  href: api/RabbitMQ.Client.IProtocol.html#RabbitMQ_Client_IProtocol_Revision_
  commentId: Overload:RabbitMQ.Client.IProtocol.Revision
  isSpec: "True"
  fullName: RabbitMQ.Client.IProtocol.Revision
  nameWithType: IProtocol.Revision
- uid: RabbitMQ.Client.IReadOnlyBasicProperties
  name: IReadOnlyBasicProperties
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html
  commentId: T:RabbitMQ.Client.IReadOnlyBasicProperties
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties
  nameWithType: IReadOnlyBasicProperties
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.AppId
  name: AppId
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_AppId
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.AppId
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.AppId
  nameWithType: IReadOnlyBasicProperties.AppId
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.AppId*
  name: AppId
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_AppId_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.AppId
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.AppId
  nameWithType: IReadOnlyBasicProperties.AppId
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.ClusterId
  name: ClusterId
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_ClusterId
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.ClusterId
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.ClusterId
  nameWithType: IReadOnlyBasicProperties.ClusterId
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.ClusterId*
  name: ClusterId
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_ClusterId_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.ClusterId
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.ClusterId
  nameWithType: IReadOnlyBasicProperties.ClusterId
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.ContentEncoding
  name: ContentEncoding
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_ContentEncoding
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.ContentEncoding
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.ContentEncoding
  nameWithType: IReadOnlyBasicProperties.ContentEncoding
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.ContentEncoding*
  name: ContentEncoding
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_ContentEncoding_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.ContentEncoding
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.ContentEncoding
  nameWithType: IReadOnlyBasicProperties.ContentEncoding
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.ContentType
  name: ContentType
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_ContentType
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.ContentType
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.ContentType
  nameWithType: IReadOnlyBasicProperties.ContentType
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.ContentType*
  name: ContentType
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_ContentType_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.ContentType
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.ContentType
  nameWithType: IReadOnlyBasicProperties.ContentType
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.CorrelationId
  name: CorrelationId
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_CorrelationId
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.CorrelationId
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.CorrelationId
  nameWithType: IReadOnlyBasicProperties.CorrelationId
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.CorrelationId*
  name: CorrelationId
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_CorrelationId_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.CorrelationId
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.CorrelationId
  nameWithType: IReadOnlyBasicProperties.CorrelationId
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.DeliveryMode
  name: DeliveryMode
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_DeliveryMode
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.DeliveryMode
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.DeliveryMode
  nameWithType: IReadOnlyBasicProperties.DeliveryMode
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.DeliveryMode*
  name: DeliveryMode
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_DeliveryMode_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.DeliveryMode
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.DeliveryMode
  nameWithType: IReadOnlyBasicProperties.DeliveryMode
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Expiration
  name: Expiration
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Expiration
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.Expiration
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Expiration
  nameWithType: IReadOnlyBasicProperties.Expiration
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Expiration*
  name: Expiration
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Expiration_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.Expiration
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Expiration
  nameWithType: IReadOnlyBasicProperties.Expiration
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Headers
  name: Headers
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Headers
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.Headers
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Headers
  nameWithType: IReadOnlyBasicProperties.Headers
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Headers*
  name: Headers
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Headers_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.Headers
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Headers
  nameWithType: IReadOnlyBasicProperties.Headers
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsAppIdPresent
  name: IsAppIdPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsAppIdPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsAppIdPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsAppIdPresent()
  nameWithType: IReadOnlyBasicProperties.IsAppIdPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsAppIdPresent*
  name: IsAppIdPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsAppIdPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsAppIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsAppIdPresent
  nameWithType: IReadOnlyBasicProperties.IsAppIdPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsClusterIdPresent
  name: IsClusterIdPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsClusterIdPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsClusterIdPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsClusterIdPresent()
  nameWithType: IReadOnlyBasicProperties.IsClusterIdPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsClusterIdPresent*
  name: IsClusterIdPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsClusterIdPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsClusterIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsClusterIdPresent
  nameWithType: IReadOnlyBasicProperties.IsClusterIdPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsContentEncodingPresent
  name: IsContentEncodingPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsContentEncodingPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsContentEncodingPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsContentEncodingPresent()
  nameWithType: IReadOnlyBasicProperties.IsContentEncodingPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsContentEncodingPresent*
  name: IsContentEncodingPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsContentEncodingPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsContentEncodingPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsContentEncodingPresent
  nameWithType: IReadOnlyBasicProperties.IsContentEncodingPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsContentTypePresent
  name: IsContentTypePresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsContentTypePresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsContentTypePresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsContentTypePresent()
  nameWithType: IReadOnlyBasicProperties.IsContentTypePresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsContentTypePresent*
  name: IsContentTypePresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsContentTypePresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsContentTypePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsContentTypePresent
  nameWithType: IReadOnlyBasicProperties.IsContentTypePresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsCorrelationIdPresent
  name: IsCorrelationIdPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsCorrelationIdPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsCorrelationIdPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsCorrelationIdPresent()
  nameWithType: IReadOnlyBasicProperties.IsCorrelationIdPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsCorrelationIdPresent*
  name: IsCorrelationIdPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsCorrelationIdPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsCorrelationIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsCorrelationIdPresent
  nameWithType: IReadOnlyBasicProperties.IsCorrelationIdPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsDeliveryModePresent
  name: IsDeliveryModePresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsDeliveryModePresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsDeliveryModePresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsDeliveryModePresent()
  nameWithType: IReadOnlyBasicProperties.IsDeliveryModePresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsDeliveryModePresent*
  name: IsDeliveryModePresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsDeliveryModePresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsDeliveryModePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsDeliveryModePresent
  nameWithType: IReadOnlyBasicProperties.IsDeliveryModePresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsExpirationPresent
  name: IsExpirationPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsExpirationPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsExpirationPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsExpirationPresent()
  nameWithType: IReadOnlyBasicProperties.IsExpirationPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsExpirationPresent*
  name: IsExpirationPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsExpirationPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsExpirationPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsExpirationPresent
  nameWithType: IReadOnlyBasicProperties.IsExpirationPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsHeadersPresent
  name: IsHeadersPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsHeadersPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsHeadersPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsHeadersPresent()
  nameWithType: IReadOnlyBasicProperties.IsHeadersPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsHeadersPresent*
  name: IsHeadersPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsHeadersPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsHeadersPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsHeadersPresent
  nameWithType: IReadOnlyBasicProperties.IsHeadersPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsMessageIdPresent
  name: IsMessageIdPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsMessageIdPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsMessageIdPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsMessageIdPresent()
  nameWithType: IReadOnlyBasicProperties.IsMessageIdPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsMessageIdPresent*
  name: IsMessageIdPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsMessageIdPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsMessageIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsMessageIdPresent
  nameWithType: IReadOnlyBasicProperties.IsMessageIdPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsPriorityPresent
  name: IsPriorityPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsPriorityPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsPriorityPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsPriorityPresent()
  nameWithType: IReadOnlyBasicProperties.IsPriorityPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsPriorityPresent*
  name: IsPriorityPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsPriorityPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsPriorityPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsPriorityPresent
  nameWithType: IReadOnlyBasicProperties.IsPriorityPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsReplyToPresent
  name: IsReplyToPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsReplyToPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsReplyToPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsReplyToPresent()
  nameWithType: IReadOnlyBasicProperties.IsReplyToPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsReplyToPresent*
  name: IsReplyToPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsReplyToPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsReplyToPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsReplyToPresent
  nameWithType: IReadOnlyBasicProperties.IsReplyToPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsTimestampPresent
  name: IsTimestampPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsTimestampPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsTimestampPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsTimestampPresent()
  nameWithType: IReadOnlyBasicProperties.IsTimestampPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsTimestampPresent*
  name: IsTimestampPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsTimestampPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsTimestampPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsTimestampPresent
  nameWithType: IReadOnlyBasicProperties.IsTimestampPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsTypePresent
  name: IsTypePresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsTypePresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsTypePresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsTypePresent()
  nameWithType: IReadOnlyBasicProperties.IsTypePresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsTypePresent*
  name: IsTypePresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsTypePresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsTypePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsTypePresent
  nameWithType: IReadOnlyBasicProperties.IsTypePresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsUserIdPresent
  name: IsUserIdPresent()
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsUserIdPresent
  commentId: M:RabbitMQ.Client.IReadOnlyBasicProperties.IsUserIdPresent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsUserIdPresent()
  nameWithType: IReadOnlyBasicProperties.IsUserIdPresent()
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.IsUserIdPresent*
  name: IsUserIdPresent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_IsUserIdPresent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.IsUserIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.IsUserIdPresent
  nameWithType: IReadOnlyBasicProperties.IsUserIdPresent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.MessageId
  name: MessageId
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_MessageId
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.MessageId
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.MessageId
  nameWithType: IReadOnlyBasicProperties.MessageId
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.MessageId*
  name: MessageId
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_MessageId_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.MessageId
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.MessageId
  nameWithType: IReadOnlyBasicProperties.MessageId
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Persistent
  name: Persistent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Persistent
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.Persistent
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Persistent
  nameWithType: IReadOnlyBasicProperties.Persistent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Persistent*
  name: Persistent
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Persistent_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.Persistent
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Persistent
  nameWithType: IReadOnlyBasicProperties.Persistent
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Priority
  name: Priority
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Priority
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.Priority
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Priority
  nameWithType: IReadOnlyBasicProperties.Priority
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Priority*
  name: Priority
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Priority_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.Priority
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Priority
  nameWithType: IReadOnlyBasicProperties.Priority
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.ReplyTo
  name: ReplyTo
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_ReplyTo
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.ReplyTo
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.ReplyTo
  nameWithType: IReadOnlyBasicProperties.ReplyTo
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.ReplyTo*
  name: ReplyTo
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_ReplyTo_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.ReplyTo
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.ReplyTo
  nameWithType: IReadOnlyBasicProperties.ReplyTo
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.ReplyToAddress
  name: ReplyToAddress
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_ReplyToAddress
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.ReplyToAddress
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.ReplyToAddress
  nameWithType: IReadOnlyBasicProperties.ReplyToAddress
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.ReplyToAddress*
  name: ReplyToAddress
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_ReplyToAddress_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.ReplyToAddress
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.ReplyToAddress
  nameWithType: IReadOnlyBasicProperties.ReplyToAddress
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Timestamp
  name: Timestamp
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Timestamp
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.Timestamp
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Timestamp
  nameWithType: IReadOnlyBasicProperties.Timestamp
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Timestamp*
  name: Timestamp
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Timestamp_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.Timestamp
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Timestamp
  nameWithType: IReadOnlyBasicProperties.Timestamp
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Type
  name: Type
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Type
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.Type
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Type
  nameWithType: IReadOnlyBasicProperties.Type
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.Type*
  name: Type
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_Type_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.Type
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.Type
  nameWithType: IReadOnlyBasicProperties.Type
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.UserId
  name: UserId
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_UserId
  commentId: P:RabbitMQ.Client.IReadOnlyBasicProperties.UserId
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.UserId
  nameWithType: IReadOnlyBasicProperties.UserId
- uid: RabbitMQ.Client.IReadOnlyBasicProperties.UserId*
  name: UserId
  href: api/RabbitMQ.Client.IReadOnlyBasicProperties.html#RabbitMQ_Client_IReadOnlyBasicProperties_UserId_
  commentId: Overload:RabbitMQ.Client.IReadOnlyBasicProperties.UserId
  isSpec: "True"
  fullName: RabbitMQ.Client.IReadOnlyBasicProperties.UserId
  nameWithType: IReadOnlyBasicProperties.UserId
- uid: RabbitMQ.Client.IRecordedBinding
  name: IRecordedBinding
  href: api/RabbitMQ.Client.IRecordedBinding.html
  commentId: T:RabbitMQ.Client.IRecordedBinding
  fullName: RabbitMQ.Client.IRecordedBinding
  nameWithType: IRecordedBinding
- uid: RabbitMQ.Client.IRecordedBinding.Arguments
  name: Arguments
  href: api/RabbitMQ.Client.IRecordedBinding.html#RabbitMQ_Client_IRecordedBinding_Arguments
  commentId: P:RabbitMQ.Client.IRecordedBinding.Arguments
  fullName: RabbitMQ.Client.IRecordedBinding.Arguments
  nameWithType: IRecordedBinding.Arguments
- uid: RabbitMQ.Client.IRecordedBinding.Arguments*
  name: Arguments
  href: api/RabbitMQ.Client.IRecordedBinding.html#RabbitMQ_Client_IRecordedBinding_Arguments_
  commentId: Overload:RabbitMQ.Client.IRecordedBinding.Arguments
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedBinding.Arguments
  nameWithType: IRecordedBinding.Arguments
- uid: RabbitMQ.Client.IRecordedBinding.Destination
  name: Destination
  href: api/RabbitMQ.Client.IRecordedBinding.html#RabbitMQ_Client_IRecordedBinding_Destination
  commentId: P:RabbitMQ.Client.IRecordedBinding.Destination
  fullName: RabbitMQ.Client.IRecordedBinding.Destination
  nameWithType: IRecordedBinding.Destination
- uid: RabbitMQ.Client.IRecordedBinding.Destination*
  name: Destination
  href: api/RabbitMQ.Client.IRecordedBinding.html#RabbitMQ_Client_IRecordedBinding_Destination_
  commentId: Overload:RabbitMQ.Client.IRecordedBinding.Destination
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedBinding.Destination
  nameWithType: IRecordedBinding.Destination
- uid: RabbitMQ.Client.IRecordedBinding.RoutingKey
  name: RoutingKey
  href: api/RabbitMQ.Client.IRecordedBinding.html#RabbitMQ_Client_IRecordedBinding_RoutingKey
  commentId: P:RabbitMQ.Client.IRecordedBinding.RoutingKey
  fullName: RabbitMQ.Client.IRecordedBinding.RoutingKey
  nameWithType: IRecordedBinding.RoutingKey
- uid: RabbitMQ.Client.IRecordedBinding.RoutingKey*
  name: RoutingKey
  href: api/RabbitMQ.Client.IRecordedBinding.html#RabbitMQ_Client_IRecordedBinding_RoutingKey_
  commentId: Overload:RabbitMQ.Client.IRecordedBinding.RoutingKey
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedBinding.RoutingKey
  nameWithType: IRecordedBinding.RoutingKey
- uid: RabbitMQ.Client.IRecordedBinding.Source
  name: Source
  href: api/RabbitMQ.Client.IRecordedBinding.html#RabbitMQ_Client_IRecordedBinding_Source
  commentId: P:RabbitMQ.Client.IRecordedBinding.Source
  fullName: RabbitMQ.Client.IRecordedBinding.Source
  nameWithType: IRecordedBinding.Source
- uid: RabbitMQ.Client.IRecordedBinding.Source*
  name: Source
  href: api/RabbitMQ.Client.IRecordedBinding.html#RabbitMQ_Client_IRecordedBinding_Source_
  commentId: Overload:RabbitMQ.Client.IRecordedBinding.Source
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedBinding.Source
  nameWithType: IRecordedBinding.Source
- uid: RabbitMQ.Client.IRecordedConsumer
  name: IRecordedConsumer
  href: api/RabbitMQ.Client.IRecordedConsumer.html
  commentId: T:RabbitMQ.Client.IRecordedConsumer
  fullName: RabbitMQ.Client.IRecordedConsumer
  nameWithType: IRecordedConsumer
- uid: RabbitMQ.Client.IRecordedConsumer.Arguments
  name: Arguments
  href: api/RabbitMQ.Client.IRecordedConsumer.html#RabbitMQ_Client_IRecordedConsumer_Arguments
  commentId: P:RabbitMQ.Client.IRecordedConsumer.Arguments
  fullName: RabbitMQ.Client.IRecordedConsumer.Arguments
  nameWithType: IRecordedConsumer.Arguments
- uid: RabbitMQ.Client.IRecordedConsumer.Arguments*
  name: Arguments
  href: api/RabbitMQ.Client.IRecordedConsumer.html#RabbitMQ_Client_IRecordedConsumer_Arguments_
  commentId: Overload:RabbitMQ.Client.IRecordedConsumer.Arguments
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedConsumer.Arguments
  nameWithType: IRecordedConsumer.Arguments
- uid: RabbitMQ.Client.IRecordedConsumer.AutoAck
  name: AutoAck
  href: api/RabbitMQ.Client.IRecordedConsumer.html#RabbitMQ_Client_IRecordedConsumer_AutoAck
  commentId: P:RabbitMQ.Client.IRecordedConsumer.AutoAck
  fullName: RabbitMQ.Client.IRecordedConsumer.AutoAck
  nameWithType: IRecordedConsumer.AutoAck
- uid: RabbitMQ.Client.IRecordedConsumer.AutoAck*
  name: AutoAck
  href: api/RabbitMQ.Client.IRecordedConsumer.html#RabbitMQ_Client_IRecordedConsumer_AutoAck_
  commentId: Overload:RabbitMQ.Client.IRecordedConsumer.AutoAck
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedConsumer.AutoAck
  nameWithType: IRecordedConsumer.AutoAck
- uid: RabbitMQ.Client.IRecordedConsumer.ConsumerTag
  name: ConsumerTag
  href: api/RabbitMQ.Client.IRecordedConsumer.html#RabbitMQ_Client_IRecordedConsumer_ConsumerTag
  commentId: P:RabbitMQ.Client.IRecordedConsumer.ConsumerTag
  fullName: RabbitMQ.Client.IRecordedConsumer.ConsumerTag
  nameWithType: IRecordedConsumer.ConsumerTag
- uid: RabbitMQ.Client.IRecordedConsumer.ConsumerTag*
  name: ConsumerTag
  href: api/RabbitMQ.Client.IRecordedConsumer.html#RabbitMQ_Client_IRecordedConsumer_ConsumerTag_
  commentId: Overload:RabbitMQ.Client.IRecordedConsumer.ConsumerTag
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedConsumer.ConsumerTag
  nameWithType: IRecordedConsumer.ConsumerTag
- uid: RabbitMQ.Client.IRecordedConsumer.Exclusive
  name: Exclusive
  href: api/RabbitMQ.Client.IRecordedConsumer.html#RabbitMQ_Client_IRecordedConsumer_Exclusive
  commentId: P:RabbitMQ.Client.IRecordedConsumer.Exclusive
  fullName: RabbitMQ.Client.IRecordedConsumer.Exclusive
  nameWithType: IRecordedConsumer.Exclusive
- uid: RabbitMQ.Client.IRecordedConsumer.Exclusive*
  name: Exclusive
  href: api/RabbitMQ.Client.IRecordedConsumer.html#RabbitMQ_Client_IRecordedConsumer_Exclusive_
  commentId: Overload:RabbitMQ.Client.IRecordedConsumer.Exclusive
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedConsumer.Exclusive
  nameWithType: IRecordedConsumer.Exclusive
- uid: RabbitMQ.Client.IRecordedConsumer.Queue
  name: Queue
  href: api/RabbitMQ.Client.IRecordedConsumer.html#RabbitMQ_Client_IRecordedConsumer_Queue
  commentId: P:RabbitMQ.Client.IRecordedConsumer.Queue
  fullName: RabbitMQ.Client.IRecordedConsumer.Queue
  nameWithType: IRecordedConsumer.Queue
- uid: RabbitMQ.Client.IRecordedConsumer.Queue*
  name: Queue
  href: api/RabbitMQ.Client.IRecordedConsumer.html#RabbitMQ_Client_IRecordedConsumer_Queue_
  commentId: Overload:RabbitMQ.Client.IRecordedConsumer.Queue
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedConsumer.Queue
  nameWithType: IRecordedConsumer.Queue
- uid: RabbitMQ.Client.IRecordedExchange
  name: IRecordedExchange
  href: api/RabbitMQ.Client.IRecordedExchange.html
  commentId: T:RabbitMQ.Client.IRecordedExchange
  fullName: RabbitMQ.Client.IRecordedExchange
  nameWithType: IRecordedExchange
- uid: RabbitMQ.Client.IRecordedExchange.Arguments
  name: Arguments
  href: api/RabbitMQ.Client.IRecordedExchange.html#RabbitMQ_Client_IRecordedExchange_Arguments
  commentId: P:RabbitMQ.Client.IRecordedExchange.Arguments
  fullName: RabbitMQ.Client.IRecordedExchange.Arguments
  nameWithType: IRecordedExchange.Arguments
- uid: RabbitMQ.Client.IRecordedExchange.Arguments*
  name: Arguments
  href: api/RabbitMQ.Client.IRecordedExchange.html#RabbitMQ_Client_IRecordedExchange_Arguments_
  commentId: Overload:RabbitMQ.Client.IRecordedExchange.Arguments
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedExchange.Arguments
  nameWithType: IRecordedExchange.Arguments
- uid: RabbitMQ.Client.IRecordedExchange.AutoDelete
  name: AutoDelete
  href: api/RabbitMQ.Client.IRecordedExchange.html#RabbitMQ_Client_IRecordedExchange_AutoDelete
  commentId: P:RabbitMQ.Client.IRecordedExchange.AutoDelete
  fullName: RabbitMQ.Client.IRecordedExchange.AutoDelete
  nameWithType: IRecordedExchange.AutoDelete
- uid: RabbitMQ.Client.IRecordedExchange.AutoDelete*
  name: AutoDelete
  href: api/RabbitMQ.Client.IRecordedExchange.html#RabbitMQ_Client_IRecordedExchange_AutoDelete_
  commentId: Overload:RabbitMQ.Client.IRecordedExchange.AutoDelete
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedExchange.AutoDelete
  nameWithType: IRecordedExchange.AutoDelete
- uid: RabbitMQ.Client.IRecordedExchange.Durable
  name: Durable
  href: api/RabbitMQ.Client.IRecordedExchange.html#RabbitMQ_Client_IRecordedExchange_Durable
  commentId: P:RabbitMQ.Client.IRecordedExchange.Durable
  fullName: RabbitMQ.Client.IRecordedExchange.Durable
  nameWithType: IRecordedExchange.Durable
- uid: RabbitMQ.Client.IRecordedExchange.Durable*
  name: Durable
  href: api/RabbitMQ.Client.IRecordedExchange.html#RabbitMQ_Client_IRecordedExchange_Durable_
  commentId: Overload:RabbitMQ.Client.IRecordedExchange.Durable
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedExchange.Durable
  nameWithType: IRecordedExchange.Durable
- uid: RabbitMQ.Client.IRecordedExchange.Name
  name: Name
  href: api/RabbitMQ.Client.IRecordedExchange.html#RabbitMQ_Client_IRecordedExchange_Name
  commentId: P:RabbitMQ.Client.IRecordedExchange.Name
  fullName: RabbitMQ.Client.IRecordedExchange.Name
  nameWithType: IRecordedExchange.Name
- uid: RabbitMQ.Client.IRecordedExchange.Name*
  name: Name
  href: api/RabbitMQ.Client.IRecordedExchange.html#RabbitMQ_Client_IRecordedExchange_Name_
  commentId: Overload:RabbitMQ.Client.IRecordedExchange.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedExchange.Name
  nameWithType: IRecordedExchange.Name
- uid: RabbitMQ.Client.IRecordedExchange.Type
  name: Type
  href: api/RabbitMQ.Client.IRecordedExchange.html#RabbitMQ_Client_IRecordedExchange_Type
  commentId: P:RabbitMQ.Client.IRecordedExchange.Type
  fullName: RabbitMQ.Client.IRecordedExchange.Type
  nameWithType: IRecordedExchange.Type
- uid: RabbitMQ.Client.IRecordedExchange.Type*
  name: Type
  href: api/RabbitMQ.Client.IRecordedExchange.html#RabbitMQ_Client_IRecordedExchange_Type_
  commentId: Overload:RabbitMQ.Client.IRecordedExchange.Type
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedExchange.Type
  nameWithType: IRecordedExchange.Type
- uid: RabbitMQ.Client.IRecordedQueue
  name: IRecordedQueue
  href: api/RabbitMQ.Client.IRecordedQueue.html
  commentId: T:RabbitMQ.Client.IRecordedQueue
  fullName: RabbitMQ.Client.IRecordedQueue
  nameWithType: IRecordedQueue
- uid: RabbitMQ.Client.IRecordedQueue.Arguments
  name: Arguments
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_Arguments
  commentId: P:RabbitMQ.Client.IRecordedQueue.Arguments
  fullName: RabbitMQ.Client.IRecordedQueue.Arguments
  nameWithType: IRecordedQueue.Arguments
- uid: RabbitMQ.Client.IRecordedQueue.Arguments*
  name: Arguments
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_Arguments_
  commentId: Overload:RabbitMQ.Client.IRecordedQueue.Arguments
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedQueue.Arguments
  nameWithType: IRecordedQueue.Arguments
- uid: RabbitMQ.Client.IRecordedQueue.AutoDelete
  name: AutoDelete
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_AutoDelete
  commentId: P:RabbitMQ.Client.IRecordedQueue.AutoDelete
  fullName: RabbitMQ.Client.IRecordedQueue.AutoDelete
  nameWithType: IRecordedQueue.AutoDelete
- uid: RabbitMQ.Client.IRecordedQueue.AutoDelete*
  name: AutoDelete
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_AutoDelete_
  commentId: Overload:RabbitMQ.Client.IRecordedQueue.AutoDelete
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedQueue.AutoDelete
  nameWithType: IRecordedQueue.AutoDelete
- uid: RabbitMQ.Client.IRecordedQueue.Durable
  name: Durable
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_Durable
  commentId: P:RabbitMQ.Client.IRecordedQueue.Durable
  fullName: RabbitMQ.Client.IRecordedQueue.Durable
  nameWithType: IRecordedQueue.Durable
- uid: RabbitMQ.Client.IRecordedQueue.Durable*
  name: Durable
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_Durable_
  commentId: Overload:RabbitMQ.Client.IRecordedQueue.Durable
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedQueue.Durable
  nameWithType: IRecordedQueue.Durable
- uid: RabbitMQ.Client.IRecordedQueue.Exclusive
  name: Exclusive
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_Exclusive
  commentId: P:RabbitMQ.Client.IRecordedQueue.Exclusive
  fullName: RabbitMQ.Client.IRecordedQueue.Exclusive
  nameWithType: IRecordedQueue.Exclusive
- uid: RabbitMQ.Client.IRecordedQueue.Exclusive*
  name: Exclusive
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_Exclusive_
  commentId: Overload:RabbitMQ.Client.IRecordedQueue.Exclusive
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedQueue.Exclusive
  nameWithType: IRecordedQueue.Exclusive
- uid: RabbitMQ.Client.IRecordedQueue.IsServerNamed
  name: IsServerNamed
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_IsServerNamed
  commentId: P:RabbitMQ.Client.IRecordedQueue.IsServerNamed
  fullName: RabbitMQ.Client.IRecordedQueue.IsServerNamed
  nameWithType: IRecordedQueue.IsServerNamed
- uid: RabbitMQ.Client.IRecordedQueue.IsServerNamed*
  name: IsServerNamed
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_IsServerNamed_
  commentId: Overload:RabbitMQ.Client.IRecordedQueue.IsServerNamed
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedQueue.IsServerNamed
  nameWithType: IRecordedQueue.IsServerNamed
- uid: RabbitMQ.Client.IRecordedQueue.Name
  name: Name
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_Name
  commentId: P:RabbitMQ.Client.IRecordedQueue.Name
  fullName: RabbitMQ.Client.IRecordedQueue.Name
  nameWithType: IRecordedQueue.Name
- uid: RabbitMQ.Client.IRecordedQueue.Name*
  name: Name
  href: api/RabbitMQ.Client.IRecordedQueue.html#RabbitMQ_Client_IRecordedQueue_Name_
  commentId: Overload:RabbitMQ.Client.IRecordedQueue.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.IRecordedQueue.Name
  nameWithType: IRecordedQueue.Name
- uid: RabbitMQ.Client.IRecoverable
  name: IRecoverable
  href: api/RabbitMQ.Client.IRecoverable.html
  commentId: T:RabbitMQ.Client.IRecoverable
  fullName: RabbitMQ.Client.IRecoverable
  nameWithType: IRecoverable
- uid: RabbitMQ.Client.IRecoverable.RecoveryAsync
  name: RecoveryAsync
  href: api/RabbitMQ.Client.IRecoverable.html#RabbitMQ_Client_IRecoverable_RecoveryAsync
  commentId: E:RabbitMQ.Client.IRecoverable.RecoveryAsync
  fullName: RabbitMQ.Client.IRecoverable.RecoveryAsync
  nameWithType: IRecoverable.RecoveryAsync
- uid: RabbitMQ.Client.ITcpClient
  name: ITcpClient
  href: api/RabbitMQ.Client.ITcpClient.html
  commentId: T:RabbitMQ.Client.ITcpClient
  fullName: RabbitMQ.Client.ITcpClient
  nameWithType: ITcpClient
- uid: RabbitMQ.Client.ITcpClient.Client
  name: Client
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Client
  commentId: P:RabbitMQ.Client.ITcpClient.Client
  fullName: RabbitMQ.Client.ITcpClient.Client
  nameWithType: ITcpClient.Client
- uid: RabbitMQ.Client.ITcpClient.Client*
  name: Client
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Client_
  commentId: Overload:RabbitMQ.Client.ITcpClient.Client
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.Client
  nameWithType: ITcpClient.Client
- uid: RabbitMQ.Client.ITcpClient.Close
  name: Close()
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Close
  commentId: M:RabbitMQ.Client.ITcpClient.Close
  fullName: RabbitMQ.Client.ITcpClient.Close()
  nameWithType: ITcpClient.Close()
- uid: RabbitMQ.Client.ITcpClient.Close*
  name: Close
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Close_
  commentId: Overload:RabbitMQ.Client.ITcpClient.Close
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.Close
  nameWithType: ITcpClient.Close
- uid: RabbitMQ.Client.ITcpClient.ConnectAsync(System.Net.IPAddress,System.Int32,System.Threading.CancellationToken)
  name: ConnectAsync(IPAddress, int, CancellationToken)
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_ConnectAsync_System_Net_IPAddress_System_Int32_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ITcpClient.ConnectAsync(System.Net.IPAddress,System.Int32,System.Threading.CancellationToken)
  name.vb: ConnectAsync(IPAddress, Integer, CancellationToken)
  fullName: RabbitMQ.Client.ITcpClient.ConnectAsync(System.Net.IPAddress, int, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.ITcpClient.ConnectAsync(System.Net.IPAddress, Integer, System.Threading.CancellationToken)
  nameWithType: ITcpClient.ConnectAsync(IPAddress, int, CancellationToken)
  nameWithType.vb: ITcpClient.ConnectAsync(IPAddress, Integer, CancellationToken)
- uid: RabbitMQ.Client.ITcpClient.ConnectAsync*
  name: ConnectAsync
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_ConnectAsync_
  commentId: Overload:RabbitMQ.Client.ITcpClient.ConnectAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.ConnectAsync
  nameWithType: ITcpClient.ConnectAsync
- uid: RabbitMQ.Client.ITcpClient.Connected
  name: Connected
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Connected
  commentId: P:RabbitMQ.Client.ITcpClient.Connected
  fullName: RabbitMQ.Client.ITcpClient.Connected
  nameWithType: ITcpClient.Connected
- uid: RabbitMQ.Client.ITcpClient.Connected*
  name: Connected
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_Connected_
  commentId: Overload:RabbitMQ.Client.ITcpClient.Connected
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.Connected
  nameWithType: ITcpClient.Connected
- uid: RabbitMQ.Client.ITcpClient.GetStream
  name: GetStream()
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_GetStream
  commentId: M:RabbitMQ.Client.ITcpClient.GetStream
  fullName: RabbitMQ.Client.ITcpClient.GetStream()
  nameWithType: ITcpClient.GetStream()
- uid: RabbitMQ.Client.ITcpClient.GetStream*
  name: GetStream
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_GetStream_
  commentId: Overload:RabbitMQ.Client.ITcpClient.GetStream
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.GetStream
  nameWithType: ITcpClient.GetStream
- uid: RabbitMQ.Client.ITcpClient.ReceiveTimeout
  name: ReceiveTimeout
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_ReceiveTimeout
  commentId: P:RabbitMQ.Client.ITcpClient.ReceiveTimeout
  fullName: RabbitMQ.Client.ITcpClient.ReceiveTimeout
  nameWithType: ITcpClient.ReceiveTimeout
- uid: RabbitMQ.Client.ITcpClient.ReceiveTimeout*
  name: ReceiveTimeout
  href: api/RabbitMQ.Client.ITcpClient.html#RabbitMQ_Client_ITcpClient_ReceiveTimeout_
  commentId: Overload:RabbitMQ.Client.ITcpClient.ReceiveTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.ITcpClient.ReceiveTimeout
  nameWithType: ITcpClient.ReceiveTimeout
- uid: RabbitMQ.Client.Logging
  name: RabbitMQ.Client.Logging
  href: api/RabbitMQ.Client.Logging.html
  commentId: N:RabbitMQ.Client.Logging
  fullName: RabbitMQ.Client.Logging
  nameWithType: RabbitMQ.Client.Logging
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail
  name: RabbitMqExceptionDetail
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html
  commentId: T:RabbitMQ.Client.Logging.RabbitMqExceptionDetail
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail
  nameWithType: RabbitMqExceptionDetail
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  name: RabbitMqExceptionDetail(IDictionary<string, object>)
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail__ctor_System_Collections_Generic_IDictionary_System_String_System_Object__
  commentId: M:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})
  name.vb: New(IDictionary(Of String, Object))
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.RabbitMqExceptionDetail(System.Collections.Generic.IDictionary<string, object>)
  fullName.vb: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.New(System.Collections.Generic.IDictionary(Of String, Object))
  nameWithType: RabbitMqExceptionDetail.RabbitMqExceptionDetail(IDictionary<string, object>)
  nameWithType.vb: RabbitMqExceptionDetail.New(IDictionary(Of String, Object))
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor(System.Exception)
  name: RabbitMqExceptionDetail(Exception)
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail__ctor_System_Exception_
  commentId: M:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor(System.Exception)
  name.vb: New(Exception)
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.RabbitMqExceptionDetail(System.Exception)
  fullName.vb: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.New(System.Exception)
  nameWithType: RabbitMqExceptionDetail.RabbitMqExceptionDetail(Exception)
  nameWithType.vb: RabbitMqExceptionDetail.New(Exception)
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor*
  name: RabbitMqExceptionDetail
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail__ctor_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.RabbitMqExceptionDetail
  fullName.vb: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.New
  nameWithType: RabbitMqExceptionDetail.RabbitMqExceptionDetail
  nameWithType.vb: RabbitMqExceptionDetail.New
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException
  name: InnerException
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_InnerException
  commentId: P:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException
  nameWithType: RabbitMqExceptionDetail.InnerException
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException*
  name: InnerException
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_InnerException_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.InnerException
  nameWithType: RabbitMqExceptionDetail.InnerException
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message
  name: Message
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_Message
  commentId: P:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message
  nameWithType: RabbitMqExceptionDetail.Message
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message*
  name: Message
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_Message_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Message
  nameWithType: RabbitMqExceptionDetail.Message
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace
  name: StackTrace
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_StackTrace
  commentId: P:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace
  nameWithType: RabbitMqExceptionDetail.StackTrace
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace*
  name: StackTrace
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_StackTrace_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.StackTrace
  nameWithType: RabbitMqExceptionDetail.StackTrace
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString
  name: ToString()
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_ToString
  commentId: M:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString()
  nameWithType: RabbitMqExceptionDetail.ToString()
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString*
  name: ToString
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_ToString_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.ToString
  nameWithType: RabbitMqExceptionDetail.ToString
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type
  name: Type
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_Type
  commentId: P:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type
  nameWithType: RabbitMqExceptionDetail.Type
- uid: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type*
  name: Type
  href: api/RabbitMQ.Client.Logging.RabbitMqExceptionDetail.html#RabbitMQ_Client_Logging_RabbitMqExceptionDetail_Type_
  commentId: Overload:RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type
  isSpec: "True"
  fullName: RabbitMQ.Client.Logging.RabbitMqExceptionDetail.Type
  nameWithType: RabbitMqExceptionDetail.Type
- uid: RabbitMQ.Client.OAuth2
  name: RabbitMQ.Client.OAuth2
  href: api/RabbitMQ.Client.OAuth2.html
  commentId: N:RabbitMQ.Client.OAuth2
  fullName: RabbitMQ.Client.OAuth2
  nameWithType: RabbitMQ.Client.OAuth2
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresher
  name: CredentialsRefresher
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresher.html
  commentId: T:RabbitMQ.Client.OAuth2.CredentialsRefresher
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresher
  nameWithType: CredentialsRefresher
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresher.#ctor(RabbitMQ.Client.ICredentialsProvider,RabbitMQ.Client.OAuth2.NotifyCredentialsRefreshedAsync,System.Threading.CancellationToken)
  name: CredentialsRefresher(ICredentialsProvider, NotifyCredentialsRefreshedAsync, CancellationToken)
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresher.html#RabbitMQ_Client_OAuth2_CredentialsRefresher__ctor_RabbitMQ_Client_ICredentialsProvider_RabbitMQ_Client_OAuth2_NotifyCredentialsRefreshedAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.OAuth2.CredentialsRefresher.#ctor(RabbitMQ.Client.ICredentialsProvider,RabbitMQ.Client.OAuth2.NotifyCredentialsRefreshedAsync,System.Threading.CancellationToken)
  name.vb: New(ICredentialsProvider, NotifyCredentialsRefreshedAsync, CancellationToken)
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresher.CredentialsRefresher(RabbitMQ.Client.ICredentialsProvider, RabbitMQ.Client.OAuth2.NotifyCredentialsRefreshedAsync, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.OAuth2.CredentialsRefresher.New(RabbitMQ.Client.ICredentialsProvider, RabbitMQ.Client.OAuth2.NotifyCredentialsRefreshedAsync, System.Threading.CancellationToken)
  nameWithType: CredentialsRefresher.CredentialsRefresher(ICredentialsProvider, NotifyCredentialsRefreshedAsync, CancellationToken)
  nameWithType.vb: CredentialsRefresher.New(ICredentialsProvider, NotifyCredentialsRefreshedAsync, CancellationToken)
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresher.#ctor*
  name: CredentialsRefresher
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresher.html#RabbitMQ_Client_OAuth2_CredentialsRefresher__ctor_
  commentId: Overload:RabbitMQ.Client.OAuth2.CredentialsRefresher.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresher.CredentialsRefresher
  fullName.vb: RabbitMQ.Client.OAuth2.CredentialsRefresher.New
  nameWithType: CredentialsRefresher.CredentialsRefresher
  nameWithType.vb: CredentialsRefresher.New
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresher.Credentials
  name: Credentials
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresher.html#RabbitMQ_Client_OAuth2_CredentialsRefresher_Credentials
  commentId: P:RabbitMQ.Client.OAuth2.CredentialsRefresher.Credentials
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresher.Credentials
  nameWithType: CredentialsRefresher.Credentials
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresher.Credentials*
  name: Credentials
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresher.html#RabbitMQ_Client_OAuth2_CredentialsRefresher_Credentials_
  commentId: Overload:RabbitMQ.Client.OAuth2.CredentialsRefresher.Credentials
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresher.Credentials
  nameWithType: CredentialsRefresher.Credentials
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresher.Dispose
  name: Dispose()
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresher.html#RabbitMQ_Client_OAuth2_CredentialsRefresher_Dispose
  commentId: M:RabbitMQ.Client.OAuth2.CredentialsRefresher.Dispose
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresher.Dispose()
  nameWithType: CredentialsRefresher.Dispose()
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresher.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresher.html#RabbitMQ_Client_OAuth2_CredentialsRefresher_Dispose_System_Boolean_
  commentId: M:RabbitMQ.Client.OAuth2.CredentialsRefresher.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresher.Dispose(bool)
  fullName.vb: RabbitMQ.Client.OAuth2.CredentialsRefresher.Dispose(Boolean)
  nameWithType: CredentialsRefresher.Dispose(bool)
  nameWithType.vb: CredentialsRefresher.Dispose(Boolean)
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresher.Dispose*
  name: Dispose
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresher.html#RabbitMQ_Client_OAuth2_CredentialsRefresher_Dispose_
  commentId: Overload:RabbitMQ.Client.OAuth2.CredentialsRefresher.Dispose
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresher.Dispose
  nameWithType: CredentialsRefresher.Dispose
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource
  name: CredentialsRefresherEventSource
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.html
  commentId: T:RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource
  nameWithType: CredentialsRefresherEventSource
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Log
  name: Log
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.html#RabbitMQ_Client_OAuth2_CredentialsRefresherEventSource_Log
  commentId: P:RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Log
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Log
  nameWithType: CredentialsRefresherEventSource.Log
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Log*
  name: Log
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.html#RabbitMQ_Client_OAuth2_CredentialsRefresherEventSource_Log_
  commentId: Overload:RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Log
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Log
  nameWithType: CredentialsRefresherEventSource.Log
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.RefreshedCredentials(System.String)
  name: RefreshedCredentials(string)
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.html#RabbitMQ_Client_OAuth2_CredentialsRefresherEventSource_RefreshedCredentials_System_String_
  commentId: M:RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.RefreshedCredentials(System.String)
  name.vb: RefreshedCredentials(String)
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.RefreshedCredentials(string)
  fullName.vb: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.RefreshedCredentials(String)
  nameWithType: CredentialsRefresherEventSource.RefreshedCredentials(string)
  nameWithType.vb: CredentialsRefresherEventSource.RefreshedCredentials(String)
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.RefreshedCredentials*
  name: RefreshedCredentials
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.html#RabbitMQ_Client_OAuth2_CredentialsRefresherEventSource_RefreshedCredentials_
  commentId: Overload:RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.RefreshedCredentials
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.RefreshedCredentials
  nameWithType: CredentialsRefresherEventSource.RefreshedCredentials
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Started(System.String)
  name: Started(string)
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.html#RabbitMQ_Client_OAuth2_CredentialsRefresherEventSource_Started_System_String_
  commentId: M:RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Started(System.String)
  name.vb: Started(String)
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Started(string)
  fullName.vb: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Started(String)
  nameWithType: CredentialsRefresherEventSource.Started(string)
  nameWithType.vb: CredentialsRefresherEventSource.Started(String)
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Started*
  name: Started
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.html#RabbitMQ_Client_OAuth2_CredentialsRefresherEventSource_Started_
  commentId: Overload:RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Started
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Started
  nameWithType: CredentialsRefresherEventSource.Started
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Stopped(System.String)
  name: Stopped(string)
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.html#RabbitMQ_Client_OAuth2_CredentialsRefresherEventSource_Stopped_System_String_
  commentId: M:RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Stopped(System.String)
  name.vb: Stopped(String)
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Stopped(string)
  fullName.vb: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Stopped(String)
  nameWithType: CredentialsRefresherEventSource.Stopped(string)
  nameWithType.vb: CredentialsRefresherEventSource.Stopped(String)
- uid: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Stopped*
  name: Stopped
  href: api/RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.html#RabbitMQ_Client_OAuth2_CredentialsRefresherEventSource_Stopped_
  commentId: Overload:RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Stopped
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.CredentialsRefresherEventSource.Stopped
  nameWithType: CredentialsRefresherEventSource.Stopped
- uid: RabbitMQ.Client.OAuth2.IOAuth2Client
  name: IOAuth2Client
  href: api/RabbitMQ.Client.OAuth2.IOAuth2Client.html
  commentId: T:RabbitMQ.Client.OAuth2.IOAuth2Client
  fullName: RabbitMQ.Client.OAuth2.IOAuth2Client
  nameWithType: IOAuth2Client
- uid: RabbitMQ.Client.OAuth2.IOAuth2Client.RefreshTokenAsync(RabbitMQ.Client.OAuth2.IToken,System.Threading.CancellationToken)
  name: RefreshTokenAsync(IToken, CancellationToken)
  href: api/RabbitMQ.Client.OAuth2.IOAuth2Client.html#RabbitMQ_Client_OAuth2_IOAuth2Client_RefreshTokenAsync_RabbitMQ_Client_OAuth2_IToken_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.OAuth2.IOAuth2Client.RefreshTokenAsync(RabbitMQ.Client.OAuth2.IToken,System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.OAuth2.IOAuth2Client.RefreshTokenAsync(RabbitMQ.Client.OAuth2.IToken, System.Threading.CancellationToken)
  nameWithType: IOAuth2Client.RefreshTokenAsync(IToken, CancellationToken)
- uid: RabbitMQ.Client.OAuth2.IOAuth2Client.RefreshTokenAsync*
  name: RefreshTokenAsync
  href: api/RabbitMQ.Client.OAuth2.IOAuth2Client.html#RabbitMQ_Client_OAuth2_IOAuth2Client_RefreshTokenAsync_
  commentId: Overload:RabbitMQ.Client.OAuth2.IOAuth2Client.RefreshTokenAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.IOAuth2Client.RefreshTokenAsync
  nameWithType: IOAuth2Client.RefreshTokenAsync
- uid: RabbitMQ.Client.OAuth2.IOAuth2Client.RequestTokenAsync(System.Threading.CancellationToken)
  name: RequestTokenAsync(CancellationToken)
  href: api/RabbitMQ.Client.OAuth2.IOAuth2Client.html#RabbitMQ_Client_OAuth2_IOAuth2Client_RequestTokenAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.OAuth2.IOAuth2Client.RequestTokenAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.OAuth2.IOAuth2Client.RequestTokenAsync(System.Threading.CancellationToken)
  nameWithType: IOAuth2Client.RequestTokenAsync(CancellationToken)
- uid: RabbitMQ.Client.OAuth2.IOAuth2Client.RequestTokenAsync*
  name: RequestTokenAsync
  href: api/RabbitMQ.Client.OAuth2.IOAuth2Client.html#RabbitMQ_Client_OAuth2_IOAuth2Client_RequestTokenAsync_
  commentId: Overload:RabbitMQ.Client.OAuth2.IOAuth2Client.RequestTokenAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.IOAuth2Client.RequestTokenAsync
  nameWithType: IOAuth2Client.RequestTokenAsync
- uid: RabbitMQ.Client.OAuth2.IToken
  name: IToken
  href: api/RabbitMQ.Client.OAuth2.IToken.html
  commentId: T:RabbitMQ.Client.OAuth2.IToken
  fullName: RabbitMQ.Client.OAuth2.IToken
  nameWithType: IToken
- uid: RabbitMQ.Client.OAuth2.IToken.AccessToken
  name: AccessToken
  href: api/RabbitMQ.Client.OAuth2.IToken.html#RabbitMQ_Client_OAuth2_IToken_AccessToken
  commentId: P:RabbitMQ.Client.OAuth2.IToken.AccessToken
  fullName: RabbitMQ.Client.OAuth2.IToken.AccessToken
  nameWithType: IToken.AccessToken
- uid: RabbitMQ.Client.OAuth2.IToken.AccessToken*
  name: AccessToken
  href: api/RabbitMQ.Client.OAuth2.IToken.html#RabbitMQ_Client_OAuth2_IToken_AccessToken_
  commentId: Overload:RabbitMQ.Client.OAuth2.IToken.AccessToken
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.IToken.AccessToken
  nameWithType: IToken.AccessToken
- uid: RabbitMQ.Client.OAuth2.IToken.ExpiresIn
  name: ExpiresIn
  href: api/RabbitMQ.Client.OAuth2.IToken.html#RabbitMQ_Client_OAuth2_IToken_ExpiresIn
  commentId: P:RabbitMQ.Client.OAuth2.IToken.ExpiresIn
  fullName: RabbitMQ.Client.OAuth2.IToken.ExpiresIn
  nameWithType: IToken.ExpiresIn
- uid: RabbitMQ.Client.OAuth2.IToken.ExpiresIn*
  name: ExpiresIn
  href: api/RabbitMQ.Client.OAuth2.IToken.html#RabbitMQ_Client_OAuth2_IToken_ExpiresIn_
  commentId: Overload:RabbitMQ.Client.OAuth2.IToken.ExpiresIn
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.IToken.ExpiresIn
  nameWithType: IToken.ExpiresIn
- uid: RabbitMQ.Client.OAuth2.IToken.HasExpired
  name: HasExpired
  href: api/RabbitMQ.Client.OAuth2.IToken.html#RabbitMQ_Client_OAuth2_IToken_HasExpired
  commentId: P:RabbitMQ.Client.OAuth2.IToken.HasExpired
  fullName: RabbitMQ.Client.OAuth2.IToken.HasExpired
  nameWithType: IToken.HasExpired
- uid: RabbitMQ.Client.OAuth2.IToken.HasExpired*
  name: HasExpired
  href: api/RabbitMQ.Client.OAuth2.IToken.html#RabbitMQ_Client_OAuth2_IToken_HasExpired_
  commentId: Overload:RabbitMQ.Client.OAuth2.IToken.HasExpired
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.IToken.HasExpired
  nameWithType: IToken.HasExpired
- uid: RabbitMQ.Client.OAuth2.IToken.RefreshToken
  name: RefreshToken
  href: api/RabbitMQ.Client.OAuth2.IToken.html#RabbitMQ_Client_OAuth2_IToken_RefreshToken
  commentId: P:RabbitMQ.Client.OAuth2.IToken.RefreshToken
  fullName: RabbitMQ.Client.OAuth2.IToken.RefreshToken
  nameWithType: IToken.RefreshToken
- uid: RabbitMQ.Client.OAuth2.IToken.RefreshToken*
  name: RefreshToken
  href: api/RabbitMQ.Client.OAuth2.IToken.html#RabbitMQ_Client_OAuth2_IToken_RefreshToken_
  commentId: Overload:RabbitMQ.Client.OAuth2.IToken.RefreshToken
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.IToken.RefreshToken
  nameWithType: IToken.RefreshToken
- uid: RabbitMQ.Client.OAuth2.NotifyCredentialsRefreshedAsync
  name: NotifyCredentialsRefreshedAsync
  href: api/RabbitMQ.Client.OAuth2.NotifyCredentialsRefreshedAsync.html
  commentId: T:RabbitMQ.Client.OAuth2.NotifyCredentialsRefreshedAsync
  fullName: RabbitMQ.Client.OAuth2.NotifyCredentialsRefreshedAsync
  nameWithType: NotifyCredentialsRefreshedAsync
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder
  name: OAuth2ClientBuilder
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html
  commentId: T:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder
  nameWithType: OAuth2ClientBuilder
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.#ctor(System.String,System.String,System.Uri,System.Uri)
  name: OAuth2ClientBuilder(string, string, Uri?, Uri?)
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html#RabbitMQ_Client_OAuth2_OAuth2ClientBuilder__ctor_System_String_System_String_System_Uri_System_Uri_
  commentId: M:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.#ctor(System.String,System.String,System.Uri,System.Uri)
  name.vb: New(String, String, Uri, Uri)
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.OAuth2ClientBuilder(string, string, System.Uri?, System.Uri?)
  fullName.vb: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.New(String, String, System.Uri, System.Uri)
  nameWithType: OAuth2ClientBuilder.OAuth2ClientBuilder(string, string, Uri?, Uri?)
  nameWithType.vb: OAuth2ClientBuilder.New(String, String, Uri, Uri)
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.#ctor*
  name: OAuth2ClientBuilder
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html#RabbitMQ_Client_OAuth2_OAuth2ClientBuilder__ctor_
  commentId: Overload:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.OAuth2ClientBuilder
  fullName.vb: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.New
  nameWithType: OAuth2ClientBuilder.OAuth2ClientBuilder
  nameWithType.vb: OAuth2ClientBuilder.New
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.AddRequestParameter(System.String,System.String)
  name: AddRequestParameter(string, string)
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html#RabbitMQ_Client_OAuth2_OAuth2ClientBuilder_AddRequestParameter_System_String_System_String_
  commentId: M:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.AddRequestParameter(System.String,System.String)
  name.vb: AddRequestParameter(String, String)
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.AddRequestParameter(string, string)
  fullName.vb: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.AddRequestParameter(String, String)
  nameWithType: OAuth2ClientBuilder.AddRequestParameter(string, string)
  nameWithType.vb: OAuth2ClientBuilder.AddRequestParameter(String, String)
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.AddRequestParameter*
  name: AddRequestParameter
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html#RabbitMQ_Client_OAuth2_OAuth2ClientBuilder_AddRequestParameter_
  commentId: Overload:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.AddRequestParameter
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.AddRequestParameter
  nameWithType: OAuth2ClientBuilder.AddRequestParameter
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.BuildAsync(System.Threading.CancellationToken)
  name: BuildAsync(CancellationToken)
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html#RabbitMQ_Client_OAuth2_OAuth2ClientBuilder_BuildAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.BuildAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.BuildAsync(System.Threading.CancellationToken)
  nameWithType: OAuth2ClientBuilder.BuildAsync(CancellationToken)
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.BuildAsync*
  name: BuildAsync
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html#RabbitMQ_Client_OAuth2_OAuth2ClientBuilder_BuildAsync_
  commentId: Overload:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.BuildAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.BuildAsync
  nameWithType: OAuth2ClientBuilder.BuildAsync
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetHttpClientHandler(System.Net.Http.HttpClientHandler)
  name: SetHttpClientHandler(HttpClientHandler)
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html#RabbitMQ_Client_OAuth2_OAuth2ClientBuilder_SetHttpClientHandler_System_Net_Http_HttpClientHandler_
  commentId: M:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetHttpClientHandler(System.Net.Http.HttpClientHandler)
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetHttpClientHandler(System.Net.Http.HttpClientHandler)
  nameWithType: OAuth2ClientBuilder.SetHttpClientHandler(HttpClientHandler)
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetHttpClientHandler*
  name: SetHttpClientHandler
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html#RabbitMQ_Client_OAuth2_OAuth2ClientBuilder_SetHttpClientHandler_
  commentId: Overload:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetHttpClientHandler
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetHttpClientHandler
  nameWithType: OAuth2ClientBuilder.SetHttpClientHandler
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetScope(System.String)
  name: SetScope(string)
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html#RabbitMQ_Client_OAuth2_OAuth2ClientBuilder_SetScope_System_String_
  commentId: M:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetScope(System.String)
  name.vb: SetScope(String)
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetScope(string)
  fullName.vb: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetScope(String)
  nameWithType: OAuth2ClientBuilder.SetScope(string)
  nameWithType.vb: OAuth2ClientBuilder.SetScope(String)
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetScope*
  name: SetScope
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.html#RabbitMQ_Client_OAuth2_OAuth2ClientBuilder_SetScope_
  commentId: Overload:RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetScope
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientBuilder.SetScope
  nameWithType: OAuth2ClientBuilder.SetScope
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider
  name: OAuth2ClientCredentialsProvider
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.html
  commentId: T:RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider
  nameWithType: OAuth2ClientCredentialsProvider
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.#ctor(System.String,RabbitMQ.Client.OAuth2.IOAuth2Client)
  name: OAuth2ClientCredentialsProvider(string, IOAuth2Client)
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.html#RabbitMQ_Client_OAuth2_OAuth2ClientCredentialsProvider__ctor_System_String_RabbitMQ_Client_OAuth2_IOAuth2Client_
  commentId: M:RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.#ctor(System.String,RabbitMQ.Client.OAuth2.IOAuth2Client)
  name.vb: New(String, IOAuth2Client)
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.OAuth2ClientCredentialsProvider(string, RabbitMQ.Client.OAuth2.IOAuth2Client)
  fullName.vb: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.New(String, RabbitMQ.Client.OAuth2.IOAuth2Client)
  nameWithType: OAuth2ClientCredentialsProvider.OAuth2ClientCredentialsProvider(string, IOAuth2Client)
  nameWithType.vb: OAuth2ClientCredentialsProvider.New(String, IOAuth2Client)
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.#ctor*
  name: OAuth2ClientCredentialsProvider
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.html#RabbitMQ_Client_OAuth2_OAuth2ClientCredentialsProvider__ctor_
  commentId: Overload:RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.OAuth2ClientCredentialsProvider
  fullName.vb: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.New
  nameWithType: OAuth2ClientCredentialsProvider.OAuth2ClientCredentialsProvider
  nameWithType.vb: OAuth2ClientCredentialsProvider.New
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Dispose
  name: Dispose()
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.html#RabbitMQ_Client_OAuth2_OAuth2ClientCredentialsProvider_Dispose
  commentId: M:RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Dispose
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Dispose()
  nameWithType: OAuth2ClientCredentialsProvider.Dispose()
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Dispose*
  name: Dispose
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.html#RabbitMQ_Client_OAuth2_OAuth2ClientCredentialsProvider_Dispose_
  commentId: Overload:RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Dispose
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Dispose
  nameWithType: OAuth2ClientCredentialsProvider.Dispose
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.GetCredentialsAsync(System.Threading.CancellationToken)
  name: GetCredentialsAsync(CancellationToken)
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.html#RabbitMQ_Client_OAuth2_OAuth2ClientCredentialsProvider_GetCredentialsAsync_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.GetCredentialsAsync(System.Threading.CancellationToken)
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.GetCredentialsAsync(System.Threading.CancellationToken)
  nameWithType: OAuth2ClientCredentialsProvider.GetCredentialsAsync(CancellationToken)
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.GetCredentialsAsync*
  name: GetCredentialsAsync
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.html#RabbitMQ_Client_OAuth2_OAuth2ClientCredentialsProvider_GetCredentialsAsync_
  commentId: Overload:RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.GetCredentialsAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.GetCredentialsAsync
  nameWithType: OAuth2ClientCredentialsProvider.GetCredentialsAsync
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Name
  name: Name
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.html#RabbitMQ_Client_OAuth2_OAuth2ClientCredentialsProvider_Name
  commentId: P:RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Name
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Name
  nameWithType: OAuth2ClientCredentialsProvider.Name
- uid: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Name*
  name: Name
  href: api/RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.html#RabbitMQ_Client_OAuth2_OAuth2ClientCredentialsProvider_Name_
  commentId: Overload:RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.OAuth2ClientCredentialsProvider.Name
  nameWithType: OAuth2ClientCredentialsProvider.Name
- uid: RabbitMQ.Client.OAuth2.Token
  name: Token
  href: api/RabbitMQ.Client.OAuth2.Token.html
  commentId: T:RabbitMQ.Client.OAuth2.Token
  fullName: RabbitMQ.Client.OAuth2.Token
  nameWithType: Token
- uid: RabbitMQ.Client.OAuth2.Token.AccessToken
  name: AccessToken
  href: api/RabbitMQ.Client.OAuth2.Token.html#RabbitMQ_Client_OAuth2_Token_AccessToken
  commentId: P:RabbitMQ.Client.OAuth2.Token.AccessToken
  fullName: RabbitMQ.Client.OAuth2.Token.AccessToken
  nameWithType: Token.AccessToken
- uid: RabbitMQ.Client.OAuth2.Token.AccessToken*
  name: AccessToken
  href: api/RabbitMQ.Client.OAuth2.Token.html#RabbitMQ_Client_OAuth2_Token_AccessToken_
  commentId: Overload:RabbitMQ.Client.OAuth2.Token.AccessToken
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.Token.AccessToken
  nameWithType: Token.AccessToken
- uid: RabbitMQ.Client.OAuth2.Token.ExpiresIn
  name: ExpiresIn
  href: api/RabbitMQ.Client.OAuth2.Token.html#RabbitMQ_Client_OAuth2_Token_ExpiresIn
  commentId: P:RabbitMQ.Client.OAuth2.Token.ExpiresIn
  fullName: RabbitMQ.Client.OAuth2.Token.ExpiresIn
  nameWithType: Token.ExpiresIn
- uid: RabbitMQ.Client.OAuth2.Token.ExpiresIn*
  name: ExpiresIn
  href: api/RabbitMQ.Client.OAuth2.Token.html#RabbitMQ_Client_OAuth2_Token_ExpiresIn_
  commentId: Overload:RabbitMQ.Client.OAuth2.Token.ExpiresIn
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.Token.ExpiresIn
  nameWithType: Token.ExpiresIn
- uid: RabbitMQ.Client.OAuth2.Token.RefreshToken
  name: RefreshToken
  href: api/RabbitMQ.Client.OAuth2.Token.html#RabbitMQ_Client_OAuth2_Token_RefreshToken
  commentId: P:RabbitMQ.Client.OAuth2.Token.RefreshToken
  fullName: RabbitMQ.Client.OAuth2.Token.RefreshToken
  nameWithType: Token.RefreshToken
- uid: RabbitMQ.Client.OAuth2.Token.RefreshToken*
  name: RefreshToken
  href: api/RabbitMQ.Client.OAuth2.Token.html#RabbitMQ_Client_OAuth2_Token_RefreshToken_
  commentId: Overload:RabbitMQ.Client.OAuth2.Token.RefreshToken
  isSpec: "True"
  fullName: RabbitMQ.Client.OAuth2.Token.RefreshToken
  nameWithType: Token.RefreshToken
- uid: RabbitMQ.Client.PlainMechanism
  name: PlainMechanism
  href: api/RabbitMQ.Client.PlainMechanism.html
  commentId: T:RabbitMQ.Client.PlainMechanism
  fullName: RabbitMQ.Client.PlainMechanism
  nameWithType: PlainMechanism
- uid: RabbitMQ.Client.PlainMechanism.HandleChallengeAsync(System.Byte[],RabbitMQ.Client.ConnectionConfig,System.Threading.CancellationToken)
  name: HandleChallengeAsync(byte[]?, ConnectionConfig, CancellationToken)
  href: api/RabbitMQ.Client.PlainMechanism.html#RabbitMQ_Client_PlainMechanism_HandleChallengeAsync_System_Byte___RabbitMQ_Client_ConnectionConfig_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.PlainMechanism.HandleChallengeAsync(System.Byte[],RabbitMQ.Client.ConnectionConfig,System.Threading.CancellationToken)
  name.vb: HandleChallengeAsync(Byte(), ConnectionConfig, CancellationToken)
  fullName: RabbitMQ.Client.PlainMechanism.HandleChallengeAsync(byte[]?, RabbitMQ.Client.ConnectionConfig, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.PlainMechanism.HandleChallengeAsync(Byte(), RabbitMQ.Client.ConnectionConfig, System.Threading.CancellationToken)
  nameWithType: PlainMechanism.HandleChallengeAsync(byte[]?, ConnectionConfig, CancellationToken)
  nameWithType.vb: PlainMechanism.HandleChallengeAsync(Byte(), ConnectionConfig, CancellationToken)
- uid: RabbitMQ.Client.PlainMechanism.HandleChallengeAsync*
  name: HandleChallengeAsync
  href: api/RabbitMQ.Client.PlainMechanism.html#RabbitMQ_Client_PlainMechanism_HandleChallengeAsync_
  commentId: Overload:RabbitMQ.Client.PlainMechanism.HandleChallengeAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.PlainMechanism.HandleChallengeAsync
  nameWithType: PlainMechanism.HandleChallengeAsync
- uid: RabbitMQ.Client.PlainMechanismFactory
  name: PlainMechanismFactory
  href: api/RabbitMQ.Client.PlainMechanismFactory.html
  commentId: T:RabbitMQ.Client.PlainMechanismFactory
  fullName: RabbitMQ.Client.PlainMechanismFactory
  nameWithType: PlainMechanismFactory
- uid: RabbitMQ.Client.PlainMechanismFactory.GetInstance
  name: GetInstance()
  href: api/RabbitMQ.Client.PlainMechanismFactory.html#RabbitMQ_Client_PlainMechanismFactory_GetInstance
  commentId: M:RabbitMQ.Client.PlainMechanismFactory.GetInstance
  fullName: RabbitMQ.Client.PlainMechanismFactory.GetInstance()
  nameWithType: PlainMechanismFactory.GetInstance()
- uid: RabbitMQ.Client.PlainMechanismFactory.GetInstance*
  name: GetInstance
  href: api/RabbitMQ.Client.PlainMechanismFactory.html#RabbitMQ_Client_PlainMechanismFactory_GetInstance_
  commentId: Overload:RabbitMQ.Client.PlainMechanismFactory.GetInstance
  isSpec: "True"
  fullName: RabbitMQ.Client.PlainMechanismFactory.GetInstance
  nameWithType: PlainMechanismFactory.GetInstance
- uid: RabbitMQ.Client.PlainMechanismFactory.Name
  name: Name
  href: api/RabbitMQ.Client.PlainMechanismFactory.html#RabbitMQ_Client_PlainMechanismFactory_Name
  commentId: P:RabbitMQ.Client.PlainMechanismFactory.Name
  fullName: RabbitMQ.Client.PlainMechanismFactory.Name
  nameWithType: PlainMechanismFactory.Name
- uid: RabbitMQ.Client.PlainMechanismFactory.Name*
  name: Name
  href: api/RabbitMQ.Client.PlainMechanismFactory.html#RabbitMQ_Client_PlainMechanismFactory_Name_
  commentId: Overload:RabbitMQ.Client.PlainMechanismFactory.Name
  isSpec: "True"
  fullName: RabbitMQ.Client.PlainMechanismFactory.Name
  nameWithType: PlainMechanismFactory.Name
- uid: RabbitMQ.Client.Protocols
  name: Protocols
  href: api/RabbitMQ.Client.Protocols.html
  commentId: T:RabbitMQ.Client.Protocols
  fullName: RabbitMQ.Client.Protocols
  nameWithType: Protocols
- uid: RabbitMQ.Client.Protocols.AMQP_0_9_1
  name: AMQP_0_9_1
  href: api/RabbitMQ.Client.Protocols.html#RabbitMQ_Client_Protocols_AMQP_0_9_1
  commentId: F:RabbitMQ.Client.Protocols.AMQP_0_9_1
  fullName: RabbitMQ.Client.Protocols.AMQP_0_9_1
  nameWithType: Protocols.AMQP_0_9_1
- uid: RabbitMQ.Client.Protocols.DefaultProtocol
  name: DefaultProtocol
  href: api/RabbitMQ.Client.Protocols.html#RabbitMQ_Client_Protocols_DefaultProtocol
  commentId: F:RabbitMQ.Client.Protocols.DefaultProtocol
  fullName: RabbitMQ.Client.Protocols.DefaultProtocol
  nameWithType: Protocols.DefaultProtocol
- uid: RabbitMQ.Client.PublicationAddress
  name: PublicationAddress
  href: api/RabbitMQ.Client.PublicationAddress.html
  commentId: T:RabbitMQ.Client.PublicationAddress
  fullName: RabbitMQ.Client.PublicationAddress
  nameWithType: PublicationAddress
- uid: RabbitMQ.Client.PublicationAddress.#ctor(System.String,System.String,System.String)
  name: PublicationAddress(string, string, string)
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress__ctor_System_String_System_String_System_String_
  commentId: M:RabbitMQ.Client.PublicationAddress.#ctor(System.String,System.String,System.String)
  name.vb: New(String, String, String)
  fullName: RabbitMQ.Client.PublicationAddress.PublicationAddress(string, string, string)
  fullName.vb: RabbitMQ.Client.PublicationAddress.New(String, String, String)
  nameWithType: PublicationAddress.PublicationAddress(string, string, string)
  nameWithType.vb: PublicationAddress.New(String, String, String)
- uid: RabbitMQ.Client.PublicationAddress.#ctor*
  name: PublicationAddress
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress__ctor_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.PublicationAddress.PublicationAddress
  fullName.vb: RabbitMQ.Client.PublicationAddress.New
  nameWithType: PublicationAddress.PublicationAddress
  nameWithType.vb: PublicationAddress.New
- uid: RabbitMQ.Client.PublicationAddress.ExchangeName
  name: ExchangeName
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_ExchangeName
  commentId: F:RabbitMQ.Client.PublicationAddress.ExchangeName
  fullName: RabbitMQ.Client.PublicationAddress.ExchangeName
  nameWithType: PublicationAddress.ExchangeName
- uid: RabbitMQ.Client.PublicationAddress.ExchangeType
  name: ExchangeType
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_ExchangeType
  commentId: F:RabbitMQ.Client.PublicationAddress.ExchangeType
  fullName: RabbitMQ.Client.PublicationAddress.ExchangeType
  nameWithType: PublicationAddress.ExchangeType
- uid: RabbitMQ.Client.PublicationAddress.PSEUDO_URI_PARSER
  name: PSEUDO_URI_PARSER
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_PSEUDO_URI_PARSER
  commentId: F:RabbitMQ.Client.PublicationAddress.PSEUDO_URI_PARSER
  fullName: RabbitMQ.Client.PublicationAddress.PSEUDO_URI_PARSER
  nameWithType: PublicationAddress.PSEUDO_URI_PARSER
- uid: RabbitMQ.Client.PublicationAddress.Parse(System.String)
  name: Parse(string)
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_Parse_System_String_
  commentId: M:RabbitMQ.Client.PublicationAddress.Parse(System.String)
  name.vb: Parse(String)
  fullName: RabbitMQ.Client.PublicationAddress.Parse(string)
  fullName.vb: RabbitMQ.Client.PublicationAddress.Parse(String)
  nameWithType: PublicationAddress.Parse(string)
  nameWithType.vb: PublicationAddress.Parse(String)
- uid: RabbitMQ.Client.PublicationAddress.Parse*
  name: Parse
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_Parse_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.Parse
  isSpec: "True"
  fullName: RabbitMQ.Client.PublicationAddress.Parse
  nameWithType: PublicationAddress.Parse
- uid: RabbitMQ.Client.PublicationAddress.RoutingKey
  name: RoutingKey
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_RoutingKey
  commentId: F:RabbitMQ.Client.PublicationAddress.RoutingKey
  fullName: RabbitMQ.Client.PublicationAddress.RoutingKey
  nameWithType: PublicationAddress.RoutingKey
- uid: RabbitMQ.Client.PublicationAddress.ToString
  name: ToString()
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_ToString
  commentId: M:RabbitMQ.Client.PublicationAddress.ToString
  fullName: RabbitMQ.Client.PublicationAddress.ToString()
  nameWithType: PublicationAddress.ToString()
- uid: RabbitMQ.Client.PublicationAddress.ToString*
  name: ToString
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_ToString_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.PublicationAddress.ToString
  nameWithType: PublicationAddress.ToString
- uid: RabbitMQ.Client.PublicationAddress.TryParse(System.String,RabbitMQ.Client.PublicationAddress@)
  name: TryParse(string?, out PublicationAddress?)
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_TryParse_System_String_RabbitMQ_Client_PublicationAddress__
  commentId: M:RabbitMQ.Client.PublicationAddress.TryParse(System.String,RabbitMQ.Client.PublicationAddress@)
  name.vb: TryParse(String, PublicationAddress)
  fullName: RabbitMQ.Client.PublicationAddress.TryParse(string?, out RabbitMQ.Client.PublicationAddress?)
  fullName.vb: RabbitMQ.Client.PublicationAddress.TryParse(String, RabbitMQ.Client.PublicationAddress)
  nameWithType: PublicationAddress.TryParse(string?, out PublicationAddress?)
  nameWithType.vb: PublicationAddress.TryParse(String, PublicationAddress)
- uid: RabbitMQ.Client.PublicationAddress.TryParse*
  name: TryParse
  href: api/RabbitMQ.Client.PublicationAddress.html#RabbitMQ_Client_PublicationAddress_TryParse_
  commentId: Overload:RabbitMQ.Client.PublicationAddress.TryParse
  isSpec: "True"
  fullName: RabbitMQ.Client.PublicationAddress.TryParse
  nameWithType: PublicationAddress.TryParse
- uid: RabbitMQ.Client.QueueDeclareOk
  name: QueueDeclareOk
  href: api/RabbitMQ.Client.QueueDeclareOk.html
  commentId: T:RabbitMQ.Client.QueueDeclareOk
  fullName: RabbitMQ.Client.QueueDeclareOk
  nameWithType: QueueDeclareOk
- uid: RabbitMQ.Client.QueueDeclareOk.#ctor(System.String,System.UInt32,System.UInt32)
  name: QueueDeclareOk(string, uint, uint)
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk__ctor_System_String_System_UInt32_System_UInt32_
  commentId: M:RabbitMQ.Client.QueueDeclareOk.#ctor(System.String,System.UInt32,System.UInt32)
  name.vb: New(String, UInteger, UInteger)
  fullName: RabbitMQ.Client.QueueDeclareOk.QueueDeclareOk(string, uint, uint)
  fullName.vb: RabbitMQ.Client.QueueDeclareOk.New(String, UInteger, UInteger)
  nameWithType: QueueDeclareOk.QueueDeclareOk(string, uint, uint)
  nameWithType.vb: QueueDeclareOk.New(String, UInteger, UInteger)
- uid: RabbitMQ.Client.QueueDeclareOk.#ctor*
  name: QueueDeclareOk
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk__ctor_
  commentId: Overload:RabbitMQ.Client.QueueDeclareOk.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.QueueDeclareOk.QueueDeclareOk
  fullName.vb: RabbitMQ.Client.QueueDeclareOk.New
  nameWithType: QueueDeclareOk.QueueDeclareOk
  nameWithType.vb: QueueDeclareOk.New
- uid: RabbitMQ.Client.QueueDeclareOk.ConsumerCount
  name: ConsumerCount
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_ConsumerCount
  commentId: F:RabbitMQ.Client.QueueDeclareOk.ConsumerCount
  fullName: RabbitMQ.Client.QueueDeclareOk.ConsumerCount
  nameWithType: QueueDeclareOk.ConsumerCount
- uid: RabbitMQ.Client.QueueDeclareOk.MessageCount
  name: MessageCount
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_MessageCount
  commentId: F:RabbitMQ.Client.QueueDeclareOk.MessageCount
  fullName: RabbitMQ.Client.QueueDeclareOk.MessageCount
  nameWithType: QueueDeclareOk.MessageCount
- uid: RabbitMQ.Client.QueueDeclareOk.QueueName
  name: QueueName
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_QueueName
  commentId: F:RabbitMQ.Client.QueueDeclareOk.QueueName
  fullName: RabbitMQ.Client.QueueDeclareOk.QueueName
  nameWithType: QueueDeclareOk.QueueName
- uid: RabbitMQ.Client.QueueDeclareOk.op_Implicit(RabbitMQ.Client.QueueDeclareOk)~System.String
  name: implicit operator string(QueueDeclareOk)
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_op_Implicit_RabbitMQ_Client_QueueDeclareOk__System_String
  commentId: M:RabbitMQ.Client.QueueDeclareOk.op_Implicit(RabbitMQ.Client.QueueDeclareOk)~System.String
  name.vb: CType(QueueDeclareOk)
  fullName: RabbitMQ.Client.QueueDeclareOk.implicit operator string(RabbitMQ.Client.QueueDeclareOk)
  fullName.vb: RabbitMQ.Client.QueueDeclareOk.CType(RabbitMQ.Client.QueueDeclareOk)
  nameWithType: QueueDeclareOk.implicit operator string(QueueDeclareOk)
  nameWithType.vb: QueueDeclareOk.CType(QueueDeclareOk)
- uid: RabbitMQ.Client.QueueDeclareOk.op_Implicit*
  name: implicit operator
  href: api/RabbitMQ.Client.QueueDeclareOk.html#RabbitMQ_Client_QueueDeclareOk_op_Implicit_
  commentId: Overload:RabbitMQ.Client.QueueDeclareOk.op_Implicit
  isSpec: "True"
  name.vb: CType
  fullName: RabbitMQ.Client.QueueDeclareOk.implicit operator
  fullName.vb: RabbitMQ.Client.QueueDeclareOk.CType
  nameWithType: QueueDeclareOk.implicit operator
  nameWithType.vb: QueueDeclareOk.CType
- uid: RabbitMQ.Client.RabbitMQActivitySource
  name: RabbitMQActivitySource
  href: api/RabbitMQ.Client.RabbitMQActivitySource.html
  commentId: T:RabbitMQ.Client.RabbitMQActivitySource
  fullName: RabbitMQ.Client.RabbitMQActivitySource
  nameWithType: RabbitMQActivitySource
- uid: RabbitMQ.Client.RabbitMQActivitySource.ContextExtractor
  name: ContextExtractor
  href: api/RabbitMQ.Client.RabbitMQActivitySource.html#RabbitMQ_Client_RabbitMQActivitySource_ContextExtractor
  commentId: P:RabbitMQ.Client.RabbitMQActivitySource.ContextExtractor
  fullName: RabbitMQ.Client.RabbitMQActivitySource.ContextExtractor
  nameWithType: RabbitMQActivitySource.ContextExtractor
- uid: RabbitMQ.Client.RabbitMQActivitySource.ContextExtractor*
  name: ContextExtractor
  href: api/RabbitMQ.Client.RabbitMQActivitySource.html#RabbitMQ_Client_RabbitMQActivitySource_ContextExtractor_
  commentId: Overload:RabbitMQ.Client.RabbitMQActivitySource.ContextExtractor
  isSpec: "True"
  fullName: RabbitMQ.Client.RabbitMQActivitySource.ContextExtractor
  nameWithType: RabbitMQActivitySource.ContextExtractor
- uid: RabbitMQ.Client.RabbitMQActivitySource.ContextInjector
  name: ContextInjector
  href: api/RabbitMQ.Client.RabbitMQActivitySource.html#RabbitMQ_Client_RabbitMQActivitySource_ContextInjector
  commentId: P:RabbitMQ.Client.RabbitMQActivitySource.ContextInjector
  fullName: RabbitMQ.Client.RabbitMQActivitySource.ContextInjector
  nameWithType: RabbitMQActivitySource.ContextInjector
- uid: RabbitMQ.Client.RabbitMQActivitySource.ContextInjector*
  name: ContextInjector
  href: api/RabbitMQ.Client.RabbitMQActivitySource.html#RabbitMQ_Client_RabbitMQActivitySource_ContextInjector_
  commentId: Overload:RabbitMQ.Client.RabbitMQActivitySource.ContextInjector
  isSpec: "True"
  fullName: RabbitMQ.Client.RabbitMQActivitySource.ContextInjector
  nameWithType: RabbitMQActivitySource.ContextInjector
- uid: RabbitMQ.Client.RabbitMQActivitySource.PublisherSourceName
  name: PublisherSourceName
  href: api/RabbitMQ.Client.RabbitMQActivitySource.html#RabbitMQ_Client_RabbitMQActivitySource_PublisherSourceName
  commentId: F:RabbitMQ.Client.RabbitMQActivitySource.PublisherSourceName
  fullName: RabbitMQ.Client.RabbitMQActivitySource.PublisherSourceName
  nameWithType: RabbitMQActivitySource.PublisherSourceName
- uid: RabbitMQ.Client.RabbitMQActivitySource.SubscriberSourceName
  name: SubscriberSourceName
  href: api/RabbitMQ.Client.RabbitMQActivitySource.html#RabbitMQ_Client_RabbitMQActivitySource_SubscriberSourceName
  commentId: F:RabbitMQ.Client.RabbitMQActivitySource.SubscriberSourceName
  fullName: RabbitMQ.Client.RabbitMQActivitySource.SubscriberSourceName
  nameWithType: RabbitMQActivitySource.SubscriberSourceName
- uid: RabbitMQ.Client.RabbitMQActivitySource.UseRoutingKeyAsOperationName
  name: UseRoutingKeyAsOperationName
  href: api/RabbitMQ.Client.RabbitMQActivitySource.html#RabbitMQ_Client_RabbitMQActivitySource_UseRoutingKeyAsOperationName
  commentId: P:RabbitMQ.Client.RabbitMQActivitySource.UseRoutingKeyAsOperationName
  fullName: RabbitMQ.Client.RabbitMQActivitySource.UseRoutingKeyAsOperationName
  nameWithType: RabbitMQActivitySource.UseRoutingKeyAsOperationName
- uid: RabbitMQ.Client.RabbitMQActivitySource.UseRoutingKeyAsOperationName*
  name: UseRoutingKeyAsOperationName
  href: api/RabbitMQ.Client.RabbitMQActivitySource.html#RabbitMQ_Client_RabbitMQActivitySource_UseRoutingKeyAsOperationName_
  commentId: Overload:RabbitMQ.Client.RabbitMQActivitySource.UseRoutingKeyAsOperationName
  isSpec: "True"
  fullName: RabbitMQ.Client.RabbitMQActivitySource.UseRoutingKeyAsOperationName
  nameWithType: RabbitMQActivitySource.UseRoutingKeyAsOperationName
- uid: RabbitMQ.Client.ReadOnlyBasicProperties
  name: ReadOnlyBasicProperties
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html
  commentId: T:RabbitMQ.Client.ReadOnlyBasicProperties
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties
  nameWithType: ReadOnlyBasicProperties
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.#ctor(System.ReadOnlySpan{System.Byte})
  name: ReadOnlyBasicProperties(ReadOnlySpan<byte>)
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties__ctor_System_ReadOnlySpan_System_Byte__
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.#ctor(System.ReadOnlySpan{System.Byte})
  name.vb: New(ReadOnlySpan(Of Byte))
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ReadOnlyBasicProperties(System.ReadOnlySpan<byte>)
  fullName.vb: RabbitMQ.Client.ReadOnlyBasicProperties.New(System.ReadOnlySpan(Of Byte))
  nameWithType: ReadOnlyBasicProperties.ReadOnlyBasicProperties(ReadOnlySpan<byte>)
  nameWithType.vb: ReadOnlyBasicProperties.New(ReadOnlySpan(Of Byte))
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.#ctor*
  name: ReadOnlyBasicProperties
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties__ctor_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ReadOnlyBasicProperties
  fullName.vb: RabbitMQ.Client.ReadOnlyBasicProperties.New
  nameWithType: ReadOnlyBasicProperties.ReadOnlyBasicProperties
  nameWithType.vb: ReadOnlyBasicProperties.New
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.AppId
  name: AppId
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_AppId
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.AppId
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.AppId
  nameWithType: ReadOnlyBasicProperties.AppId
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.AppId*
  name: AppId
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_AppId_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.AppId
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.AppId
  nameWithType: ReadOnlyBasicProperties.AppId
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.ClusterId
  name: ClusterId
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_ClusterId
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.ClusterId
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ClusterId
  nameWithType: ReadOnlyBasicProperties.ClusterId
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.ClusterId*
  name: ClusterId
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_ClusterId_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.ClusterId
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ClusterId
  nameWithType: ReadOnlyBasicProperties.ClusterId
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.ContentEncoding
  name: ContentEncoding
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_ContentEncoding
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.ContentEncoding
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ContentEncoding
  nameWithType: ReadOnlyBasicProperties.ContentEncoding
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.ContentEncoding*
  name: ContentEncoding
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_ContentEncoding_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.ContentEncoding
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ContentEncoding
  nameWithType: ReadOnlyBasicProperties.ContentEncoding
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.ContentType
  name: ContentType
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_ContentType
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.ContentType
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ContentType
  nameWithType: ReadOnlyBasicProperties.ContentType
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.ContentType*
  name: ContentType
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_ContentType_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.ContentType
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ContentType
  nameWithType: ReadOnlyBasicProperties.ContentType
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.CorrelationId
  name: CorrelationId
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_CorrelationId
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.CorrelationId
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.CorrelationId
  nameWithType: ReadOnlyBasicProperties.CorrelationId
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.CorrelationId*
  name: CorrelationId
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_CorrelationId_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.CorrelationId
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.CorrelationId
  nameWithType: ReadOnlyBasicProperties.CorrelationId
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.DeliveryMode
  name: DeliveryMode
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_DeliveryMode
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.DeliveryMode
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.DeliveryMode
  nameWithType: ReadOnlyBasicProperties.DeliveryMode
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.DeliveryMode*
  name: DeliveryMode
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_DeliveryMode_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.DeliveryMode
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.DeliveryMode
  nameWithType: ReadOnlyBasicProperties.DeliveryMode
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Expiration
  name: Expiration
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Expiration
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.Expiration
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Expiration
  nameWithType: ReadOnlyBasicProperties.Expiration
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Expiration*
  name: Expiration
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Expiration_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.Expiration
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Expiration
  nameWithType: ReadOnlyBasicProperties.Expiration
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Headers
  name: Headers
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Headers
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.Headers
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Headers
  nameWithType: ReadOnlyBasicProperties.Headers
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Headers*
  name: Headers
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Headers_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.Headers
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Headers
  nameWithType: ReadOnlyBasicProperties.Headers
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsAppIdPresent
  name: IsAppIdPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsAppIdPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsAppIdPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsAppIdPresent()
  nameWithType: ReadOnlyBasicProperties.IsAppIdPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsAppIdPresent*
  name: IsAppIdPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsAppIdPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsAppIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsAppIdPresent
  nameWithType: ReadOnlyBasicProperties.IsAppIdPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsClusterIdPresent
  name: IsClusterIdPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsClusterIdPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsClusterIdPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsClusterIdPresent()
  nameWithType: ReadOnlyBasicProperties.IsClusterIdPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsClusterIdPresent*
  name: IsClusterIdPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsClusterIdPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsClusterIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsClusterIdPresent
  nameWithType: ReadOnlyBasicProperties.IsClusterIdPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsContentEncodingPresent
  name: IsContentEncodingPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsContentEncodingPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsContentEncodingPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsContentEncodingPresent()
  nameWithType: ReadOnlyBasicProperties.IsContentEncodingPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsContentEncodingPresent*
  name: IsContentEncodingPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsContentEncodingPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsContentEncodingPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsContentEncodingPresent
  nameWithType: ReadOnlyBasicProperties.IsContentEncodingPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsContentTypePresent
  name: IsContentTypePresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsContentTypePresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsContentTypePresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsContentTypePresent()
  nameWithType: ReadOnlyBasicProperties.IsContentTypePresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsContentTypePresent*
  name: IsContentTypePresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsContentTypePresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsContentTypePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsContentTypePresent
  nameWithType: ReadOnlyBasicProperties.IsContentTypePresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsCorrelationIdPresent
  name: IsCorrelationIdPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsCorrelationIdPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsCorrelationIdPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsCorrelationIdPresent()
  nameWithType: ReadOnlyBasicProperties.IsCorrelationIdPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsCorrelationIdPresent*
  name: IsCorrelationIdPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsCorrelationIdPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsCorrelationIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsCorrelationIdPresent
  nameWithType: ReadOnlyBasicProperties.IsCorrelationIdPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsDeliveryModePresent
  name: IsDeliveryModePresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsDeliveryModePresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsDeliveryModePresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsDeliveryModePresent()
  nameWithType: ReadOnlyBasicProperties.IsDeliveryModePresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsDeliveryModePresent*
  name: IsDeliveryModePresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsDeliveryModePresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsDeliveryModePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsDeliveryModePresent
  nameWithType: ReadOnlyBasicProperties.IsDeliveryModePresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsExpirationPresent
  name: IsExpirationPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsExpirationPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsExpirationPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsExpirationPresent()
  nameWithType: ReadOnlyBasicProperties.IsExpirationPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsExpirationPresent*
  name: IsExpirationPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsExpirationPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsExpirationPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsExpirationPresent
  nameWithType: ReadOnlyBasicProperties.IsExpirationPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsHeadersPresent
  name: IsHeadersPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsHeadersPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsHeadersPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsHeadersPresent()
  nameWithType: ReadOnlyBasicProperties.IsHeadersPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsHeadersPresent*
  name: IsHeadersPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsHeadersPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsHeadersPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsHeadersPresent
  nameWithType: ReadOnlyBasicProperties.IsHeadersPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsMessageIdPresent
  name: IsMessageIdPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsMessageIdPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsMessageIdPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsMessageIdPresent()
  nameWithType: ReadOnlyBasicProperties.IsMessageIdPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsMessageIdPresent*
  name: IsMessageIdPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsMessageIdPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsMessageIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsMessageIdPresent
  nameWithType: ReadOnlyBasicProperties.IsMessageIdPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsPriorityPresent
  name: IsPriorityPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsPriorityPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsPriorityPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsPriorityPresent()
  nameWithType: ReadOnlyBasicProperties.IsPriorityPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsPriorityPresent*
  name: IsPriorityPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsPriorityPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsPriorityPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsPriorityPresent
  nameWithType: ReadOnlyBasicProperties.IsPriorityPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsReplyToPresent
  name: IsReplyToPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsReplyToPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsReplyToPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsReplyToPresent()
  nameWithType: ReadOnlyBasicProperties.IsReplyToPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsReplyToPresent*
  name: IsReplyToPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsReplyToPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsReplyToPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsReplyToPresent
  nameWithType: ReadOnlyBasicProperties.IsReplyToPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsTimestampPresent
  name: IsTimestampPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsTimestampPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsTimestampPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsTimestampPresent()
  nameWithType: ReadOnlyBasicProperties.IsTimestampPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsTimestampPresent*
  name: IsTimestampPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsTimestampPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsTimestampPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsTimestampPresent
  nameWithType: ReadOnlyBasicProperties.IsTimestampPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsTypePresent
  name: IsTypePresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsTypePresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsTypePresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsTypePresent()
  nameWithType: ReadOnlyBasicProperties.IsTypePresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsTypePresent*
  name: IsTypePresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsTypePresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsTypePresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsTypePresent
  nameWithType: ReadOnlyBasicProperties.IsTypePresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsUserIdPresent
  name: IsUserIdPresent()
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsUserIdPresent
  commentId: M:RabbitMQ.Client.ReadOnlyBasicProperties.IsUserIdPresent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsUserIdPresent()
  nameWithType: ReadOnlyBasicProperties.IsUserIdPresent()
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.IsUserIdPresent*
  name: IsUserIdPresent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_IsUserIdPresent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.IsUserIdPresent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.IsUserIdPresent
  nameWithType: ReadOnlyBasicProperties.IsUserIdPresent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.MessageId
  name: MessageId
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_MessageId
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.MessageId
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.MessageId
  nameWithType: ReadOnlyBasicProperties.MessageId
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.MessageId*
  name: MessageId
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_MessageId_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.MessageId
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.MessageId
  nameWithType: ReadOnlyBasicProperties.MessageId
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Persistent
  name: Persistent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Persistent
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.Persistent
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Persistent
  nameWithType: ReadOnlyBasicProperties.Persistent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Persistent*
  name: Persistent
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Persistent_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.Persistent
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Persistent
  nameWithType: ReadOnlyBasicProperties.Persistent
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Priority
  name: Priority
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Priority
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.Priority
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Priority
  nameWithType: ReadOnlyBasicProperties.Priority
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Priority*
  name: Priority
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Priority_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.Priority
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Priority
  nameWithType: ReadOnlyBasicProperties.Priority
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.ReplyTo
  name: ReplyTo
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_ReplyTo
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.ReplyTo
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ReplyTo
  nameWithType: ReadOnlyBasicProperties.ReplyTo
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.ReplyTo*
  name: ReplyTo
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_ReplyTo_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.ReplyTo
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ReplyTo
  nameWithType: ReadOnlyBasicProperties.ReplyTo
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.ReplyToAddress
  name: ReplyToAddress
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_ReplyToAddress
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.ReplyToAddress
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ReplyToAddress
  nameWithType: ReadOnlyBasicProperties.ReplyToAddress
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.ReplyToAddress*
  name: ReplyToAddress
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_ReplyToAddress_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.ReplyToAddress
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.ReplyToAddress
  nameWithType: ReadOnlyBasicProperties.ReplyToAddress
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Timestamp
  name: Timestamp
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Timestamp
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.Timestamp
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Timestamp
  nameWithType: ReadOnlyBasicProperties.Timestamp
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Timestamp*
  name: Timestamp
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Timestamp_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.Timestamp
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Timestamp
  nameWithType: ReadOnlyBasicProperties.Timestamp
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Type
  name: Type
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Type
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.Type
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Type
  nameWithType: ReadOnlyBasicProperties.Type
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.Type*
  name: Type
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_Type_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.Type
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.Type
  nameWithType: ReadOnlyBasicProperties.Type
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.UserId
  name: UserId
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_UserId
  commentId: P:RabbitMQ.Client.ReadOnlyBasicProperties.UserId
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.UserId
  nameWithType: ReadOnlyBasicProperties.UserId
- uid: RabbitMQ.Client.ReadOnlyBasicProperties.UserId*
  name: UserId
  href: api/RabbitMQ.Client.ReadOnlyBasicProperties.html#RabbitMQ_Client_ReadOnlyBasicProperties_UserId_
  commentId: Overload:RabbitMQ.Client.ReadOnlyBasicProperties.UserId
  isSpec: "True"
  fullName: RabbitMQ.Client.ReadOnlyBasicProperties.UserId
  nameWithType: ReadOnlyBasicProperties.UserId
- uid: RabbitMQ.Client.ShutdownInitiator
  name: ShutdownInitiator
  href: api/RabbitMQ.Client.ShutdownInitiator.html
  commentId: T:RabbitMQ.Client.ShutdownInitiator
  fullName: RabbitMQ.Client.ShutdownInitiator
  nameWithType: ShutdownInitiator
- uid: RabbitMQ.Client.ShutdownInitiator.Application
  name: Application
  href: api/RabbitMQ.Client.ShutdownInitiator.html#RabbitMQ_Client_ShutdownInitiator_Application
  commentId: F:RabbitMQ.Client.ShutdownInitiator.Application
  fullName: RabbitMQ.Client.ShutdownInitiator.Application
  nameWithType: ShutdownInitiator.Application
- uid: RabbitMQ.Client.ShutdownInitiator.Library
  name: Library
  href: api/RabbitMQ.Client.ShutdownInitiator.html#RabbitMQ_Client_ShutdownInitiator_Library
  commentId: F:RabbitMQ.Client.ShutdownInitiator.Library
  fullName: RabbitMQ.Client.ShutdownInitiator.Library
  nameWithType: ShutdownInitiator.Library
- uid: RabbitMQ.Client.ShutdownInitiator.Peer
  name: Peer
  href: api/RabbitMQ.Client.ShutdownInitiator.html#RabbitMQ_Client_ShutdownInitiator_Peer
  commentId: F:RabbitMQ.Client.ShutdownInitiator.Peer
  fullName: RabbitMQ.Client.ShutdownInitiator.Peer
  nameWithType: ShutdownInitiator.Peer
- uid: RabbitMQ.Client.ShutdownReportEntry
  name: ShutdownReportEntry
  href: api/RabbitMQ.Client.ShutdownReportEntry.html
  commentId: T:RabbitMQ.Client.ShutdownReportEntry
  fullName: RabbitMQ.Client.ShutdownReportEntry
  nameWithType: ShutdownReportEntry
- uid: RabbitMQ.Client.ShutdownReportEntry.#ctor(System.String,System.Exception)
  name: ShutdownReportEntry(string, Exception?)
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry__ctor_System_String_System_Exception_
  commentId: M:RabbitMQ.Client.ShutdownReportEntry.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: RabbitMQ.Client.ShutdownReportEntry.ShutdownReportEntry(string, System.Exception?)
  fullName.vb: RabbitMQ.Client.ShutdownReportEntry.New(String, System.Exception)
  nameWithType: ShutdownReportEntry.ShutdownReportEntry(string, Exception?)
  nameWithType.vb: ShutdownReportEntry.New(String, Exception)
- uid: RabbitMQ.Client.ShutdownReportEntry.#ctor*
  name: ShutdownReportEntry
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry__ctor_
  commentId: Overload:RabbitMQ.Client.ShutdownReportEntry.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.ShutdownReportEntry.ShutdownReportEntry
  fullName.vb: RabbitMQ.Client.ShutdownReportEntry.New
  nameWithType: ShutdownReportEntry.ShutdownReportEntry
  nameWithType.vb: ShutdownReportEntry.New
- uid: RabbitMQ.Client.ShutdownReportEntry.Description
  name: Description
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_Description
  commentId: P:RabbitMQ.Client.ShutdownReportEntry.Description
  fullName: RabbitMQ.Client.ShutdownReportEntry.Description
  nameWithType: ShutdownReportEntry.Description
- uid: RabbitMQ.Client.ShutdownReportEntry.Description*
  name: Description
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_Description_
  commentId: Overload:RabbitMQ.Client.ShutdownReportEntry.Description
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownReportEntry.Description
  nameWithType: ShutdownReportEntry.Description
- uid: RabbitMQ.Client.ShutdownReportEntry.Exception
  name: Exception
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_Exception
  commentId: P:RabbitMQ.Client.ShutdownReportEntry.Exception
  fullName: RabbitMQ.Client.ShutdownReportEntry.Exception
  nameWithType: ShutdownReportEntry.Exception
- uid: RabbitMQ.Client.ShutdownReportEntry.Exception*
  name: Exception
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_Exception_
  commentId: Overload:RabbitMQ.Client.ShutdownReportEntry.Exception
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownReportEntry.Exception
  nameWithType: ShutdownReportEntry.Exception
- uid: RabbitMQ.Client.ShutdownReportEntry.ToString
  name: ToString()
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_ToString
  commentId: M:RabbitMQ.Client.ShutdownReportEntry.ToString
  fullName: RabbitMQ.Client.ShutdownReportEntry.ToString()
  nameWithType: ShutdownReportEntry.ToString()
- uid: RabbitMQ.Client.ShutdownReportEntry.ToString*
  name: ToString
  href: api/RabbitMQ.Client.ShutdownReportEntry.html#RabbitMQ_Client_ShutdownReportEntry_ToString_
  commentId: Overload:RabbitMQ.Client.ShutdownReportEntry.ToString
  isSpec: "True"
  fullName: RabbitMQ.Client.ShutdownReportEntry.ToString
  nameWithType: ShutdownReportEntry.ToString
- uid: RabbitMQ.Client.SslOption
  name: SslOption
  href: api/RabbitMQ.Client.SslOption.html
  commentId: T:RabbitMQ.Client.SslOption
  fullName: RabbitMQ.Client.SslOption
  nameWithType: SslOption
- uid: RabbitMQ.Client.SslOption.#ctor
  name: SslOption()
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption__ctor
  commentId: M:RabbitMQ.Client.SslOption.#ctor
  name.vb: New()
  fullName: RabbitMQ.Client.SslOption.SslOption()
  fullName.vb: RabbitMQ.Client.SslOption.New()
  nameWithType: SslOption.SslOption()
  nameWithType.vb: SslOption.New()
- uid: RabbitMQ.Client.SslOption.#ctor(System.String,System.String,System.Boolean)
  name: SslOption(string, string, bool)
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption__ctor_System_String_System_String_System_Boolean_
  commentId: M:RabbitMQ.Client.SslOption.#ctor(System.String,System.String,System.Boolean)
  name.vb: New(String, String, Boolean)
  fullName: RabbitMQ.Client.SslOption.SslOption(string, string, bool)
  fullName.vb: RabbitMQ.Client.SslOption.New(String, String, Boolean)
  nameWithType: SslOption.SslOption(string, string, bool)
  nameWithType.vb: SslOption.New(String, String, Boolean)
- uid: RabbitMQ.Client.SslOption.#ctor*
  name: SslOption
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption__ctor_
  commentId: Overload:RabbitMQ.Client.SslOption.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.SslOption.SslOption
  fullName.vb: RabbitMQ.Client.SslOption.New
  nameWithType: SslOption.SslOption
  nameWithType.vb: SslOption.New
- uid: RabbitMQ.Client.SslOption.AcceptablePolicyErrors
  name: AcceptablePolicyErrors
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_AcceptablePolicyErrors
  commentId: P:RabbitMQ.Client.SslOption.AcceptablePolicyErrors
  fullName: RabbitMQ.Client.SslOption.AcceptablePolicyErrors
  nameWithType: SslOption.AcceptablePolicyErrors
- uid: RabbitMQ.Client.SslOption.AcceptablePolicyErrors*
  name: AcceptablePolicyErrors
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_AcceptablePolicyErrors_
  commentId: Overload:RabbitMQ.Client.SslOption.AcceptablePolicyErrors
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.AcceptablePolicyErrors
  nameWithType: SslOption.AcceptablePolicyErrors
- uid: RabbitMQ.Client.SslOption.CertPassphrase
  name: CertPassphrase
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertPassphrase
  commentId: P:RabbitMQ.Client.SslOption.CertPassphrase
  fullName: RabbitMQ.Client.SslOption.CertPassphrase
  nameWithType: SslOption.CertPassphrase
- uid: RabbitMQ.Client.SslOption.CertPassphrase*
  name: CertPassphrase
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertPassphrase_
  commentId: Overload:RabbitMQ.Client.SslOption.CertPassphrase
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.CertPassphrase
  nameWithType: SslOption.CertPassphrase
- uid: RabbitMQ.Client.SslOption.CertPath
  name: CertPath
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertPath
  commentId: P:RabbitMQ.Client.SslOption.CertPath
  fullName: RabbitMQ.Client.SslOption.CertPath
  nameWithType: SslOption.CertPath
- uid: RabbitMQ.Client.SslOption.CertPath*
  name: CertPath
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertPath_
  commentId: Overload:RabbitMQ.Client.SslOption.CertPath
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.CertPath
  nameWithType: SslOption.CertPath
- uid: RabbitMQ.Client.SslOption.CertificateSelectionCallback
  name: CertificateSelectionCallback
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertificateSelectionCallback
  commentId: P:RabbitMQ.Client.SslOption.CertificateSelectionCallback
  fullName: RabbitMQ.Client.SslOption.CertificateSelectionCallback
  nameWithType: SslOption.CertificateSelectionCallback
- uid: RabbitMQ.Client.SslOption.CertificateSelectionCallback*
  name: CertificateSelectionCallback
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertificateSelectionCallback_
  commentId: Overload:RabbitMQ.Client.SslOption.CertificateSelectionCallback
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.CertificateSelectionCallback
  nameWithType: SslOption.CertificateSelectionCallback
- uid: RabbitMQ.Client.SslOption.CertificateValidationCallback
  name: CertificateValidationCallback
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertificateValidationCallback
  commentId: P:RabbitMQ.Client.SslOption.CertificateValidationCallback
  fullName: RabbitMQ.Client.SslOption.CertificateValidationCallback
  nameWithType: SslOption.CertificateValidationCallback
- uid: RabbitMQ.Client.SslOption.CertificateValidationCallback*
  name: CertificateValidationCallback
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CertificateValidationCallback_
  commentId: Overload:RabbitMQ.Client.SslOption.CertificateValidationCallback
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.CertificateValidationCallback
  nameWithType: SslOption.CertificateValidationCallback
- uid: RabbitMQ.Client.SslOption.Certs
  name: Certs
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Certs
  commentId: P:RabbitMQ.Client.SslOption.Certs
  fullName: RabbitMQ.Client.SslOption.Certs
  nameWithType: SslOption.Certs
- uid: RabbitMQ.Client.SslOption.Certs*
  name: Certs
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Certs_
  commentId: Overload:RabbitMQ.Client.SslOption.Certs
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.Certs
  nameWithType: SslOption.Certs
- uid: RabbitMQ.Client.SslOption.CheckCertificateRevocation
  name: CheckCertificateRevocation
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CheckCertificateRevocation
  commentId: P:RabbitMQ.Client.SslOption.CheckCertificateRevocation
  fullName: RabbitMQ.Client.SslOption.CheckCertificateRevocation
  nameWithType: SslOption.CheckCertificateRevocation
- uid: RabbitMQ.Client.SslOption.CheckCertificateRevocation*
  name: CheckCertificateRevocation
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_CheckCertificateRevocation_
  commentId: Overload:RabbitMQ.Client.SslOption.CheckCertificateRevocation
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.CheckCertificateRevocation
  nameWithType: SslOption.CheckCertificateRevocation
- uid: RabbitMQ.Client.SslOption.Enabled
  name: Enabled
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Enabled
  commentId: P:RabbitMQ.Client.SslOption.Enabled
  fullName: RabbitMQ.Client.SslOption.Enabled
  nameWithType: SslOption.Enabled
- uid: RabbitMQ.Client.SslOption.Enabled*
  name: Enabled
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Enabled_
  commentId: Overload:RabbitMQ.Client.SslOption.Enabled
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.Enabled
  nameWithType: SslOption.Enabled
- uid: RabbitMQ.Client.SslOption.ServerName
  name: ServerName
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_ServerName
  commentId: P:RabbitMQ.Client.SslOption.ServerName
  fullName: RabbitMQ.Client.SslOption.ServerName
  nameWithType: SslOption.ServerName
- uid: RabbitMQ.Client.SslOption.ServerName*
  name: ServerName
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_ServerName_
  commentId: Overload:RabbitMQ.Client.SslOption.ServerName
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.ServerName
  nameWithType: SslOption.ServerName
- uid: RabbitMQ.Client.SslOption.Version
  name: Version
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Version
  commentId: P:RabbitMQ.Client.SslOption.Version
  fullName: RabbitMQ.Client.SslOption.Version
  nameWithType: SslOption.Version
- uid: RabbitMQ.Client.SslOption.Version*
  name: Version
  href: api/RabbitMQ.Client.SslOption.html#RabbitMQ_Client_SslOption_Version_
  commentId: Overload:RabbitMQ.Client.SslOption.Version
  isSpec: "True"
  fullName: RabbitMQ.Client.SslOption.Version
  nameWithType: SslOption.Version
- uid: RabbitMQ.Client.TcpClientAdapter
  name: TcpClientAdapter
  href: api/RabbitMQ.Client.TcpClientAdapter.html
  commentId: T:RabbitMQ.Client.TcpClientAdapter
  fullName: RabbitMQ.Client.TcpClientAdapter
  nameWithType: TcpClientAdapter
- uid: RabbitMQ.Client.TcpClientAdapter.#ctor(System.Net.Sockets.Socket)
  name: TcpClientAdapter(Socket)
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter__ctor_System_Net_Sockets_Socket_
  commentId: M:RabbitMQ.Client.TcpClientAdapter.#ctor(System.Net.Sockets.Socket)
  name.vb: New(Socket)
  fullName: RabbitMQ.Client.TcpClientAdapter.TcpClientAdapter(System.Net.Sockets.Socket)
  fullName.vb: RabbitMQ.Client.TcpClientAdapter.New(System.Net.Sockets.Socket)
  nameWithType: TcpClientAdapter.TcpClientAdapter(Socket)
  nameWithType.vb: TcpClientAdapter.New(Socket)
- uid: RabbitMQ.Client.TcpClientAdapter.#ctor*
  name: TcpClientAdapter
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter__ctor_
  commentId: Overload:RabbitMQ.Client.TcpClientAdapter.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.TcpClientAdapter.TcpClientAdapter
  fullName.vb: RabbitMQ.Client.TcpClientAdapter.New
  nameWithType: TcpClientAdapter.TcpClientAdapter
  nameWithType.vb: TcpClientAdapter.New
- uid: RabbitMQ.Client.TcpClientAdapter.Client
  name: Client
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_Client
  commentId: P:RabbitMQ.Client.TcpClientAdapter.Client
  fullName: RabbitMQ.Client.TcpClientAdapter.Client
  nameWithType: TcpClientAdapter.Client
- uid: RabbitMQ.Client.TcpClientAdapter.Client*
  name: Client
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_Client_
  commentId: Overload:RabbitMQ.Client.TcpClientAdapter.Client
  isSpec: "True"
  fullName: RabbitMQ.Client.TcpClientAdapter.Client
  nameWithType: TcpClientAdapter.Client
- uid: RabbitMQ.Client.TcpClientAdapter.Close
  name: Close()
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_Close
  commentId: M:RabbitMQ.Client.TcpClientAdapter.Close
  fullName: RabbitMQ.Client.TcpClientAdapter.Close()
  nameWithType: TcpClientAdapter.Close()
- uid: RabbitMQ.Client.TcpClientAdapter.Close*
  name: Close
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_Close_
  commentId: Overload:RabbitMQ.Client.TcpClientAdapter.Close
  isSpec: "True"
  fullName: RabbitMQ.Client.TcpClientAdapter.Close
  nameWithType: TcpClientAdapter.Close
- uid: RabbitMQ.Client.TcpClientAdapter.ConnectAsync(System.Net.IPAddress,System.Int32,System.Threading.CancellationToken)
  name: ConnectAsync(IPAddress, int, CancellationToken)
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_ConnectAsync_System_Net_IPAddress_System_Int32_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.TcpClientAdapter.ConnectAsync(System.Net.IPAddress,System.Int32,System.Threading.CancellationToken)
  name.vb: ConnectAsync(IPAddress, Integer, CancellationToken)
  fullName: RabbitMQ.Client.TcpClientAdapter.ConnectAsync(System.Net.IPAddress, int, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.TcpClientAdapter.ConnectAsync(System.Net.IPAddress, Integer, System.Threading.CancellationToken)
  nameWithType: TcpClientAdapter.ConnectAsync(IPAddress, int, CancellationToken)
  nameWithType.vb: TcpClientAdapter.ConnectAsync(IPAddress, Integer, CancellationToken)
- uid: RabbitMQ.Client.TcpClientAdapter.ConnectAsync*
  name: ConnectAsync
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_ConnectAsync_
  commentId: Overload:RabbitMQ.Client.TcpClientAdapter.ConnectAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.TcpClientAdapter.ConnectAsync
  nameWithType: TcpClientAdapter.ConnectAsync
- uid: RabbitMQ.Client.TcpClientAdapter.Connected
  name: Connected
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_Connected
  commentId: P:RabbitMQ.Client.TcpClientAdapter.Connected
  fullName: RabbitMQ.Client.TcpClientAdapter.Connected
  nameWithType: TcpClientAdapter.Connected
- uid: RabbitMQ.Client.TcpClientAdapter.Connected*
  name: Connected
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_Connected_
  commentId: Overload:RabbitMQ.Client.TcpClientAdapter.Connected
  isSpec: "True"
  fullName: RabbitMQ.Client.TcpClientAdapter.Connected
  nameWithType: TcpClientAdapter.Connected
- uid: RabbitMQ.Client.TcpClientAdapter.Dispose
  name: Dispose()
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_Dispose
  commentId: M:RabbitMQ.Client.TcpClientAdapter.Dispose
  fullName: RabbitMQ.Client.TcpClientAdapter.Dispose()
  nameWithType: TcpClientAdapter.Dispose()
- uid: RabbitMQ.Client.TcpClientAdapter.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_Dispose_System_Boolean_
  commentId: M:RabbitMQ.Client.TcpClientAdapter.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: RabbitMQ.Client.TcpClientAdapter.Dispose(bool)
  fullName.vb: RabbitMQ.Client.TcpClientAdapter.Dispose(Boolean)
  nameWithType: TcpClientAdapter.Dispose(bool)
  nameWithType.vb: TcpClientAdapter.Dispose(Boolean)
- uid: RabbitMQ.Client.TcpClientAdapter.Dispose*
  name: Dispose
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_Dispose_
  commentId: Overload:RabbitMQ.Client.TcpClientAdapter.Dispose
  isSpec: "True"
  fullName: RabbitMQ.Client.TcpClientAdapter.Dispose
  nameWithType: TcpClientAdapter.Dispose
- uid: RabbitMQ.Client.TcpClientAdapter.GetMatchingHost(System.Collections.Generic.IReadOnlyCollection{System.Net.IPAddress},System.Net.Sockets.AddressFamily)
  name: GetMatchingHost(IReadOnlyCollection<IPAddress>, AddressFamily)
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_GetMatchingHost_System_Collections_Generic_IReadOnlyCollection_System_Net_IPAddress__System_Net_Sockets_AddressFamily_
  commentId: M:RabbitMQ.Client.TcpClientAdapter.GetMatchingHost(System.Collections.Generic.IReadOnlyCollection{System.Net.IPAddress},System.Net.Sockets.AddressFamily)
  name.vb: GetMatchingHost(IReadOnlyCollection(Of IPAddress), AddressFamily)
  fullName: RabbitMQ.Client.TcpClientAdapter.GetMatchingHost(System.Collections.Generic.IReadOnlyCollection<System.Net.IPAddress>, System.Net.Sockets.AddressFamily)
  fullName.vb: RabbitMQ.Client.TcpClientAdapter.GetMatchingHost(System.Collections.Generic.IReadOnlyCollection(Of System.Net.IPAddress), System.Net.Sockets.AddressFamily)
  nameWithType: TcpClientAdapter.GetMatchingHost(IReadOnlyCollection<IPAddress>, AddressFamily)
  nameWithType.vb: TcpClientAdapter.GetMatchingHost(IReadOnlyCollection(Of IPAddress), AddressFamily)
- uid: RabbitMQ.Client.TcpClientAdapter.GetMatchingHost*
  name: GetMatchingHost
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_GetMatchingHost_
  commentId: Overload:RabbitMQ.Client.TcpClientAdapter.GetMatchingHost
  isSpec: "True"
  fullName: RabbitMQ.Client.TcpClientAdapter.GetMatchingHost
  nameWithType: TcpClientAdapter.GetMatchingHost
- uid: RabbitMQ.Client.TcpClientAdapter.GetStream
  name: GetStream()
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_GetStream
  commentId: M:RabbitMQ.Client.TcpClientAdapter.GetStream
  fullName: RabbitMQ.Client.TcpClientAdapter.GetStream()
  nameWithType: TcpClientAdapter.GetStream()
- uid: RabbitMQ.Client.TcpClientAdapter.GetStream*
  name: GetStream
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_GetStream_
  commentId: Overload:RabbitMQ.Client.TcpClientAdapter.GetStream
  isSpec: "True"
  fullName: RabbitMQ.Client.TcpClientAdapter.GetStream
  nameWithType: TcpClientAdapter.GetStream
- uid: RabbitMQ.Client.TcpClientAdapter.ReceiveTimeout
  name: ReceiveTimeout
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_ReceiveTimeout
  commentId: P:RabbitMQ.Client.TcpClientAdapter.ReceiveTimeout
  fullName: RabbitMQ.Client.TcpClientAdapter.ReceiveTimeout
  nameWithType: TcpClientAdapter.ReceiveTimeout
- uid: RabbitMQ.Client.TcpClientAdapter.ReceiveTimeout*
  name: ReceiveTimeout
  href: api/RabbitMQ.Client.TcpClientAdapter.html#RabbitMQ_Client_TcpClientAdapter_ReceiveTimeout_
  commentId: Overload:RabbitMQ.Client.TcpClientAdapter.ReceiveTimeout
  isSpec: "True"
  fullName: RabbitMQ.Client.TcpClientAdapter.ReceiveTimeout
  nameWithType: TcpClientAdapter.ReceiveTimeout
- uid: RabbitMQ.Client.ThrottlingRateLimiter
  name: ThrottlingRateLimiter
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html
  commentId: T:RabbitMQ.Client.ThrottlingRateLimiter
  fullName: RabbitMQ.Client.ThrottlingRateLimiter
  nameWithType: ThrottlingRateLimiter
- uid: RabbitMQ.Client.ThrottlingRateLimiter.#ctor(System.Int32,System.Nullable{System.Int32})
  name: ThrottlingRateLimiter(int, int?)
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter__ctor_System_Int32_System_Nullable_System_Int32__
  commentId: M:RabbitMQ.Client.ThrottlingRateLimiter.#ctor(System.Int32,System.Nullable{System.Int32})
  name.vb: New(Integer, Integer?)
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.ThrottlingRateLimiter(int, int?)
  fullName.vb: RabbitMQ.Client.ThrottlingRateLimiter.New(Integer, Integer?)
  nameWithType: ThrottlingRateLimiter.ThrottlingRateLimiter(int, int?)
  nameWithType.vb: ThrottlingRateLimiter.New(Integer, Integer?)
- uid: RabbitMQ.Client.ThrottlingRateLimiter.#ctor*
  name: ThrottlingRateLimiter
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter__ctor_
  commentId: Overload:RabbitMQ.Client.ThrottlingRateLimiter.#ctor
  isSpec: "True"
  name.vb: New
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.ThrottlingRateLimiter
  fullName.vb: RabbitMQ.Client.ThrottlingRateLimiter.New
  nameWithType: ThrottlingRateLimiter.ThrottlingRateLimiter
  nameWithType.vb: ThrottlingRateLimiter.New
- uid: RabbitMQ.Client.ThrottlingRateLimiter.AcquireAsyncCore(System.Int32,System.Threading.CancellationToken)
  name: AcquireAsyncCore(int, CancellationToken)
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_AcquireAsyncCore_System_Int32_System_Threading_CancellationToken_
  commentId: M:RabbitMQ.Client.ThrottlingRateLimiter.AcquireAsyncCore(System.Int32,System.Threading.CancellationToken)
  name.vb: AcquireAsyncCore(Integer, CancellationToken)
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.AcquireAsyncCore(int, System.Threading.CancellationToken)
  fullName.vb: RabbitMQ.Client.ThrottlingRateLimiter.AcquireAsyncCore(Integer, System.Threading.CancellationToken)
  nameWithType: ThrottlingRateLimiter.AcquireAsyncCore(int, CancellationToken)
  nameWithType.vb: ThrottlingRateLimiter.AcquireAsyncCore(Integer, CancellationToken)
- uid: RabbitMQ.Client.ThrottlingRateLimiter.AcquireAsyncCore*
  name: AcquireAsyncCore
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_AcquireAsyncCore_
  commentId: Overload:RabbitMQ.Client.ThrottlingRateLimiter.AcquireAsyncCore
  isSpec: "True"
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.AcquireAsyncCore
  nameWithType: ThrottlingRateLimiter.AcquireAsyncCore
- uid: RabbitMQ.Client.ThrottlingRateLimiter.AttemptAcquireCore(System.Int32)
  name: AttemptAcquireCore(int)
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_AttemptAcquireCore_System_Int32_
  commentId: M:RabbitMQ.Client.ThrottlingRateLimiter.AttemptAcquireCore(System.Int32)
  name.vb: AttemptAcquireCore(Integer)
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.AttemptAcquireCore(int)
  fullName.vb: RabbitMQ.Client.ThrottlingRateLimiter.AttemptAcquireCore(Integer)
  nameWithType: ThrottlingRateLimiter.AttemptAcquireCore(int)
  nameWithType.vb: ThrottlingRateLimiter.AttemptAcquireCore(Integer)
- uid: RabbitMQ.Client.ThrottlingRateLimiter.AttemptAcquireCore*
  name: AttemptAcquireCore
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_AttemptAcquireCore_
  commentId: Overload:RabbitMQ.Client.ThrottlingRateLimiter.AttemptAcquireCore
  isSpec: "True"
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.AttemptAcquireCore
  nameWithType: ThrottlingRateLimiter.AttemptAcquireCore
- uid: RabbitMQ.Client.ThrottlingRateLimiter.DefaultThrottlingPercentage
  name: DefaultThrottlingPercentage
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_DefaultThrottlingPercentage
  commentId: F:RabbitMQ.Client.ThrottlingRateLimiter.DefaultThrottlingPercentage
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.DefaultThrottlingPercentage
  nameWithType: ThrottlingRateLimiter.DefaultThrottlingPercentage
- uid: RabbitMQ.Client.ThrottlingRateLimiter.Dispose(System.Boolean)
  name: Dispose(bool)
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_Dispose_System_Boolean_
  commentId: M:RabbitMQ.Client.ThrottlingRateLimiter.Dispose(System.Boolean)
  name.vb: Dispose(Boolean)
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.Dispose(bool)
  fullName.vb: RabbitMQ.Client.ThrottlingRateLimiter.Dispose(Boolean)
  nameWithType: ThrottlingRateLimiter.Dispose(bool)
  nameWithType.vb: ThrottlingRateLimiter.Dispose(Boolean)
- uid: RabbitMQ.Client.ThrottlingRateLimiter.Dispose*
  name: Dispose
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_Dispose_
  commentId: Overload:RabbitMQ.Client.ThrottlingRateLimiter.Dispose
  isSpec: "True"
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.Dispose
  nameWithType: ThrottlingRateLimiter.Dispose
- uid: RabbitMQ.Client.ThrottlingRateLimiter.GetStatistics
  name: GetStatistics()
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_GetStatistics
  commentId: M:RabbitMQ.Client.ThrottlingRateLimiter.GetStatistics
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.GetStatistics()
  nameWithType: ThrottlingRateLimiter.GetStatistics()
- uid: RabbitMQ.Client.ThrottlingRateLimiter.GetStatistics*
  name: GetStatistics
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_GetStatistics_
  commentId: Overload:RabbitMQ.Client.ThrottlingRateLimiter.GetStatistics
  isSpec: "True"
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.GetStatistics
  nameWithType: ThrottlingRateLimiter.GetStatistics
- uid: RabbitMQ.Client.ThrottlingRateLimiter.IdleDuration
  name: IdleDuration
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_IdleDuration
  commentId: P:RabbitMQ.Client.ThrottlingRateLimiter.IdleDuration
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.IdleDuration
  nameWithType: ThrottlingRateLimiter.IdleDuration
- uid: RabbitMQ.Client.ThrottlingRateLimiter.IdleDuration*
  name: IdleDuration
  href: api/RabbitMQ.Client.ThrottlingRateLimiter.html#RabbitMQ_Client_ThrottlingRateLimiter_IdleDuration_
  commentId: Overload:RabbitMQ.Client.ThrottlingRateLimiter.IdleDuration
  isSpec: "True"
  fullName: RabbitMQ.Client.ThrottlingRateLimiter.IdleDuration
  nameWithType: ThrottlingRateLimiter.IdleDuration
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler
  name: TopologyRecoveryExceptionHandler
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html
  commentId: T:RabbitMQ.Client.TopologyRecoveryExceptionHandler
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler
  nameWithType: TopologyRecoveryExceptionHandler
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionCondition
  name: BindingRecoveryExceptionCondition
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_BindingRecoveryExceptionCondition
  commentId: P:RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionCondition
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionCondition
  nameWithType: TopologyRecoveryExceptionHandler.BindingRecoveryExceptionCondition
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionCondition*
  name: BindingRecoveryExceptionCondition
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_BindingRecoveryExceptionCondition_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionCondition
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionCondition
  nameWithType: TopologyRecoveryExceptionHandler.BindingRecoveryExceptionCondition
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionHandlerAsync
  name: BindingRecoveryExceptionHandlerAsync
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_BindingRecoveryExceptionHandlerAsync
  commentId: P:RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionHandlerAsync
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionHandlerAsync
  nameWithType: TopologyRecoveryExceptionHandler.BindingRecoveryExceptionHandlerAsync
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionHandlerAsync*
  name: BindingRecoveryExceptionHandlerAsync
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_BindingRecoveryExceptionHandlerAsync_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionHandlerAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.BindingRecoveryExceptionHandlerAsync
  nameWithType: TopologyRecoveryExceptionHandler.BindingRecoveryExceptionHandlerAsync
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionCondition
  name: ConsumerRecoveryExceptionCondition
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_ConsumerRecoveryExceptionCondition
  commentId: P:RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionCondition
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionCondition
  nameWithType: TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionCondition
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionCondition*
  name: ConsumerRecoveryExceptionCondition
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_ConsumerRecoveryExceptionCondition_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionCondition
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionCondition
  nameWithType: TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionCondition
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionHandlerAsync
  name: ConsumerRecoveryExceptionHandlerAsync
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_ConsumerRecoveryExceptionHandlerAsync
  commentId: P:RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionHandlerAsync
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionHandlerAsync
  nameWithType: TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionHandlerAsync
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionHandlerAsync*
  name: ConsumerRecoveryExceptionHandlerAsync
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_ConsumerRecoveryExceptionHandlerAsync_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionHandlerAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionHandlerAsync
  nameWithType: TopologyRecoveryExceptionHandler.ConsumerRecoveryExceptionHandlerAsync
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionCondition
  name: ExchangeRecoveryExceptionCondition
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_ExchangeRecoveryExceptionCondition
  commentId: P:RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionCondition
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionCondition
  nameWithType: TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionCondition
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionCondition*
  name: ExchangeRecoveryExceptionCondition
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_ExchangeRecoveryExceptionCondition_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionCondition
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionCondition
  nameWithType: TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionCondition
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionHandlerAsync
  name: ExchangeRecoveryExceptionHandlerAsync
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_ExchangeRecoveryExceptionHandlerAsync
  commentId: P:RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionHandlerAsync
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionHandlerAsync
  nameWithType: TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionHandlerAsync
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionHandlerAsync*
  name: ExchangeRecoveryExceptionHandlerAsync
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_ExchangeRecoveryExceptionHandlerAsync_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionHandlerAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionHandlerAsync
  nameWithType: TopologyRecoveryExceptionHandler.ExchangeRecoveryExceptionHandlerAsync
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionCondition
  name: QueueRecoveryExceptionCondition
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_QueueRecoveryExceptionCondition
  commentId: P:RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionCondition
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionCondition
  nameWithType: TopologyRecoveryExceptionHandler.QueueRecoveryExceptionCondition
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionCondition*
  name: QueueRecoveryExceptionCondition
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_QueueRecoveryExceptionCondition_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionCondition
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionCondition
  nameWithType: TopologyRecoveryExceptionHandler.QueueRecoveryExceptionCondition
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionHandlerAsync
  name: QueueRecoveryExceptionHandlerAsync
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_QueueRecoveryExceptionHandlerAsync
  commentId: P:RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionHandlerAsync
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionHandlerAsync
  nameWithType: TopologyRecoveryExceptionHandler.QueueRecoveryExceptionHandlerAsync
- uid: RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionHandlerAsync*
  name: QueueRecoveryExceptionHandlerAsync
  href: api/RabbitMQ.Client.TopologyRecoveryExceptionHandler.html#RabbitMQ_Client_TopologyRecoveryExceptionHandler_QueueRecoveryExceptionHandlerAsync_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionHandlerAsync
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryExceptionHandler.QueueRecoveryExceptionHandlerAsync
  nameWithType: TopologyRecoveryExceptionHandler.QueueRecoveryExceptionHandlerAsync
- uid: RabbitMQ.Client.TopologyRecoveryFilter
  name: TopologyRecoveryFilter
  href: api/RabbitMQ.Client.TopologyRecoveryFilter.html
  commentId: T:RabbitMQ.Client.TopologyRecoveryFilter
  fullName: RabbitMQ.Client.TopologyRecoveryFilter
  nameWithType: TopologyRecoveryFilter
- uid: RabbitMQ.Client.TopologyRecoveryFilter.BindingFilter
  name: BindingFilter
  href: api/RabbitMQ.Client.TopologyRecoveryFilter.html#RabbitMQ_Client_TopologyRecoveryFilter_BindingFilter
  commentId: P:RabbitMQ.Client.TopologyRecoveryFilter.BindingFilter
  fullName: RabbitMQ.Client.TopologyRecoveryFilter.BindingFilter
  nameWithType: TopologyRecoveryFilter.BindingFilter
- uid: RabbitMQ.Client.TopologyRecoveryFilter.BindingFilter*
  name: BindingFilter
  href: api/RabbitMQ.Client.TopologyRecoveryFilter.html#RabbitMQ_Client_TopologyRecoveryFilter_BindingFilter_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryFilter.BindingFilter
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryFilter.BindingFilter
  nameWithType: TopologyRecoveryFilter.BindingFilter
- uid: RabbitMQ.Client.TopologyRecoveryFilter.ConsumerFilter
  name: ConsumerFilter
  href: api/RabbitMQ.Client.TopologyRecoveryFilter.html#RabbitMQ_Client_TopologyRecoveryFilter_ConsumerFilter
  commentId: P:RabbitMQ.Client.TopologyRecoveryFilter.ConsumerFilter
  fullName: RabbitMQ.Client.TopologyRecoveryFilter.ConsumerFilter
  nameWithType: TopologyRecoveryFilter.ConsumerFilter
- uid: RabbitMQ.Client.TopologyRecoveryFilter.ConsumerFilter*
  name: ConsumerFilter
  href: api/RabbitMQ.Client.TopologyRecoveryFilter.html#RabbitMQ_Client_TopologyRecoveryFilter_ConsumerFilter_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryFilter.ConsumerFilter
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryFilter.ConsumerFilter
  nameWithType: TopologyRecoveryFilter.ConsumerFilter
- uid: RabbitMQ.Client.TopologyRecoveryFilter.ExchangeFilter
  name: ExchangeFilter
  href: api/RabbitMQ.Client.TopologyRecoveryFilter.html#RabbitMQ_Client_TopologyRecoveryFilter_ExchangeFilter
  commentId: P:RabbitMQ.Client.TopologyRecoveryFilter.ExchangeFilter
  fullName: RabbitMQ.Client.TopologyRecoveryFilter.ExchangeFilter
  nameWithType: TopologyRecoveryFilter.ExchangeFilter
- uid: RabbitMQ.Client.TopologyRecoveryFilter.ExchangeFilter*
  name: ExchangeFilter
  href: api/RabbitMQ.Client.TopologyRecoveryFilter.html#RabbitMQ_Client_TopologyRecoveryFilter_ExchangeFilter_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryFilter.ExchangeFilter
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryFilter.ExchangeFilter
  nameWithType: TopologyRecoveryFilter.ExchangeFilter
- uid: RabbitMQ.Client.TopologyRecoveryFilter.QueueFilter
  name: QueueFilter
  href: api/RabbitMQ.Client.TopologyRecoveryFilter.html#RabbitMQ_Client_TopologyRecoveryFilter_QueueFilter
  commentId: P:RabbitMQ.Client.TopologyRecoveryFilter.QueueFilter
  fullName: RabbitMQ.Client.TopologyRecoveryFilter.QueueFilter
  nameWithType: TopologyRecoveryFilter.QueueFilter
- uid: RabbitMQ.Client.TopologyRecoveryFilter.QueueFilter*
  name: QueueFilter
  href: api/RabbitMQ.Client.TopologyRecoveryFilter.html#RabbitMQ_Client_TopologyRecoveryFilter_QueueFilter_
  commentId: Overload:RabbitMQ.Client.TopologyRecoveryFilter.QueueFilter
  isSpec: "True"
  fullName: RabbitMQ.Client.TopologyRecoveryFilter.QueueFilter
  nameWithType: TopologyRecoveryFilter.QueueFilter
